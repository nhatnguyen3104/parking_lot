

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Wed Oct 22 23:24:26 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=3
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=3
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=3
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,space=0,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Generated 12/10/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0004                     fsr             equ	4
    87     0004                     fsr0            equ	4
    88     0000                     indf            equ	0
    89     0000                     indf0           equ	0
    90     0002                     pc              equ	2
    91     0002                     pcl             equ	2
    92     000A                     pclath          equ	10
    93     0003                     status          equ	3
    94     0000                     INDF            equ	0	;# 
    95     0001                     TMR0            equ	1	;# 
    96     0002                     PCL             equ	2	;# 
    97     0003                     STATUS          equ	3	;# 
    98     0004                     FSR             equ	4	;# 
    99     0005                     PORTA           equ	5	;# 
   100     0006                     PORTB           equ	6	;# 
   101     0007                     PORTC           equ	7	;# 
   102     0008                     PORTD           equ	8	;# 
   103     0009                     PORTE           equ	9	;# 
   104     000A                     PCLATH          equ	10	;# 
   105     000B                     INTCON          equ	11	;# 
   106     000C                     PIR1            equ	12	;# 
   107     000D                     PIR2            equ	13	;# 
   108     000E                     TMR1            equ	14	;# 
   109     000E                     TMR1L           equ	14	;# 
   110     000F                     TMR1H           equ	15	;# 
   111     0010                     T1CON           equ	16	;# 
   112     0011                     TMR2            equ	17	;# 
   113     0012                     T2CON           equ	18	;# 
   114     0013                     SSPBUF          equ	19	;# 
   115     0014                     SSPCON          equ	20	;# 
   116     0015                     CCPR1           equ	21	;# 
   117     0015                     CCPR1L          equ	21	;# 
   118     0016                     CCPR1H          equ	22	;# 
   119     0017                     CCP1CON         equ	23	;# 
   120     0018                     RCSTA           equ	24	;# 
   121     0019                     TXREG           equ	25	;# 
   122     001A                     RCREG           equ	26	;# 
   123     001B                     CCPR2           equ	27	;# 
   124     001B                     CCPR2L          equ	27	;# 
   125     001C                     CCPR2H          equ	28	;# 
   126     001D                     CCP2CON         equ	29	;# 
   127     001E                     ADRESH          equ	30	;# 
   128     001F                     ADCON0          equ	31	;# 
   129     0081                     OPTION_REG      equ	129	;# 
   130     0085                     TRISA           equ	133	;# 
   131     0086                     TRISB           equ	134	;# 
   132     0087                     TRISC           equ	135	;# 
   133     0088                     TRISD           equ	136	;# 
   134     0089                     TRISE           equ	137	;# 
   135     008C                     PIE1            equ	140	;# 
   136     008D                     PIE2            equ	141	;# 
   137     008E                     PCON            equ	142	;# 
   138     0091                     SSPCON2         equ	145	;# 
   139     0092                     PR2             equ	146	;# 
   140     0093                     SSPADD          equ	147	;# 
   141     0094                     SSPSTAT         equ	148	;# 
   142     0098                     TXSTA           equ	152	;# 
   143     0099                     SPBRG           equ	153	;# 
   144     009C                     CMCON           equ	156	;# 
   145     009D                     CVRCON          equ	157	;# 
   146     009E                     ADRESL          equ	158	;# 
   147     009F                     ADCON1          equ	159	;# 
   148     010C                     EEDATA          equ	268	;# 
   149     010D                     EEADR           equ	269	;# 
   150     010E                     EEDATH          equ	270	;# 
   151     010F                     EEADRH          equ	271	;# 
   152     018C                     EECON1          equ	396	;# 
   153     018D                     EECON2          equ	397	;# 
   154     0000                     INDF            equ	0	;# 
   155     0001                     TMR0            equ	1	;# 
   156     0002                     PCL             equ	2	;# 
   157     0003                     STATUS          equ	3	;# 
   158     0004                     FSR             equ	4	;# 
   159     0005                     PORTA           equ	5	;# 
   160     0006                     PORTB           equ	6	;# 
   161     0007                     PORTC           equ	7	;# 
   162     0008                     PORTD           equ	8	;# 
   163     0009                     PORTE           equ	9	;# 
   164     000A                     PCLATH          equ	10	;# 
   165     000B                     INTCON          equ	11	;# 
   166     000C                     PIR1            equ	12	;# 
   167     000D                     PIR2            equ	13	;# 
   168     000E                     TMR1            equ	14	;# 
   169     000E                     TMR1L           equ	14	;# 
   170     000F                     TMR1H           equ	15	;# 
   171     0010                     T1CON           equ	16	;# 
   172     0011                     TMR2            equ	17	;# 
   173     0012                     T2CON           equ	18	;# 
   174     0013                     SSPBUF          equ	19	;# 
   175     0014                     SSPCON          equ	20	;# 
   176     0015                     CCPR1           equ	21	;# 
   177     0015                     CCPR1L          equ	21	;# 
   178     0016                     CCPR1H          equ	22	;# 
   179     0017                     CCP1CON         equ	23	;# 
   180     0018                     RCSTA           equ	24	;# 
   181     0019                     TXREG           equ	25	;# 
   182     001A                     RCREG           equ	26	;# 
   183     001B                     CCPR2           equ	27	;# 
   184     001B                     CCPR2L          equ	27	;# 
   185     001C                     CCPR2H          equ	28	;# 
   186     001D                     CCP2CON         equ	29	;# 
   187     001E                     ADRESH          equ	30	;# 
   188     001F                     ADCON0          equ	31	;# 
   189     0081                     OPTION_REG      equ	129	;# 
   190     0085                     TRISA           equ	133	;# 
   191     0086                     TRISB           equ	134	;# 
   192     0087                     TRISC           equ	135	;# 
   193     0088                     TRISD           equ	136	;# 
   194     0089                     TRISE           equ	137	;# 
   195     008C                     PIE1            equ	140	;# 
   196     008D                     PIE2            equ	141	;# 
   197     008E                     PCON            equ	142	;# 
   198     0091                     SSPCON2         equ	145	;# 
   199     0092                     PR2             equ	146	;# 
   200     0093                     SSPADD          equ	147	;# 
   201     0094                     SSPSTAT         equ	148	;# 
   202     0098                     TXSTA           equ	152	;# 
   203     0099                     SPBRG           equ	153	;# 
   204     009C                     CMCON           equ	156	;# 
   205     009D                     CVRCON          equ	157	;# 
   206     009E                     ADRESL          equ	158	;# 
   207     009F                     ADCON1          equ	159	;# 
   208     010C                     EEDATA          equ	268	;# 
   209     010D                     EEADR           equ	269	;# 
   210     010E                     EEDATH          equ	270	;# 
   211     010F                     EEADRH          equ	271	;# 
   212     018C                     EECON1          equ	396	;# 
   213     018D                     EECON2          equ	397	;# 
   214     0000                     INDF            equ	0	;# 
   215     0001                     TMR0            equ	1	;# 
   216     0002                     PCL             equ	2	;# 
   217     0003                     STATUS          equ	3	;# 
   218     0004                     FSR             equ	4	;# 
   219     0005                     PORTA           equ	5	;# 
   220     0006                     PORTB           equ	6	;# 
   221     0007                     PORTC           equ	7	;# 
   222     0008                     PORTD           equ	8	;# 
   223     0009                     PORTE           equ	9	;# 
   224     000A                     PCLATH          equ	10	;# 
   225     000B                     INTCON          equ	11	;# 
   226     000C                     PIR1            equ	12	;# 
   227     000D                     PIR2            equ	13	;# 
   228     000E                     TMR1            equ	14	;# 
   229     000E                     TMR1L           equ	14	;# 
   230     000F                     TMR1H           equ	15	;# 
   231     0010                     T1CON           equ	16	;# 
   232     0011                     TMR2            equ	17	;# 
   233     0012                     T2CON           equ	18	;# 
   234     0013                     SSPBUF          equ	19	;# 
   235     0014                     SSPCON          equ	20	;# 
   236     0015                     CCPR1           equ	21	;# 
   237     0015                     CCPR1L          equ	21	;# 
   238     0016                     CCPR1H          equ	22	;# 
   239     0017                     CCP1CON         equ	23	;# 
   240     0018                     RCSTA           equ	24	;# 
   241     0019                     TXREG           equ	25	;# 
   242     001A                     RCREG           equ	26	;# 
   243     001B                     CCPR2           equ	27	;# 
   244     001B                     CCPR2L          equ	27	;# 
   245     001C                     CCPR2H          equ	28	;# 
   246     001D                     CCP2CON         equ	29	;# 
   247     001E                     ADRESH          equ	30	;# 
   248     001F                     ADCON0          equ	31	;# 
   249     0081                     OPTION_REG      equ	129	;# 
   250     0085                     TRISA           equ	133	;# 
   251     0086                     TRISB           equ	134	;# 
   252     0087                     TRISC           equ	135	;# 
   253     0088                     TRISD           equ	136	;# 
   254     0089                     TRISE           equ	137	;# 
   255     008C                     PIE1            equ	140	;# 
   256     008D                     PIE2            equ	141	;# 
   257     008E                     PCON            equ	142	;# 
   258     0091                     SSPCON2         equ	145	;# 
   259     0092                     PR2             equ	146	;# 
   260     0093                     SSPADD          equ	147	;# 
   261     0094                     SSPSTAT         equ	148	;# 
   262     0098                     TXSTA           equ	152	;# 
   263     0099                     SPBRG           equ	153	;# 
   264     009C                     CMCON           equ	156	;# 
   265     009D                     CVRCON          equ	157	;# 
   266     009E                     ADRESL          equ	158	;# 
   267     009F                     ADCON1          equ	159	;# 
   268     010C                     EEDATA          equ	268	;# 
   269     010D                     EEADR           equ	269	;# 
   270     010E                     EEDATH          equ	270	;# 
   271     010F                     EEADRH          equ	271	;# 
   272     018C                     EECON1          equ	396	;# 
   273     018D                     EECON2          equ	397	;# 
   274     0000                     INDF            equ	0	;# 
   275     0001                     TMR0            equ	1	;# 
   276     0002                     PCL             equ	2	;# 
   277     0003                     STATUS          equ	3	;# 
   278     0004                     FSR             equ	4	;# 
   279     0005                     PORTA           equ	5	;# 
   280     0006                     PORTB           equ	6	;# 
   281     0007                     PORTC           equ	7	;# 
   282     0008                     PORTD           equ	8	;# 
   283     0009                     PORTE           equ	9	;# 
   284     000A                     PCLATH          equ	10	;# 
   285     000B                     INTCON          equ	11	;# 
   286     000C                     PIR1            equ	12	;# 
   287     000D                     PIR2            equ	13	;# 
   288     000E                     TMR1            equ	14	;# 
   289     000E                     TMR1L           equ	14	;# 
   290     000F                     TMR1H           equ	15	;# 
   291     0010                     T1CON           equ	16	;# 
   292     0011                     TMR2            equ	17	;# 
   293     0012                     T2CON           equ	18	;# 
   294     0013                     SSPBUF          equ	19	;# 
   295     0014                     SSPCON          equ	20	;# 
   296     0015                     CCPR1           equ	21	;# 
   297     0015                     CCPR1L          equ	21	;# 
   298     0016                     CCPR1H          equ	22	;# 
   299     0017                     CCP1CON         equ	23	;# 
   300     0018                     RCSTA           equ	24	;# 
   301     0019                     TXREG           equ	25	;# 
   302     001A                     RCREG           equ	26	;# 
   303     001B                     CCPR2           equ	27	;# 
   304     001B                     CCPR2L          equ	27	;# 
   305     001C                     CCPR2H          equ	28	;# 
   306     001D                     CCP2CON         equ	29	;# 
   307     001E                     ADRESH          equ	30	;# 
   308     001F                     ADCON0          equ	31	;# 
   309     0081                     OPTION_REG      equ	129	;# 
   310     0085                     TRISA           equ	133	;# 
   311     0086                     TRISB           equ	134	;# 
   312     0087                     TRISC           equ	135	;# 
   313     0088                     TRISD           equ	136	;# 
   314     0089                     TRISE           equ	137	;# 
   315     008C                     PIE1            equ	140	;# 
   316     008D                     PIE2            equ	141	;# 
   317     008E                     PCON            equ	142	;# 
   318     0091                     SSPCON2         equ	145	;# 
   319     0092                     PR2             equ	146	;# 
   320     0093                     SSPADD          equ	147	;# 
   321     0094                     SSPSTAT         equ	148	;# 
   322     0098                     TXSTA           equ	152	;# 
   323     0099                     SPBRG           equ	153	;# 
   324     009C                     CMCON           equ	156	;# 
   325     009D                     CVRCON          equ	157	;# 
   326     009E                     ADRESL          equ	158	;# 
   327     009F                     ADCON1          equ	159	;# 
   328     010C                     EEDATA          equ	268	;# 
   329     010D                     EEADR           equ	269	;# 
   330     010E                     EEDATH          equ	270	;# 
   331     010F                     EEADRH          equ	271	;# 
   332     018C                     EECON1          equ	396	;# 
   333     018D                     EECON2          equ	397	;# 
   334     0000                     INDF            equ	0	;# 
   335     0001                     TMR0            equ	1	;# 
   336     0002                     PCL             equ	2	;# 
   337     0003                     STATUS          equ	3	;# 
   338     0004                     FSR             equ	4	;# 
   339     0005                     PORTA           equ	5	;# 
   340     0006                     PORTB           equ	6	;# 
   341     0007                     PORTC           equ	7	;# 
   342     0008                     PORTD           equ	8	;# 
   343     0009                     PORTE           equ	9	;# 
   344     000A                     PCLATH          equ	10	;# 
   345     000B                     INTCON          equ	11	;# 
   346     000C                     PIR1            equ	12	;# 
   347     000D                     PIR2            equ	13	;# 
   348     000E                     TMR1            equ	14	;# 
   349     000E                     TMR1L           equ	14	;# 
   350     000F                     TMR1H           equ	15	;# 
   351     0010                     T1CON           equ	16	;# 
   352     0011                     TMR2            equ	17	;# 
   353     0012                     T2CON           equ	18	;# 
   354     0013                     SSPBUF          equ	19	;# 
   355     0014                     SSPCON          equ	20	;# 
   356     0015                     CCPR1           equ	21	;# 
   357     0015                     CCPR1L          equ	21	;# 
   358     0016                     CCPR1H          equ	22	;# 
   359     0017                     CCP1CON         equ	23	;# 
   360     0018                     RCSTA           equ	24	;# 
   361     0019                     TXREG           equ	25	;# 
   362     001A                     RCREG           equ	26	;# 
   363     001B                     CCPR2           equ	27	;# 
   364     001B                     CCPR2L          equ	27	;# 
   365     001C                     CCPR2H          equ	28	;# 
   366     001D                     CCP2CON         equ	29	;# 
   367     001E                     ADRESH          equ	30	;# 
   368     001F                     ADCON0          equ	31	;# 
   369     0081                     OPTION_REG      equ	129	;# 
   370     0085                     TRISA           equ	133	;# 
   371     0086                     TRISB           equ	134	;# 
   372     0087                     TRISC           equ	135	;# 
   373     0088                     TRISD           equ	136	;# 
   374     0089                     TRISE           equ	137	;# 
   375     008C                     PIE1            equ	140	;# 
   376     008D                     PIE2            equ	141	;# 
   377     008E                     PCON            equ	142	;# 
   378     0091                     SSPCON2         equ	145	;# 
   379     0092                     PR2             equ	146	;# 
   380     0093                     SSPADD          equ	147	;# 
   381     0094                     SSPSTAT         equ	148	;# 
   382     0098                     TXSTA           equ	152	;# 
   383     0099                     SPBRG           equ	153	;# 
   384     009C                     CMCON           equ	156	;# 
   385     009D                     CVRCON          equ	157	;# 
   386     009E                     ADRESL          equ	158	;# 
   387     009F                     ADCON1          equ	159	;# 
   388     010C                     EEDATA          equ	268	;# 
   389     010D                     EEADR           equ	269	;# 
   390     010E                     EEDATH          equ	270	;# 
   391     010F                     EEADRH          equ	271	;# 
   392     018C                     EECON1          equ	396	;# 
   393     018D                     EECON2          equ	397	;# 
   394     0000                     INDF            equ	0	;# 
   395     0001                     TMR0            equ	1	;# 
   396     0002                     PCL             equ	2	;# 
   397     0003                     STATUS          equ	3	;# 
   398     0004                     FSR             equ	4	;# 
   399     0005                     PORTA           equ	5	;# 
   400     0006                     PORTB           equ	6	;# 
   401     0007                     PORTC           equ	7	;# 
   402     0008                     PORTD           equ	8	;# 
   403     0009                     PORTE           equ	9	;# 
   404     000A                     PCLATH          equ	10	;# 
   405     000B                     INTCON          equ	11	;# 
   406     000C                     PIR1            equ	12	;# 
   407     000D                     PIR2            equ	13	;# 
   408     000E                     TMR1            equ	14	;# 
   409     000E                     TMR1L           equ	14	;# 
   410     000F                     TMR1H           equ	15	;# 
   411     0010                     T1CON           equ	16	;# 
   412     0011                     TMR2            equ	17	;# 
   413     0012                     T2CON           equ	18	;# 
   414     0013                     SSPBUF          equ	19	;# 
   415     0014                     SSPCON          equ	20	;# 
   416     0015                     CCPR1           equ	21	;# 
   417     0015                     CCPR1L          equ	21	;# 
   418     0016                     CCPR1H          equ	22	;# 
   419     0017                     CCP1CON         equ	23	;# 
   420     0018                     RCSTA           equ	24	;# 
   421     0019                     TXREG           equ	25	;# 
   422     001A                     RCREG           equ	26	;# 
   423     001B                     CCPR2           equ	27	;# 
   424     001B                     CCPR2L          equ	27	;# 
   425     001C                     CCPR2H          equ	28	;# 
   426     001D                     CCP2CON         equ	29	;# 
   427     001E                     ADRESH          equ	30	;# 
   428     001F                     ADCON0          equ	31	;# 
   429     0081                     OPTION_REG      equ	129	;# 
   430     0085                     TRISA           equ	133	;# 
   431     0086                     TRISB           equ	134	;# 
   432     0087                     TRISC           equ	135	;# 
   433     0088                     TRISD           equ	136	;# 
   434     0089                     TRISE           equ	137	;# 
   435     008C                     PIE1            equ	140	;# 
   436     008D                     PIE2            equ	141	;# 
   437     008E                     PCON            equ	142	;# 
   438     0091                     SSPCON2         equ	145	;# 
   439     0092                     PR2             equ	146	;# 
   440     0093                     SSPADD          equ	147	;# 
   441     0094                     SSPSTAT         equ	148	;# 
   442     0098                     TXSTA           equ	152	;# 
   443     0099                     SPBRG           equ	153	;# 
   444     009C                     CMCON           equ	156	;# 
   445     009D                     CVRCON          equ	157	;# 
   446     009E                     ADRESL          equ	158	;# 
   447     009F                     ADCON1          equ	159	;# 
   448     010C                     EEDATA          equ	268	;# 
   449     010D                     EEADR           equ	269	;# 
   450     010E                     EEDATH          equ	270	;# 
   451     010F                     EEADRH          equ	271	;# 
   452     018C                     EECON1          equ	396	;# 
   453     018D                     EECON2          equ	397	;# 
   454     001A                     _RCREG          set	26
   455     000E                     _TMR1L          set	14
   456     000F                     _TMR1H          set	15
   457     0010                     _T1CONbits      set	16
   458     000C                     _PIR1bits       set	12
   459     000B                     _INTCONbits     set	11
   460     0005                     _PORTAbits      set	5
   461     0006                     _PORTBbits      set	6
   462     0007                     _PORTCbits      set	7
   463     0065                     _RCIF           set	101
   464     00C4                     _CREN           set	196
   465     00C7                     _SPEN           set	199
   466     0099                     _SPBRG          set	153
   467     0086                     _TRISB          set	134
   468     0088                     _TRISD          set	136
   469     008C                     _PIE1bits       set	140
   470     0085                     _TRISAbits      set	133
   471     0086                     _TRISBbits      set	134
   472     0087                     _TRISCbits      set	135
   473     04C5                     _TXEN           set	1221
   474     04C4                     _SYNC           set	1220
   475     04C2                     _BRGH           set	1218
   476     043F                     _TRISC7         set	1087
   477     043E                     _TRISC6         set	1086
   478                           
   479                           	psect	strings
   480     0800                     __pstrings:
   481     0800                     stringtab:
   482     0800                     __stringtab:
   483     0800                     stringcode:	
   484                           ;	String table - string pointers are 1 byte each
   485                           
   486     0800                     stringdir:
   487     0800  3008               	movlw	high stringdir
   488     0801  008A               	movwf	10
   489     0802  0804               	movf	4,w
   490     0803  0A84               	incf	4,f
   491     0804  0782               	addwf	2,f
   492     0805                     __stringbase:
   493     0805  3400               	retlw	0
   494     0806                     __end_of__stringtab:
   495     0806                     STR_1:
   496     0806  3425               	retlw	37	;'%'
   497     0807  3468               	retlw	104	;'h'
   498     0808  3468               	retlw	104	;'h'
   499     0809  3475               	retlw	117	;'u'
   500     080A  342C               	retlw	44	;','
   501     080B  3425               	retlw	37	;'%'
   502     080C  3468               	retlw	104	;'h'
   503     080D  3468               	retlw	104	;'h'
   504     080E  3475               	retlw	117	;'u'
   505     080F  342C               	retlw	44	;','
   506     0810  3425               	retlw	37	;'%'
   507     0811  3468               	retlw	104	;'h'
   508     0812  3468               	retlw	104	;'h'
   509     0813  3475               	retlw	117	;'u'
   510     0814  342C               	retlw	44	;','
   511     0815  3425               	retlw	37	;'%'
   512     0816  3468               	retlw	104	;'h'
   513     0817  3468               	retlw	104	;'h'
   514     0818  3475               	retlw	117	;'u'
   515     0819  3400               	retlw	0
   516     0816                     STR_2           equ	STR_1+16
   517     0816                     STR_3           equ	STR_1+16
   518     0816                     STR_4           equ	STR_1+16
   519     0816                     STR_5           equ	STR_1+16
   520     0816                     STR_6           equ	STR_1+16
   521                           
   522                           	psect	cinit
   523     000F                     start_initialization:	
   524                           ; #config settings
   525                           
   526     000F                     __initialization:
   527                           
   528                           ; Clear objects allocated to COMMON
   529     000F  01FB               	clrf	__pbssCOMMON& (0+127)
   530                           
   531                           ; Clear objects allocated to BANK0
   532     0010  1283               	bcf	3,5	;RP0=0, select bank0
   533     0011  1303               	bcf	3,6	;RP1=0, select bank0
   534     0012  01EF               	clrf	__pbssBANK0& (0+127)
   535                           
   536                           ; Clear objects allocated to BANK1
   537     0013  1383               	bcf	3,7	;select IRP bank0
   538     0014  30A0               	movlw	low __pbssBANK1
   539     0015  0084               	movwf	4
   540     0016  30C9               	movlw	low (__pbssBANK1+41)
   541     0017  120A  158A  234B  120A  118A  	fcall	clear_ram0
   542                           
   543                           ; Clear objects allocated to BANK3
   544     001C  1783               	bsf	3,7	;select IRP bank2
   545     001D  3090               	movlw	low __pbssBANK3
   546     001E  0084               	movwf	4
   547     001F  30B0               	movlw	low (__pbssBANK3+32)
   548     0020  120A  158A  234B  120A  118A  	fcall	clear_ram0
   549     0025                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552     0025                     __end_of__initialization:
   553     0025  0183               	clrf	3
   554     0026  120A  118A  2E74   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMMON
   557     007B                     __pbssCOMMON:
   558     007B                     ___ungetcnt:
   559     007B                     	ds	1
   560                           
   561                           	psect	bssBANK0
   562     006F                     __pbssBANK0:
   563     006F                     _asup:
   564     006F                     	ds	1
   565                           
   566                           	psect	bssBANK1
   567     00A0                     __pbssBANK1:
   568     00A0                     ___ungetbuf:
   569     00A0                     	ds	3
   570     00A3                     _nmatch:
   571     00A3                     	ds	2
   572     00A5                     _ncnv:
   573     00A5                     	ds	2
   574     00A7                     _width:
   575     00A7                     	ds	2
   576     00A9                     _errno:
   577     00A9                     	ds	2
   578     00AB                     _count:
   579     00AB                     	ds	2
   580     00AD                     _servo1_delay_ticks:
   581     00AD                     	ds	2
   582     00AF                     _idx:
   583     00AF                     	ds	1
   584     00B0                     _all_full:
   585     00B0                     	ds	1
   586     00B1                     _servo2_waiting:
   587     00B1                     	ds	1
   588     00B2                     _servo2_open:
   589     00B2                     	ds	1
   590     00B3                     _servo1_open:
   591     00B3                     	ds	1
   592     00B4                     _servo2_delay_ticks:
   593     00B4                     	ds	1
   594     00B5                     _buffer:
   595     00B5                     	ds	20
   596                           
   597                           	psect	bssBANK3
   598     0190                     __pbssBANK3:
   599     0190                     _dbuf:
   600     0190                     	ds	32
   601                           
   602                           	psect	clrtext
   603     0B4B                     clear_ram0:	
   604                           ;	Called with FSR containing the base address, and
   605                           ;	W with the last address+1
   606                           
   607     0B4B  0064               	clrwdt	;clear the watchdog before getting into this loop
   608     0B4C                     clrloop0:
   609     0B4C  0180               	clrf	0	;clear RAM location pointed to by FSR
   610     0B4D  0A84               	incf	4,f	;increment pointer
   611     0B4E  0604               	xorwf	4,w	;XOR with final address
   612     0B4F  1903               	btfsc	3,2	;have we reached the end yet?
   613     0B50  3400               	retlw	0	;all done for this memory range, return
   614     0B51  0604               	xorwf	4,w	;XOR again to restore value
   615     0B52  2B4C               	goto	clrloop0	;do the next byte
   616                           
   617                           	psect	cstackBANK1
   618     00C9                     __pcstackBANK1:
   619     00C9                     sscanf@ret:
   620                           
   621                           ; 2 bytes @ 0x0
   622     00C9                     	ds	2
   623     00CB                     sscanf@ap:
   624                           
   625                           ; 1 bytes @ 0x2
   626     00CB                     	ds	1
   627     00CC                     sscanf@f:
   628                           
   629                           ; 11 bytes @ 0x3
   630     00CC                     	ds	11
   631     00D7                     ESP32_UART_Update@c:
   632                           
   633                           ; 1 bytes @ 0xE
   634     00D7                     	ds	1
   635     00D8                     ESP32_UART_Update@s1:
   636                           
   637                           ; 1 bytes @ 0xF
   638     00D8                     	ds	1
   639     00D9                     ESP32_UART_Update@s2:
   640                           
   641                           ; 1 bytes @ 0x10
   642     00D9                     	ds	1
   643     00DA                     ESP32_UART_Update@s3:
   644                           
   645                           ; 1 bytes @ 0x11
   646     00DA                     	ds	1
   647     00DB                     ESP32_UART_Update@s4:
   648                           
   649                           ; 1 bytes @ 0x12
   650     00DB                     	ds	1
   651     00DC                     main@cardFound:
   652                           
   653                           ; 1 bytes @ 0x13
   654     00DC                     	ds	1
   655     00DD                     main@object_detected:
   656                           
   657                           ; 1 bytes @ 0x14
   658     00DD                     	ds	1
   659                           
   660                           	psect	cstackCOMMON
   661     0070                     __pcstackCOMMON:
   662     0070                     ?_ESP32_UART_Init:
   663     0070                     ?_ESP32_UART_Update:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_ESP32_AllFull:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_RFID_Read:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_RFID_Init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_RFID_CheckCard:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_Servo1_Init:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_Servo1_Open:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Servo1_Close:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_Servo2_Init:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_Servo2_Open:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_Servo2_Close:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?_Sensor_Init:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?_Sensor_ReadObstacle:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_Sensor_ReadIR:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?_Interrupts_Init:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     ?_Timer1_Init:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     ?_main:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ?_ISR:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ?_UART_DataReady:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ?_UART_Read:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ??_ISR:	
   724                           ; 1 bytes @ 0x0
   725                           
   726                           
   727                           ; 1 bytes @ 0x0
   728     0070                     	ds	2
   729     0072                     ?_ungetc:
   730     0072                     ?_strncmp:	
   731                           ; 2 bytes @ 0x2
   732                           
   733     0072                     ?_getch:	
   734                           ; 2 bytes @ 0x2
   735                           
   736     0072                     ?___lmul:	
   737                           ; 2 bytes @ 0x2
   738                           
   739     0072                     strncmp@l:	
   740                           ; 4 bytes @ 0x2
   741                           
   742     0072                     ungetc@c:	
   743                           ; 1 bytes @ 0x2
   744                           
   745     0072                     ___lmul@multiplier:	
   746                           ; 2 bytes @ 0x2
   747                           
   748     0072                     ??_ESP32_UART_Init:	
   749                           ; 4 bytes @ 0x2
   750                           
   751     0072                     ??_ESP32_AllFull:	
   752                           ; 1 bytes @ 0x2
   753                           
   754     0072                     ??_RFID_Read:	
   755                           ; 1 bytes @ 0x2
   756                           
   757     0072                     ??_Servo1_Init:	
   758                           ; 1 bytes @ 0x2
   759                           
   760     0072                     ??_Servo1_Open:	
   761                           ; 1 bytes @ 0x2
   762                           
   763     0072                     ??_Servo1_Close:	
   764                           ; 1 bytes @ 0x2
   765                           
   766     0072                     ??_Servo2_Init:	
   767                           ; 1 bytes @ 0x2
   768                           
   769     0072                     ??_Servo2_Open:	
   770                           ; 1 bytes @ 0x2
   771                           
   772     0072                     ??_Servo2_Close:	
   773                           ; 1 bytes @ 0x2
   774                           
   775     0072                     ??_Sensor_Init:	
   776                           ; 1 bytes @ 0x2
   777                           
   778     0072                     ??_Sensor_ReadObstacle:	
   779                           ; 1 bytes @ 0x2
   780                           
   781     0072                     ??_Sensor_ReadIR:	
   782                           ; 1 bytes @ 0x2
   783                           
   784     0072                     ??_Interrupts_Init:	
   785                           ; 1 bytes @ 0x2
   786                           
   787     0072                     ??_Timer1_Init:	
   788                           ; 1 bytes @ 0x2
   789                           
   790     0072                     ??_UART_DataReady:	
   791                           ; 1 bytes @ 0x2
   792                           
   793     0072                     ??_UART_Read:	
   794                           ; 1 bytes @ 0x2
   795                           
   796                           
   797                           ; 1 bytes @ 0x2
   798     0072                     	ds	1
   799     0073                     RFID_Read@addr:
   800     0073                     strncmp@r:	
   801                           ; 1 bytes @ 0x3
   802                           
   803                           
   804                           ; 1 bytes @ 0x3
   805     0073                     	ds	1
   806     0074                     ?_fgetc:
   807     0074                     RFID_Read@address:	
   808                           ; 2 bytes @ 0x4
   809                           
   810     0074                     fgetc@fp:	
   811                           ; 1 bytes @ 0x4
   812                           
   813     0074                     ungetc@fp:	
   814                           ; 2 bytes @ 0x4
   815                           
   816     0074                     strncmp@n:	
   817                           ; 2 bytes @ 0x4
   818                           
   819     0074                     ??_getch:	
   820                           ; 2 bytes @ 0x4
   821                           
   822                           
   823                           ; 1 bytes @ 0x4
   824     0074                     	ds	1
   825     0075                     RFID_Read@data:
   826                           
   827                           ; 1 bytes @ 0x5
   828     0075                     	ds	1
   829     0076                     RFID_Read@i:
   830     0076                     fgetc@c:	
   831                           ; 1 bytes @ 0x6
   832                           
   833     0076                     ___lmul@multiplicand:	
   834                           ; 2 bytes @ 0x6
   835                           
   836     0076                     ??_ungetc:	
   837                           ; 4 bytes @ 0x6
   838                           
   839     0076                     ??_strncmp:	
   840                           ; 1 bytes @ 0x6
   841                           
   842                           
   843                           ; 1 bytes @ 0x6
   844     0076                     	ds	1
   845     0077                     RFID_Read@i_140:
   846                           
   847                           ; 1 bytes @ 0x7
   848     0077                     	ds	1
   849     0078                     ?_RFID_Write:
   850     0078                     RFID_Write@data:	
   851                           ; 1 bytes @ 0x8
   852                           
   853                           
   854                           ; 1 bytes @ 0x8
   855     0078                     	ds	1
   856     0079                     ??_RFID_Write:
   857                           
   858                           ; 1 bytes @ 0x9
   859     0079                     	ds	1
   860     007A                     ??_RFID_CheckCard:
   861     007A                     ??___lmul:	
   862                           ; 1 bytes @ 0xA
   863                           
   864     007A                     ??_skipws:	
   865                           ; 1 bytes @ 0xA
   866                           
   867                           
   868                           ; 1 bytes @ 0xA
   869     007A                     	ds	1
   870     007B                     ??_ESP32_UART_Update:
   871     007B                     ??_sscanf:	
   872                           ; 1 bytes @ 0xB
   873                           
   874     007B                     ??_vfscanf:	
   875                           ; 1 bytes @ 0xB
   876                           
   877     007B                     ??_main:	
   878                           ; 1 bytes @ 0xB
   879                           
   880                           
   881                           	psect	cstackBANK0
   882     0020                     __pcstackBANK0:	
   883                           ; 1 bytes @ 0xB
   884                           
   885     0020                     RFID_Write@addr:
   886     0020                     ___lmul@product:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0020                     ??_fgetc:	
   890                           ; 4 bytes @ 0x0
   891                           
   892                           
   893                           ; 1 bytes @ 0x0
   894     0020                     	ds	1
   895     0021                     RFID_Write@address:
   896                           
   897                           ; 1 bytes @ 0x1
   898     0021                     	ds	1
   899     0022                     RFID_Write@i:
   900                           
   901                           ; 1 bytes @ 0x2
   902     0022                     	ds	1
   903     0023                     RFID_Write@i_134:
   904                           
   905                           ; 1 bytes @ 0x3
   906     0023                     	ds	1
   907     0024                     ?_RFID_ToCard:
   908     0024                     ?___strtoxl:	
   909                           ; 1 bytes @ 0x4
   910                           
   911     0024                     RFID_ToCard@sendData:	
   912                           ; 4 bytes @ 0x4
   913                           
   914     0024                     ___strtoxl@s:	
   915                           ; 1 bytes @ 0x4
   916                           
   917     0024                     ??_RFID_Init:	
   918                           ; 1 bytes @ 0x4
   919                           
   920                           
   921                           ; 1 bytes @ 0x4
   922     0024                     	ds	1
   923     0025                     RFID_ToCard@sendLen:
   924     0025                     ___strtoxl@endptr:	
   925                           ; 1 bytes @ 0x5
   926                           
   927                           
   928                           ; 1 bytes @ 0x5
   929     0025                     	ds	1
   930     0026                     RFID_ToCard@backData:
   931     0026                     ___strtoxl@base:	
   932                           ; 1 bytes @ 0x6
   933                           
   934                           
   935                           ; 2 bytes @ 0x6
   936     0026                     	ds	1
   937     0027                     RFID_ToCard@backLen:
   938                           
   939                           ; 1 bytes @ 0x7
   940     0027                     	ds	1
   941     0028                     ___strtoxl@is_signed:
   942     0028                     ??_RFID_ToCard:	
   943                           ; 1 bytes @ 0x8
   944                           
   945                           
   946                           ; 1 bytes @ 0x8
   947     0028                     	ds	1
   948     0029                     ??___strtoxl:
   949                           
   950                           ; 1 bytes @ 0x9
   951     0029                     	ds	1
   952     002A                     ?_skipws:
   953     002A                     skipws@fp:	
   954                           ; 1 bytes @ 0xA
   955                           
   956                           
   957                           ; 2 bytes @ 0xA
   958     002A                     	ds	2
   959     002C                     skipws@c:
   960                           
   961                           ; 2 bytes @ 0xC
   962     002C                     	ds	1
   963     002D                     ___strtoxl@prev_a:
   964                           
   965                           ; 4 bytes @ 0xD
   966     002D                     	ds	1
   967     002E                     RFID_ToCard@status:
   968                           
   969                           ; 1 bytes @ 0xE
   970     002E                     	ds	1
   971     002F                     RFID_ToCard@irqEn:
   972                           
   973                           ; 1 bytes @ 0xF
   974     002F                     	ds	1
   975     0030                     RFID_ToCard@waitIRq:
   976                           
   977                           ; 1 bytes @ 0x10
   978     0030                     	ds	1
   979     0031                     RFID_ToCard@lastBits:
   980     0031                     ___strtoxl$1100:	
   981                           ; 1 bytes @ 0x11
   982                           
   983                           
   984                           ; 2 bytes @ 0x11
   985     0031                     	ds	1
   986     0032                     RFID_ToCard@command:
   987                           
   988                           ; 1 bytes @ 0x12
   989     0032                     	ds	1
   990     0033                     RFID_ToCard@n:
   991     0033                     ___strtoxl$1101:	
   992                           ; 1 bytes @ 0x13
   993                           
   994                           
   995                           ; 2 bytes @ 0x13
   996     0033                     	ds	1
   997     0034                     RFID_ToCard@i:
   998                           
   999                           ; 2 bytes @ 0x14
  1000     0034                     	ds	1
  1001     0035                     ___strtoxl@limit:
  1002                           
  1003                           ; 4 bytes @ 0x15
  1004     0035                     	ds	1
  1005     0036                     RFID_CheckCard@buffer:
  1006                           
  1007                           ; 2 bytes @ 0x16
  1008     0036                     	ds	2
  1009     0038                     RFID_CheckCard@status:
  1010                           
  1011                           ; 1 bytes @ 0x18
  1012     0038                     	ds	1
  1013     0039                     _RFID_CheckCard$172:
  1014     0039                     ___strtoxl@flags:	
  1015                           ; 1 bytes @ 0x19
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x19
  1019     0039                     	ds	1
  1020     003A                     RFID_CheckCard@backBits:
  1021     003A                     ___strtoxl@a:	
  1022                           ; 2 bytes @ 0x1A
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x1A
  1026     003A                     	ds	4
  1027     003E                     ___strtoxl@cp:
  1028                           
  1029                           ; 1 bytes @ 0x1E
  1030     003E                     	ds	1
  1031     003F                     ___strtoxl@c:
  1032                           
  1033                           ; 1 bytes @ 0x1F
  1034     003F                     	ds	1
  1035     0040                     ?_atou:
  1036     0040                     atou@fp:	
  1037                           ; 2 bytes @ 0x20
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x20
  1041     0040                     	ds	2
  1042     0042                     atou@pll:
  1043                           
  1044                           ; 1 bytes @ 0x22
  1045     0042                     	ds	1
  1046     0043                     ??_atou:
  1047                           
  1048                           ; 1 bytes @ 0x23
  1049     0043                     	ds	2
  1050     0045                     atou@w:
  1051                           
  1052                           ; 2 bytes @ 0x25
  1053     0045                     	ds	2
  1054     0047                     atou@ep:
  1055                           
  1056                           ; 1 bytes @ 0x27
  1057     0047                     	ds	1
  1058     0048                     atou@i:
  1059                           
  1060                           ; 2 bytes @ 0x28
  1061     0048                     	ds	2
  1062     004A                     atou@c:
  1063                           
  1064                           ; 2 bytes @ 0x2A
  1065     004A                     	ds	2
  1066     004C                     ?_vfsfcnvrt:
  1067     004C                     vfsfcnvrt@fp:	
  1068                           ; 2 bytes @ 0x2C
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x2C
  1072     004C                     	ds	2
  1073     004E                     vfsfcnvrt@fmt:
  1074                           
  1075                           ; 1 bytes @ 0x2E
  1076     004E                     	ds	1
  1077     004F                     vfsfcnvrt@ap:
  1078                           
  1079                           ; 2 bytes @ 0x2F
  1080     004F                     	ds	2
  1081     0051                     ??_vfsfcnvrt:
  1082                           
  1083                           ; 1 bytes @ 0x31
  1084     0051                     	ds	2
  1085     0053                     vfsfcnvrt@vp:
  1086                           
  1087                           ; 1 bytes @ 0x33
  1088     0053                     	ds	1
  1089     0054                     vfsfcnvrt@llu:
  1090                           
  1091                           ; 4 bytes @ 0x34
  1092     0054                     	ds	4
  1093     0058                     vfsfcnvrt@i:
  1094                           
  1095                           ; 2 bytes @ 0x38
  1096     0058                     	ds	2
  1097     005A                     vfsfcnvrt@c:
  1098                           
  1099                           ; 2 bytes @ 0x3A
  1100     005A                     	ds	2
  1101     005C                     ?_vfscanf:
  1102     005C                     vfscanf@fp:	
  1103                           ; 2 bytes @ 0x3C
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x3C
  1107     005C                     	ds	2
  1108     005E                     vfscanf@fmt:
  1109                           
  1110                           ; 1 bytes @ 0x3E
  1111     005E                     	ds	1
  1112     005F                     vfscanf@ap:
  1113                           
  1114                           ; 1 bytes @ 0x3F
  1115     005F                     	ds	1
  1116     0060                     vfscanf@saved_errno:
  1117                           
  1118                           ; 2 bytes @ 0x40
  1119     0060                     	ds	2
  1120     0062                     vfscanf@n:
  1121                           
  1122                           ; 2 bytes @ 0x42
  1123     0062                     	ds	2
  1124     0064                     vfscanf@cfmt:
  1125                           
  1126                           ; 1 bytes @ 0x44
  1127     0064                     	ds	1
  1128     0065                     ?_sscanf:
  1129     0065                     sscanf@s:	
  1130                           ; 2 bytes @ 0x45
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x45
  1134     0065                     	ds	1
  1135     0066                     sscanf@fmt:
  1136                           
  1137                           ; 1 bytes @ 0x46
  1138     0066                     	ds	9
  1139                           
  1140                           	psect	maintext
  1141     0674                     __pmaintext:	
  1142 ;;
  1143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1144 ;;
  1145 ;; *************** function _main *****************
  1146 ;; Defined at:
  1147 ;;		line 60 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  cardFound       1   19[BANK1 ] unsigned char 
  1152 ;;  object_detec    1   20[BANK1 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : B00/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         0       0       2       0       0
  1164 ;;      Temps:          0       0       0       0       0
  1165 ;;      Totals:         0       0       2       0       0
  1166 ;;Total ram usage:        2 bytes
  1167 ;; Hardware stack levels required when called: 8
  1168 ;; This function calls:
  1169 ;;		_ESP32_AllFull
  1170 ;;		_ESP32_UART_Init
  1171 ;;		_ESP32_UART_Update
  1172 ;;		_Interrupts_Init
  1173 ;;		_RFID_CheckCard
  1174 ;;		_RFID_Init
  1175 ;;		_Sensor_Init
  1176 ;;		_Sensor_ReadIR
  1177 ;;		_Sensor_ReadObstacle
  1178 ;;		_Servo1_Close
  1179 ;;		_Servo1_Init
  1180 ;;		_Servo1_Open
  1181 ;;		_Servo2_Close
  1182 ;;		_Servo2_Init
  1183 ;;		_Servo2_Open
  1184 ;;		_Timer1_Init
  1185 ;; This function is called by:
  1186 ;;		Startup code after reset
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190     0674                     _main:	
  1191                           ;psect for function _main
  1192                           
  1193     0674                     l2947:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  1196                           
  1197                           
  1198                           ;main.c: 61: 
  1199     0674  1683               	bsf	3,5	;RP0=1, select bank1
  1200     0675  1303               	bcf	3,6	;RP1=0, select bank1
  1201     0676  0188               	clrf	8	;volatile
  1202     0677                     l2949:
  1203                           
  1204                           ;main.c: 62:     while(1) {
  1205     0677  30F0               	movlw	240
  1206     0678  0086               	movwf	6	;volatile
  1207     0679                     l2951:
  1208                           
  1209                           ;main.c: 63: 
  1210     0679  1405               	bsf	5,0	;volatile
  1211     067A                     l2953:
  1212                           
  1213                           ;main.c: 66: 
  1214     067A  120A  158A  23DE  120A  118A  	fcall	_ESP32_UART_Init
  1215     067F                     l2955:
  1216                           
  1217                           ;main.c: 67: 
  1218     067F  120A  158A  2335  120A  118A  	fcall	_Servo1_Init
  1219     0684                     l2957:
  1220                           
  1221                           ;main.c: 68: 
  1222     0684  120A  158A  233C  120A  118A  	fcall	_Servo2_Init
  1223     0689                     l2959:
  1224                           
  1225                           ;main.c: 69:         if (servo1_delay_ticks == 0) {
  1226     0689  120A  118A  2767  120A  118A  	fcall	_RFID_Init
  1227     068E                     l2961:
  1228                           
  1229                           ;main.c: 70:             if (!ESP32_AllFull()) {
  1230     068E  120A  158A  232A  120A  118A  	fcall	_Sensor_Init
  1231     0693                     l2963:
  1232                           
  1233                           ;main.c: 73: 
  1234     0693  120A  158A  236E  120A  118A  	fcall	_Timer1_Init
  1235     0698                     l2965:
  1236                           
  1237                           ;main.c: 74:                 if (cardFound && !servo1_open &&(count<4)) {
  1238     0698  120A  158A  2353  120A  118A  	fcall	_Interrupts_Init
  1239     069D                     l2967:
  1240                           
  1241                           ;main.c: 77: 
  1242     069D  120A  158A  237A  120A  118A  	fcall	_Servo1_Close
  1243     06A2                     l2969:
  1244                           
  1245                           ;main.c: 78:                     servo1_delay_ticks = 100;
  1246     06A2  120A  158A  23AC  120A  118A  	fcall	_Servo2_Close
  1247     06A7                     l2971:
  1248                           
  1249                           ;main.c: 82:                 if (servo1_open && Sensor_ReadObstacle() == 1) {
  1250     06A7  120A  158A  2641  120A  118A  	fcall	_ESP32_UART_Update
  1251     06AC                     l2973:
  1252                           
  1253                           ;main.c: 87:                 }
  1254     06AC  1683               	bsf	3,5	;RP0=1, select bank1
  1255     06AD  1303               	bcf	3,6	;RP1=0, select bank1
  1256     06AE  082D               	movf	_servo1_delay_ticks^(0+128),w	;volatile
  1257     06AF  042E               	iorwf	(_servo1_delay_ticks+1)^(0+128),w	;volatile
  1258     06B0  1D03               	btfss	3,2
  1259     06B1  2EB3               	goto	u3441
  1260     06B2  2EB4               	goto	u3440
  1261     06B3                     u3441:
  1262     06B3  2F1E               	goto	l3011
  1263     06B4                     u3440:
  1264     06B4                     l2975:
  1265                           
  1266                           ;main.c: 88:             } else {
  1267     06B4  120A  158A  2321  120A  118A  	fcall	_ESP32_AllFull
  1268     06B9  3A00               	xorlw	0
  1269     06BA  1D03               	skipz
  1270     06BB  2EBD               	goto	u3451
  1271     06BC  2EBE               	goto	u3450
  1272     06BD                     u3451:
  1273     06BD  2F0E               	goto	l3003
  1274     06BE                     u3450:
  1275     06BE                     l2977:
  1276                           
  1277                           ;main.c: 89:                 if (servo1_open) {
  1278     06BE  120A  158A  241F  120A  118A  	fcall	_RFID_CheckCard
  1279     06C3  1683               	bsf	3,5	;RP0=1, select bank1
  1280     06C4  1303               	bcf	3,6	;RP1=0, select bank1
  1281     06C5  00DC               	movwf	main@cardFound^(0+128)
  1282     06C6                     l2979:
  1283                           
  1284                           ;main.c: 92:                     servo1_delay_ticks = 100;
  1285     06C6  085C               	movf	main@cardFound^(0+128),w
  1286     06C7  1903               	btfsc	3,2
  1287     06C8  2ECA               	goto	u3461
  1288     06C9  2ECB               	goto	u3460
  1289     06CA                     u3461:
  1290     06CA  2EEA               	goto	l2991
  1291     06CB                     u3460:
  1292     06CB                     l2981:
  1293     06CB  0833               	movf	_servo1_open^(0+128),w
  1294     06CC  1D03               	btfss	3,2
  1295     06CD  2ECF               	goto	u3471
  1296     06CE  2ED0               	goto	u3470
  1297     06CF                     u3471:
  1298     06CF  2EEA               	goto	l2991
  1299     06D0                     u3470:
  1300     06D0                     l2983:
  1301     06D0  082C               	movf	(_count+1)^(0+128),w
  1302     06D1  3A80               	xorlw	128
  1303     06D2  00FF               	movwf	btemp1
  1304     06D3  3080               	movlw	128
  1305     06D4  027F               	subwf	btemp1,w
  1306     06D5  1D03               	skipz
  1307     06D6  2ED9               	goto	u3485
  1308     06D7  3004               	movlw	4
  1309     06D8  022B               	subwf	_count^(0+128),w
  1310     06D9                     u3485:
  1311     06D9  1803               	skipnc
  1312     06DA  2EDC               	goto	u3481
  1313     06DB  2EDD               	goto	u3480
  1314     06DC                     u3481:
  1315     06DC  2EEA               	goto	l2991
  1316     06DD                     u3480:
  1317     06DD                     l2985:
  1318                           
  1319                           ;main.c: 93:                 }
  1320     06DD  120A  158A  2393  120A  118A  	fcall	_Servo1_Open
  1321     06E2                     l2987:
  1322                           
  1323                           ;main.c: 94:             }
  1324     06E2  3001               	movlw	1
  1325     06E3  1683               	bsf	3,5	;RP0=1, select bank1
  1326     06E4  1303               	bcf	3,6	;RP1=0, select bank1
  1327     06E5  00B3               	movwf	_servo1_open^(0+128)
  1328     06E6                     l2989:
  1329                           
  1330                           ;main.c: 96: 
  1331     06E6  3064               	movlw	100
  1332     06E7  00AD               	movwf	_servo1_delay_ticks^(0+128)	;volatile
  1333     06E8  3000               	movlw	0
  1334     06E9  00AE               	movwf	(_servo1_delay_ticks^(0+128)+1)	;volatile
  1335     06EA                     l2991:
  1336                           
  1337                           ;main.c: 100: 
  1338     06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1339     06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1340     06EC  0833               	movf	_servo1_open^(0+128),w
  1341     06ED  1903               	btfsc	3,2
  1342     06EE  2EF0               	goto	u3491
  1343     06EF  2EF1               	goto	u3490
  1344     06F0                     u3491:
  1345     06F0  2F1E               	goto	l3011
  1346     06F1                     u3490:
  1347     06F1                     l2993:
  1348     06F1  120A  158A  2365  120A  118A  	fcall	_Sensor_ReadObstacle
  1349     06F6  3A01               	xorlw	1
  1350     06F7  1D03               	skipz
  1351     06F8  2EFA               	goto	u3501
  1352     06F9  2EFB               	goto	u3500
  1353     06FA                     u3501:
  1354     06FA  2F1E               	goto	l3011
  1355     06FB                     u3500:
  1356     06FB                     l2995:
  1357                           
  1358                           ;main.c: 101:         if(object_detected == 1) {
  1359     06FB  120A  158A  237A  120A  118A  	fcall	_Servo1_Close
  1360     0700                     l2997:
  1361                           
  1362                           ;main.c: 102: 
  1363     0700  1683               	bsf	3,5	;RP0=1, select bank1
  1364     0701  1303               	bcf	3,6	;RP1=0, select bank1
  1365     0702  01B3               	clrf	_servo1_open^(0+128)
  1366     0703                     l2999:
  1367                           
  1368                           ;main.c: 103:             if(!servo2_open) {
  1369     0703  3001               	movlw	1
  1370     0704  07AB               	addwf	_count^(0+128),f
  1371     0705  1803               	skipnc
  1372     0706  0AAC               	incf	(_count+1)^(0+128),f
  1373     0707  3000               	movlw	0
  1374     0708  07AC               	addwf	(_count+1)^(0+128),f
  1375     0709                     l3001:
  1376                           
  1377                           ;main.c: 104:                 Servo2_Open();
  1378     0709  3064               	movlw	100
  1379     070A  00AD               	movwf	_servo1_delay_ticks^(0+128)	;volatile
  1380     070B  3000               	movlw	0
  1381     070C  00AE               	movwf	(_servo1_delay_ticks^(0+128)+1)	;volatile
  1382     070D  2F1E               	goto	l3011
  1383     070E                     l3003:
  1384                           
  1385                           ;main.c: 107: 
  1386     070E  1683               	bsf	3,5	;RP0=1, select bank1
  1387     070F  1303               	bcf	3,6	;RP1=0, select bank1
  1388     0710  0833               	movf	_servo1_open^(0+128),w
  1389     0711  1903               	btfsc	3,2
  1390     0712  2F14               	goto	u3511
  1391     0713  2F15               	goto	u3510
  1392     0714                     u3511:
  1393     0714  2F1E               	goto	l3011
  1394     0715                     u3510:
  1395     0715                     l3005:
  1396                           
  1397                           ;main.c: 108:             servo2_waiting = 0;
  1398     0715  120A  158A  237A  120A  118A  	fcall	_Servo1_Close
  1399     071A                     l3007:
  1400                           
  1401                           ;main.c: 109:             servo2_delay_ticks = 0;
  1402     071A  1683               	bsf	3,5	;RP0=1, select bank1
  1403     071B  1303               	bcf	3,6	;RP1=0, select bank1
  1404     071C  01B3               	clrf	_servo1_open^(0+128)
  1405     071D  2F09               	goto	l3001
  1406     071E                     l3011:
  1407                           
  1408                           ;main.c: 117:         }
  1409     071E  120A  158A  235C  120A  118A  	fcall	_Sensor_ReadIR
  1410     0723  1683               	bsf	3,5	;RP0=1, select bank1
  1411     0724  1303               	bcf	3,6	;RP1=0, select bank1
  1412     0725  00DD               	movwf	main@object_detected^(0+128)
  1413     0726                     l3013:
  1414                           
  1415                           ;main.c: 119: 
  1416     0726  035D               	decf	main@object_detected^(0+128),w
  1417     0727  1D03               	btfss	3,2
  1418     0728  2F2A               	goto	u3521
  1419     0729  2F2B               	goto	u3520
  1420     072A                     u3521:
  1421     072A  2F3C               	goto	l3025
  1422     072B                     u3520:
  1423     072B                     l3015:
  1424                           
  1425                           ;main.c: 121: 
  1426     072B  0832               	movf	_servo2_open^(0+128),w
  1427     072C  1D03               	btfss	3,2
  1428     072D  2F2F               	goto	u3531
  1429     072E  2F30               	goto	u3530
  1430     072F                     u3531:
  1431     072F  2F39               	goto	l3021
  1432     0730                     u3530:
  1433     0730                     l3017:
  1434                           
  1435                           ;main.c: 122:             Servo2_Close();
  1436     0730  120A  158A  23C5  120A  118A  	fcall	_Servo2_Open
  1437     0735                     l3019:
  1438                           
  1439                           ;main.c: 123:             servo2_open = 0;
  1440     0735  3001               	movlw	1
  1441     0736  1683               	bsf	3,5	;RP0=1, select bank1
  1442     0737  1303               	bcf	3,6	;RP1=0, select bank1
  1443     0738  00B2               	movwf	_servo2_open^(0+128)
  1444     0739                     l3021:
  1445                           
  1446                           ;main.c: 126:         }
  1447     0739  01B1               	clrf	_servo2_waiting^(0+128)
  1448     073A                     l3023:
  1449                           
  1450                           ;main.c: 127: 
  1451     073A  01B4               	clrf	_servo2_delay_ticks^(0+128)	;volatile
  1452                           
  1453                           ;main.c: 128:     }
  1454     073B  2F4A               	goto	l3031
  1455     073C                     l3025:
  1456                           
  1457                           ;main.c: 131: void __attribute__((picinterrupt(("")))) ISR(void) {
  1458     073C  0832               	movf	_servo2_open^(0+128),w
  1459     073D  1903               	btfsc	3,2
  1460     073E  2F40               	goto	u3541
  1461     073F  2F41               	goto	u3540
  1462     0740                     u3541:
  1463     0740  2F4A               	goto	l3031
  1464     0741                     u3540:
  1465     0741                     l3027:
  1466     0741  0831               	movf	_servo2_waiting^(0+128),w
  1467     0742  1D03               	btfss	3,2
  1468     0743  2F45               	goto	u3551
  1469     0744  2F46               	goto	u3550
  1470     0745                     u3551:
  1471     0745  2F4A               	goto	l3031
  1472     0746                     u3550:
  1473     0746                     l3029:
  1474                           
  1475                           ;main.c: 132:     if (PIR1bits.TMR1IF) {
  1476     0746  3001               	movlw	1
  1477     0747  00B1               	movwf	_servo2_waiting^(0+128)
  1478                           
  1479                           ;main.c: 133:         PIR1bits.TMR1IF = 0;
  1480     0748  30C8               	movlw	200
  1481     0749  00B4               	movwf	_servo2_delay_ticks^(0+128)	;volatile
  1482     074A                     l3031:
  1483                           
  1484                           ;main.c: 138: 
  1485     074A  0831               	movf	_servo2_waiting^(0+128),w
  1486     074B  1903               	btfsc	3,2
  1487     074C  2F4E               	goto	u3561
  1488     074D  2F4F               	goto	u3560
  1489     074E                     u3561:
  1490     074E  2EA7               	goto	l2971
  1491     074F                     u3560:
  1492     074F                     l3033:
  1493     074F  0834               	movf	_servo2_delay_ticks^(0+128),w	;volatile
  1494     0750  1D03               	btfss	3,2
  1495     0751  2F53               	goto	u3571
  1496     0752  2F54               	goto	u3570
  1497     0753                     u3571:
  1498     0753  2EA7               	goto	l2971
  1499     0754                     u3570:
  1500     0754                     l3035:
  1501                           
  1502                           ;main.c: 140:         if (servo1_delay_ticks > 0) {
  1503     0754  120A  158A  23AC  120A  118A  	fcall	_Servo2_Close
  1504     0759                     l3037:
  1505                           
  1506                           ;main.c: 141:             servo1_delay_ticks--;
  1507     0759  1683               	bsf	3,5	;RP0=1, select bank1
  1508     075A  1303               	bcf	3,6	;RP1=0, select bank1
  1509     075B  01B2               	clrf	_servo2_open^(0+128)
  1510     075C                     l3039:
  1511                           
  1512                           ;main.c: 142:         }
  1513     075C  01B1               	clrf	_servo2_waiting^(0+128)
  1514     075D                     l3041:
  1515                           
  1516                           ;main.c: 143: 
  1517     075D  30FF               	movlw	255
  1518     075E  07AB               	addwf	_count^(0+128),f
  1519     075F  1803               	skipnc
  1520     0760  0AAC               	incf	(_count+1)^(0+128),f
  1521     0761  30FF               	movlw	255
  1522     0762  07AC               	addwf	(_count+1)^(0+128),f
  1523     0763  2EA7               	goto	l2971
  1524     0764  120A  118A  280C   	ljmp	start
  1525     0767                     __end_of_main:
  1526                           
  1527                           	psect	text1
  1528     0B6E                     __ptext1:	
  1529 ;; *************** function _Timer1_Init *****************
  1530 ;; Defined at:
  1531 ;;		line 42 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 1
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559     0B6E                     _Timer1_Init:	
  1560                           ;psect for function _Timer1_Init
  1561                           
  1562     0B6E                     l2503:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  1565                           
  1566                           
  1567                           ;main.c: 49:     Servo1_Init();
  1568     0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  1569     0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  1570     0B70  1010               	bcf	16,0	;volatile
  1571                           
  1572                           ;main.c: 50:     Servo2_Init();
  1573     0B71  1090               	bcf	16,1	;volatile
  1574     0B72                     l2505:
  1575                           
  1576                           ;main.c: 51:     RFID_Init();
  1577     0B72  3030               	movlw	48
  1578     0B73  0490               	iorwf	16,f	;volatile
  1579     0B74                     l2507:
  1580                           
  1581                           ;main.c: 53: 
  1582     0B74  30E7               	movlw	231
  1583     0B75  008F               	movwf	15	;volatile
  1584     0B76                     l2509:
  1585                           
  1586                           ;main.c: 54: 
  1587     0B76  3096               	movlw	150
  1588     0B77  008E               	movwf	14	;volatile
  1589     0B78                     l2511:
  1590                           
  1591                           ;main.c: 56:     Interrupts_Init();
  1592     0B78  1410               	bsf	16,0	;volatile
  1593     0B79                     l165:
  1594     0B79  0008               	return
  1595     0B7A                     __end_of_Timer1_Init:
  1596                           
  1597                           	psect	text2
  1598     0BC5                     __ptext2:	
  1599 ;; *************** function _Servo2_Open *****************
  1600 ;; Defined at:
  1601 ;;		line 31 in file "servo.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          2       0       0       0       0
  1618 ;;      Totals:         2       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629     0BC5                     _Servo2_Open:	
  1630                           ;psect for function _Servo2_Open
  1631                           
  1632     0BC5                     l2479:	
  1633                           ;incstack = 0
  1634                           ; Regs used in _Servo2_Open: [wreg]
  1635                           
  1636                           
  1637                           ;servo.c: 33:     PORTCbits.RC2 = 1;
  1638     0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  1639     0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  1640     0BC7  1507               	bsf	7,2	;volatile
  1641     0BC8                     l2481:
  1642                           
  1643                           ;servo.c: 34:     _delay((unsigned long)((1500)*(20000000/4000000.0)));
  1644     0BC8  300A               	movlw	10
  1645     0BC9  00F3               	movwf	??_Servo2_Open+1
  1646     0BCA  30BC               	movlw	188
  1647     0BCB  00F2               	movwf	??_Servo2_Open
  1648     0BCC                     u3587:
  1649     0BCC  0BF2               	decfsz	??_Servo2_Open,f
  1650     0BCD  2BCC               	goto	u3587
  1651     0BCE  0BF3               	decfsz	??_Servo2_Open+1,f
  1652     0BCF  2BCC               	goto	u3587
  1653     0BD0  0000               	nop
  1654     0BD1                     l2483:
  1655                           
  1656                           ;servo.c: 35:     PORTCbits.RC2 = 0;
  1657     0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  1658     0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  1659     0BD3  1107               	bcf	7,2	;volatile
  1660                           
  1661                           ;servo.c: 36:     _delay((unsigned long)((18500)*(20000000/4000000.0)));
  1662     0BD4  3079               	movlw	121
  1663     0BD5  00F3               	movwf	??_Servo2_Open+1
  1664     0BD6  301F               	movlw	31
  1665     0BD7  00F2               	movwf	??_Servo2_Open
  1666     0BD8                     u3597:
  1667     0BD8  0BF2               	decfsz	??_Servo2_Open,f
  1668     0BD9  2BD8               	goto	u3597
  1669     0BDA  0BF3               	decfsz	??_Servo2_Open+1,f
  1670     0BDB  2BD8               	goto	u3597
  1671     0BDC  2BDD               	nop2
  1672     0BDD                     l81:
  1673     0BDD  0008               	return
  1674     0BDE                     __end_of_Servo2_Open:
  1675                           
  1676                           	psect	text3
  1677     0B3C                     __ptext3:	
  1678 ;; *************** function _Servo2_Init *****************
  1679 ;; Defined at:
  1680 ;;		line 26 in file "servo.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		None
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     0B3C                     _Servo2_Init:	
  1709                           ;psect for function _Servo2_Init
  1710                           
  1711     0B3C                     l2477:	
  1712                           ;incstack = 0
  1713                           ; Regs used in _Servo2_Init: []
  1714                           
  1715                           
  1716                           ;servo.c: 27:     TRISCbits.TRISC2 = 0;
  1717     0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  1718     0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  1719     0B3E  1107               	bcf	7,2	;volatile
  1720                           
  1721                           ;servo.c: 28:     PORTCbits.RC2 = 0;
  1722     0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  1723     0B40  1303               	bcf	3,6	;RP1=0, select bank0
  1724     0B41  1107               	bcf	7,2	;volatile
  1725     0B42                     l78:
  1726     0B42  0008               	return
  1727     0B43                     __end_of_Servo2_Init:
  1728                           
  1729                           	psect	text4
  1730     0BAC                     __ptext4:	
  1731 ;; *************** function _Servo2_Close *****************
  1732 ;; Defined at:
  1733 ;;		line 39 in file "servo.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          2       0       0       0       0
  1750 ;;      Totals:         2       0       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761     0BAC                     _Servo2_Close:	
  1762                           ;psect for function _Servo2_Close
  1763                           
  1764     0BAC                     l2485:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _Servo2_Close: [wreg]
  1767                           
  1768                           
  1769                           ;servo.c: 41:     PORTCbits.RC2 = 1;
  1770     0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  1771     0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0BAE  1507               	bsf	7,2	;volatile
  1773     0BAF                     l2487:
  1774                           
  1775                           ;servo.c: 42:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1776     0BAF  3004               	movlw	4
  1777     0BB0  00F3               	movwf	??_Servo2_Close+1
  1778     0BB1  303D               	movlw	61
  1779     0BB2  00F2               	movwf	??_Servo2_Close
  1780     0BB3                     u3607:
  1781     0BB3  0BF2               	decfsz	??_Servo2_Close,f
  1782     0BB4  2BB3               	goto	u3607
  1783     0BB5  0BF3               	decfsz	??_Servo2_Close+1,f
  1784     0BB6  2BB3               	goto	u3607
  1785     0BB7  2BB8               	nop2
  1786     0BB8                     l2489:
  1787                           
  1788                           ;servo.c: 43:     PORTCbits.RC2 = 0;
  1789     0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  1790     0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  1791     0BBA  1107               	bcf	7,2	;volatile
  1792                           
  1793                           ;servo.c: 44:     _delay((unsigned long)((19500)*(20000000/4000000.0)));
  1794     0BBB  307F               	movlw	127
  1795     0BBC  00F3               	movwf	??_Servo2_Close+1
  1796     0BBD  309E               	movlw	158
  1797     0BBE  00F2               	movwf	??_Servo2_Close
  1798     0BBF                     u3617:
  1799     0BBF  0BF2               	decfsz	??_Servo2_Close,f
  1800     0BC0  2BBF               	goto	u3617
  1801     0BC1  0BF3               	decfsz	??_Servo2_Close+1,f
  1802     0BC2  2BBF               	goto	u3617
  1803     0BC3  0000               	nop
  1804     0BC4                     l84:
  1805     0BC4  0008               	return
  1806     0BC5                     __end_of_Servo2_Close:
  1807                           
  1808                           	psect	text5
  1809     0B93                     __ptext5:	
  1810 ;; *************** function _Servo1_Open *****************
  1811 ;; Defined at:
  1812 ;;		line 9 in file "servo.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          2       0       0       0       0
  1829 ;;      Totals:         2       0       0       0       0
  1830 ;;Total ram usage:        2 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     0B93                     _Servo1_Open:	
  1841                           ;psect for function _Servo1_Open
  1842                           
  1843     0B93                     l2465:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _Servo1_Open: [wreg]
  1846                           
  1847                           
  1848                           ;servo.c: 11:     PORTCbits.RC1 = 1;
  1849     0B93  1283               	bcf	3,5	;RP0=0, select bank0
  1850     0B94  1303               	bcf	3,6	;RP1=0, select bank0
  1851     0B95  1487               	bsf	7,1	;volatile
  1852     0B96                     l2467:
  1853                           
  1854                           ;servo.c: 12:     _delay((unsigned long)((1500)*(20000000/4000000.0)));
  1855     0B96  300A               	movlw	10
  1856     0B97  00F3               	movwf	??_Servo1_Open+1
  1857     0B98  30BC               	movlw	188
  1858     0B99  00F2               	movwf	??_Servo1_Open
  1859     0B9A                     u3627:
  1860     0B9A  0BF2               	decfsz	??_Servo1_Open,f
  1861     0B9B  2B9A               	goto	u3627
  1862     0B9C  0BF3               	decfsz	??_Servo1_Open+1,f
  1863     0B9D  2B9A               	goto	u3627
  1864     0B9E  0000               	nop
  1865     0B9F                     l2469:
  1866                           
  1867                           ;servo.c: 13:     PORTCbits.RC1 = 0;
  1868     0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  1869     0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  1870     0BA1  1087               	bcf	7,1	;volatile
  1871                           
  1872                           ;servo.c: 14:     _delay((unsigned long)((18500)*(20000000/4000000.0)));
  1873     0BA2  3079               	movlw	121
  1874     0BA3  00F3               	movwf	??_Servo1_Open+1
  1875     0BA4  301F               	movlw	31
  1876     0BA5  00F2               	movwf	??_Servo1_Open
  1877     0BA6                     u3637:
  1878     0BA6  0BF2               	decfsz	??_Servo1_Open,f
  1879     0BA7  2BA6               	goto	u3637
  1880     0BA8  0BF3               	decfsz	??_Servo1_Open+1,f
  1881     0BA9  2BA6               	goto	u3637
  1882     0BAA  2BAB               	nop2
  1883     0BAB                     l72:
  1884     0BAB  0008               	return
  1885     0BAC                     __end_of_Servo1_Open:
  1886                           
  1887                           	psect	text6
  1888     0B35                     __ptext6:	
  1889 ;; *************** function _Servo1_Init *****************
  1890 ;; Defined at:
  1891 ;;		line 4 in file "servo.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		None
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919     0B35                     _Servo1_Init:	
  1920                           ;psect for function _Servo1_Init
  1921                           
  1922     0B35                     l2463:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _Servo1_Init: []
  1925                           
  1926                           
  1927                           ;servo.c: 5:     TRISCbits.TRISC1 = 0;
  1928     0B35  1683               	bsf	3,5	;RP0=1, select bank1
  1929     0B36  1303               	bcf	3,6	;RP1=0, select bank1
  1930     0B37  1087               	bcf	7,1	;volatile
  1931                           
  1932                           ;servo.c: 6:     PORTCbits.RC1 = 0;
  1933     0B38  1283               	bcf	3,5	;RP0=0, select bank0
  1934     0B39  1303               	bcf	3,6	;RP1=0, select bank0
  1935     0B3A  1087               	bcf	7,1	;volatile
  1936     0B3B                     l69:
  1937     0B3B  0008               	return
  1938     0B3C                     __end_of_Servo1_Init:
  1939                           
  1940                           	psect	text7
  1941     0B7A                     __ptext7:	
  1942 ;; *************** function _Servo1_Close *****************
  1943 ;; Defined at:
  1944 ;;		line 17 in file "servo.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0
  1960 ;;      Temps:          2       0       0       0       0
  1961 ;;      Totals:         2       0       0       0       0
  1962 ;;Total ram usage:        2 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972     0B7A                     _Servo1_Close:	
  1973                           ;psect for function _Servo1_Close
  1974                           
  1975     0B7A                     l2471:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _Servo1_Close: [wreg]
  1978                           
  1979                           
  1980                           ;servo.c: 19:     PORTCbits.RC1 = 1;
  1981     0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  1982     0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  1983     0B7C  1487               	bsf	7,1	;volatile
  1984     0B7D                     l2473:
  1985                           
  1986                           ;servo.c: 20:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1987     0B7D  3004               	movlw	4
  1988     0B7E  00F3               	movwf	??_Servo1_Close+1
  1989     0B7F  303D               	movlw	61
  1990     0B80  00F2               	movwf	??_Servo1_Close
  1991     0B81                     u3647:
  1992     0B81  0BF2               	decfsz	??_Servo1_Close,f
  1993     0B82  2B81               	goto	u3647
  1994     0B83  0BF3               	decfsz	??_Servo1_Close+1,f
  1995     0B84  2B81               	goto	u3647
  1996     0B85  2B86               	nop2
  1997     0B86                     l2475:
  1998                           
  1999                           ;servo.c: 21:     PORTCbits.RC1 = 0;
  2000     0B86  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0B87  1303               	bcf	3,6	;RP1=0, select bank0
  2002     0B88  1087               	bcf	7,1	;volatile
  2003                           
  2004                           ;servo.c: 22:     _delay((unsigned long)((19500)*(20000000/4000000.0)));
  2005     0B89  307F               	movlw	127
  2006     0B8A  00F3               	movwf	??_Servo1_Close+1
  2007     0B8B  309E               	movlw	158
  2008     0B8C  00F2               	movwf	??_Servo1_Close
  2009     0B8D                     u3657:
  2010     0B8D  0BF2               	decfsz	??_Servo1_Close,f
  2011     0B8E  2B8D               	goto	u3657
  2012     0B8F  0BF3               	decfsz	??_Servo1_Close+1,f
  2013     0B90  2B8D               	goto	u3657
  2014     0B91  0000               	nop
  2015     0B92                     l75:
  2016     0B92  0008               	return
  2017     0B93                     __end_of_Servo1_Close:
  2018                           
  2019                           	psect	text8
  2020     0B65                     __ptext8:	
  2021 ;; *************** function _Sensor_ReadObstacle *****************
  2022 ;; Defined at:
  2023 ;;		line 12 in file "sensor.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      unsigned char 
  2030 ;; Registers used:
  2031 ;;		wreg, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051     0B65                     _Sensor_ReadObstacle:	
  2052                           ;psect for function _Sensor_ReadObstacle
  2053                           
  2054     0B65                     l2493:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _Sensor_ReadObstacle: [wreg+status,0]
  2057                           
  2058                           
  2059                           ;sensor.c: 15:     return (PORTBbits.RB0 == 0) ? 1 : 0;
  2060     0B65  1003               	clrc
  2061     0B66  1283               	bcf	3,5	;RP0=0, select bank0
  2062     0B67  1303               	bcf	3,6	;RP1=0, select bank0
  2063     0B68  1C06               	btfss	6,0	;volatile
  2064     0B69  1403               	setc
  2065     0B6A  3000               	movlw	0
  2066     0B6B  1803               	skipnc
  2067     0B6C  3001               	movlw	1
  2068     0B6D                     l98:
  2069     0B6D  0008               	return
  2070     0B6E                     __end_of_Sensor_ReadObstacle:
  2071                           
  2072                           	psect	text9
  2073     0B5C                     __ptext9:	
  2074 ;; *************** function _Sensor_ReadIR *****************
  2075 ;; Defined at:
  2076 ;;		line 18 in file "sensor.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2090 ;;      Params:         0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 1
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104     0B5C                     _Sensor_ReadIR:	
  2105                           ;psect for function _Sensor_ReadIR
  2106                           
  2107     0B5C                     l2497:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _Sensor_ReadIR: [wreg+status,0]
  2110                           
  2111                           
  2112                           ;sensor.c: 21:     return (PORTAbits.RA4 == 0) ? 1 : 0;
  2113     0B5C  1003               	clrc
  2114     0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0B5E  1303               	bcf	3,6	;RP1=0, select bank0
  2116     0B5F  1E05               	btfss	5,4	;volatile
  2117     0B60  1403               	setc
  2118     0B61  3000               	movlw	0
  2119     0B62  1803               	skipnc
  2120     0B63  3001               	movlw	1
  2121     0B64                     l101:
  2122     0B64  0008               	return
  2123     0B65                     __end_of_Sensor_ReadIR:
  2124                           
  2125                           	psect	text10
  2126     0B2A                     __ptext10:	
  2127 ;; *************** function _Sensor_Init *****************
  2128 ;; Defined at:
  2129 ;;		line 6 in file "sensor.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		None
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157     0B2A                     _Sensor_Init:	
  2158                           ;psect for function _Sensor_Init
  2159                           
  2160     0B2A                     l2491:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _Sensor_Init: []
  2163                           
  2164                           
  2165                           ;sensor.c: 7:     TRISBbits.TRISB0 = 1;
  2166     0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  2167     0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  2168     0B2C  1406               	bsf	6,0	;volatile
  2169                           
  2170                           ;sensor.c: 8:     TRISAbits.TRISA4 = 1;
  2171     0B2D  1605               	bsf	5,4	;volatile
  2172     0B2E                     l95:
  2173     0B2E  0008               	return
  2174     0B2F                     __end_of_Sensor_Init:
  2175                           
  2176                           	psect	text11
  2177     0767                     __ptext11:	
  2178 ;; *************** function _RFID_Init *****************
  2179 ;; Defined at:
  2180 ;;		line 56 in file "rfid.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0
  2196 ;;      Temps:          0       2       0       0       0
  2197 ;;      Totals:         0       2       0       0       0
  2198 ;;Total ram usage:        2 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 2
  2201 ;; This function calls:
  2202 ;;		_RFID_Read
  2203 ;;		_RFID_Write
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209     0767                     _RFID_Init:	
  2210                           ;psect for function _RFID_Init
  2211                           
  2212     0767                     l2895:	
  2213                           ;incstack = 0
  2214                           ; Regs used in _RFID_Init: [wreg+status,2+status,0+pclath+cstack]
  2215                           
  2216                           
  2217                           ;rfid.c: 58:     TRISCbits.TRISC0 = 0;
  2218     0767  1683               	bsf	3,5	;RP0=1, select bank1
  2219     0768  1303               	bcf	3,6	;RP1=0, select bank1
  2220     0769  1007               	bcf	7,0	;volatile
  2221                           
  2222                           ;rfid.c: 59:     TRISCbits.TRISC3 = 0;
  2223     076A  1187               	bcf	7,3	;volatile
  2224                           
  2225                           ;rfid.c: 60:     TRISCbits.TRISC5 = 0;
  2226     076B  1287               	bcf	7,5	;volatile
  2227                           
  2228                           ;rfid.c: 61:     TRISCbits.TRISC4 = 1;
  2229     076C  1607               	bsf	7,4	;volatile
  2230                           
  2231                           ;rfid.c: 62:     TRISBbits.TRISB3 = 0;
  2232     076D  1186               	bcf	6,3	;volatile
  2233                           
  2234                           ;rfid.c: 65:     PORTBbits.RB3 = 0;
  2235     076E  1283               	bcf	3,5	;RP0=0, select bank0
  2236     076F  1303               	bcf	3,6	;RP1=0, select bank0
  2237     0770  1186               	bcf	6,3	;volatile
  2238     0771                     l2897:
  2239                           
  2240                           ;rfid.c: 66:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2241     0771  3041               	movlw	65
  2242     0772  1283               	bcf	3,5	;RP0=0, select bank0
  2243     0773  1303               	bcf	3,6	;RP1=0, select bank0
  2244     0774  00A5               	movwf	??_RFID_Init+1
  2245     0775  30ED               	movlw	237
  2246     0776  00A4               	movwf	??_RFID_Init
  2247     0777                     u3667:
  2248     0777  0BA4               	decfsz	??_RFID_Init,f
  2249     0778  2F77               	goto	u3667
  2250     0779  0BA5               	decfsz	??_RFID_Init+1,f
  2251     077A  2F77               	goto	u3667
  2252     077B  2F7C               	nop2
  2253     077C                     l2899:
  2254                           
  2255                           ;rfid.c: 67:     PORTBbits.RB3 = 1;
  2256     077C  1283               	bcf	3,5	;RP0=0, select bank0
  2257     077D  1303               	bcf	3,6	;RP1=0, select bank0
  2258     077E  1586               	bsf	6,3	;volatile
  2259                           
  2260                           ;rfid.c: 68:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2261     077F  3041               	movlw	65
  2262     0780  1283               	bcf	3,5	;RP0=0, select bank0
  2263     0781  1303               	bcf	3,6	;RP1=0, select bank0
  2264     0782  00A5               	movwf	??_RFID_Init+1
  2265     0783  30ED               	movlw	237
  2266     0784  00A4               	movwf	??_RFID_Init
  2267     0785                     u3677:
  2268     0785  0BA4               	decfsz	??_RFID_Init,f
  2269     0786  2F85               	goto	u3677
  2270     0787  0BA5               	decfsz	??_RFID_Init+1,f
  2271     0788  2F85               	goto	u3677
  2272     0789  2F8A               	nop2
  2273     078A                     l2901:
  2274                           
  2275                           ;rfid.c: 71:     RFID_Write(0x01, 0x0F);
  2276     078A  300F               	movlw	15
  2277     078B  00F8               	movwf	RFID_Write@data
  2278     078C  3001               	movlw	1
  2279     078D  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2280     0792                     l2903:
  2281                           
  2282                           ;rfid.c: 72:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2283     0792  3041               	movlw	65
  2284     0793  1283               	bcf	3,5	;RP0=0, select bank0
  2285     0794  1303               	bcf	3,6	;RP1=0, select bank0
  2286     0795  00A5               	movwf	??_RFID_Init+1
  2287     0796  30ED               	movlw	237
  2288     0797  00A4               	movwf	??_RFID_Init
  2289     0798                     u3687:
  2290     0798  0BA4               	decfsz	??_RFID_Init,f
  2291     0799  2F98               	goto	u3687
  2292     079A  0BA5               	decfsz	??_RFID_Init+1,f
  2293     079B  2F98               	goto	u3687
  2294     079C  2F9D               	nop2
  2295                           
  2296                           ;rfid.c: 75:     while(RFID_Read(0x01) & (1 << 4)) {
  2297     079D  2FA9               	goto	l2907
  2298     079E                     l2905:
  2299                           
  2300                           ;rfid.c: 76:         _delay((unsigned long)((1)*(20000000/4000.0)));
  2301     079E  3007               	movlw	7
  2302     079F  1283               	bcf	3,5	;RP0=0, select bank0
  2303     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2304     07A1  00A5               	movwf	??_RFID_Init+1
  2305     07A2  307C               	movlw	124
  2306     07A3  00A4               	movwf	??_RFID_Init
  2307     07A4                     u3697:
  2308     07A4  0BA4               	decfsz	??_RFID_Init,f
  2309     07A5  2FA4               	goto	u3697
  2310     07A6  0BA5               	decfsz	??_RFID_Init+1,f
  2311     07A7  2FA4               	goto	u3697
  2312     07A8  0000               	nop
  2313     07A9                     l2907:
  2314                           
  2315                           ;rfid.c: 75:     while(RFID_Read(0x01) & (1 << 4)) {
  2316     07A9  3001               	movlw	1
  2317     07AA  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2318     07AF  3910               	andlw	16
  2319     07B0  1D03               	btfss	3,2
  2320     07B1  2FB3               	goto	u3351
  2321     07B2  2FB4               	goto	u3350
  2322     07B3                     u3351:
  2323     07B3  2F9E               	goto	l2905
  2324     07B4                     u3350:
  2325     07B4                     l2909:
  2326                           
  2327                           ;rfid.c: 80:     RFID_Write(0x2A, 0x8D);
  2328     07B4  308D               	movlw	141
  2329     07B5  00F8               	movwf	RFID_Write@data
  2330     07B6  302A               	movlw	42
  2331     07B7  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2332                           
  2333                           ;rfid.c: 81:     RFID_Write(0x2B, 0x3E);
  2334     07BC  303E               	movlw	62
  2335     07BD  00F8               	movwf	RFID_Write@data
  2336     07BE  302B               	movlw	43
  2337     07BF  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2338                           
  2339                           ;rfid.c: 82:     RFID_Write(0x2D, 30);
  2340     07C4  301E               	movlw	30
  2341     07C5  00F8               	movwf	RFID_Write@data
  2342     07C6  302D               	movlw	45
  2343     07C7  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2344                           
  2345                           ;rfid.c: 83:     RFID_Write(0x2C, 0);
  2346     07CC  01F8               	clrf	RFID_Write@data
  2347     07CD  302C               	movlw	44
  2348     07CE  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2349                           
  2350                           ;rfid.c: 85:     RFID_Write(0x15, 0x40);
  2351     07D3  3040               	movlw	64
  2352     07D4  00F8               	movwf	RFID_Write@data
  2353     07D5  3015               	movlw	21
  2354     07D6  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2355                           
  2356                           ;rfid.c: 86:     RFID_Write(0x11, 0x3D);
  2357     07DB  303D               	movlw	61
  2358     07DC  00F8               	movwf	RFID_Write@data
  2359     07DD  3011               	movlw	17
  2360     07DE  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2361                           
  2362                           ;rfid.c: 89:     RFID_Write(0x14, RFID_Read(0x14) | 0x03);
  2363     07E3  3014               	movlw	20
  2364     07E4  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2365     07E9  3803               	iorlw	3
  2366     07EA  00F8               	movwf	RFID_Write@data
  2367     07EB  3014               	movlw	20
  2368     07EC  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2369     07F1                     l2911:
  2370                           
  2371                           ;rfid.c: 91:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2372     07F1  3041               	movlw	65
  2373     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  2374     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  2375     07F4  00A5               	movwf	??_RFID_Init+1
  2376     07F5  30ED               	movlw	237
  2377     07F6  00A4               	movwf	??_RFID_Init
  2378     07F7                     u3707:
  2379     07F7  0BA4               	decfsz	??_RFID_Init,f
  2380     07F8  2FF7               	goto	u3707
  2381     07F9  0BA5               	decfsz	??_RFID_Init+1,f
  2382     07FA  2FF7               	goto	u3707
  2383     07FB  2FFC               	nop2
  2384     07FC                     l33:
  2385     07FC  0008               	return
  2386     07FD                     __end_of_RFID_Init:
  2387                           
  2388                           	psect	text12
  2389     0C1F                     __ptext12:	
  2390 ;; *************** function _RFID_CheckCard *****************
  2391 ;; Defined at:
  2392 ;;		line 95 in file "rfid.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  backBits        2   26[BANK0 ] unsigned short 
  2397 ;;  buffer          2   22[BANK0 ] unsigned char [2]
  2398 ;;  status          1   24[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      unsigned char 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       6       0       0       0
  2410 ;;      Temps:          0       0       0       0       0
  2411 ;;      Totals:         0       6       0       0       0
  2412 ;;Total ram usage:        6 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 3
  2415 ;; This function calls:
  2416 ;;		_RFID_ToCard
  2417 ;;		_RFID_Write
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423     0C1F                     _RFID_CheckCard:	
  2424                           ;psect for function _RFID_CheckCard
  2425                           
  2426     0C1F                     l2445:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _RFID_CheckCard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2429                           
  2430                           
  2431                           ;rfid.c: 96:     uint8_t buffer[2];;rfid.c: 97:     uint16_t backBits;;rfid.c: 99:     R
      +                          FID_Write(0x0D, 0x07);
  2432     0C1F  3007               	movlw	7
  2433     0C20  00F8               	movwf	RFID_Write@data
  2434     0C21  300D               	movlw	13
  2435     0C22  120A  158A  24F3  120A  158A  	fcall	_RFID_Write
  2436     0C27                     l2447:
  2437                           
  2438                           ;rfid.c: 101:     buffer[0] = 0x26;
  2439     0C27  3026               	movlw	38
  2440     0C28  1283               	bcf	3,5	;RP0=0, select bank0
  2441     0C29  1303               	bcf	3,6	;RP1=0, select bank0
  2442     0C2A  00B6               	movwf	RFID_CheckCard@buffer
  2443     0C2B                     l2449:
  2444                           
  2445                           ;rfid.c: 102:     uint8_t status = RFID_ToCard(0x0C, buffer, 1, buffer, &backBits);
  2446     0C2B  3036               	movlw	(low (RFID_CheckCard@buffer| 0))& (0+255)
  2447     0C2C  00A4               	movwf	RFID_ToCard@sendData
  2448     0C2D  01A5               	clrf	RFID_ToCard@sendLen
  2449     0C2E  0AA5               	incf	RFID_ToCard@sendLen,f
  2450     0C2F  3036               	movlw	(low (RFID_CheckCard@buffer| 0))& (0+255)
  2451     0C30  00A6               	movwf	RFID_ToCard@backData
  2452     0C31  303A               	movlw	(low (RFID_CheckCard@backBits| 0))& (0+255)
  2453     0C32  00A7               	movwf	RFID_ToCard@backLen
  2454     0C33  300C               	movlw	12
  2455     0C34  120A  118A  241B  120A  158A  	fcall	_RFID_ToCard
  2456     0C39  1283               	bcf	3,5	;RP0=0, select bank0
  2457     0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  2458     0C3B  00B8               	movwf	RFID_CheckCard@status
  2459     0C3C                     l2451:
  2460                           
  2461                           ;rfid.c: 104:     return (status == 0 && backBits == 0x10) ? 1 : 0;
  2462     0C3C  01B9               	clrf	_RFID_CheckCard$172
  2463     0C3D                     l2453:
  2464     0C3D  0838               	movf	RFID_CheckCard@status,w
  2465     0C3E  1D03               	btfss	3,2
  2466     0C3F  2C41               	goto	u2671
  2467     0C40  2C42               	goto	u2670
  2468     0C41                     u2671:
  2469     0C41  2C4B               	goto	l2459
  2470     0C42                     u2670:
  2471     0C42                     l2455:
  2472     0C42  3010               	movlw	16
  2473     0C43  063A               	xorwf	RFID_CheckCard@backBits,w
  2474     0C44  043B               	iorwf	RFID_CheckCard@backBits+1,w
  2475     0C45  1D03               	btfss	3,2
  2476     0C46  2C48               	goto	u2681
  2477     0C47  2C49               	goto	u2680
  2478     0C48                     u2681:
  2479     0C48  2C4B               	goto	l2459
  2480     0C49                     u2680:
  2481     0C49                     l2457:
  2482     0C49  3001               	movlw	1
  2483     0C4A  00B9               	movwf	_RFID_CheckCard$172
  2484     0C4B                     l2459:
  2485     0C4B  0839               	movf	_RFID_CheckCard$172,w
  2486     0C4C                     l38:
  2487     0C4C  0008               	return
  2488     0C4D                     __end_of_RFID_CheckCard:
  2489                           
  2490                           	psect	text13
  2491     041B                     __ptext13:	
  2492 ;; *************** function _RFID_ToCard *****************
  2493 ;; Defined at:
  2494 ;;		line 108 in file "rfid.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  command         1    wreg     unsigned char 
  2497 ;;  sendData        1    4[BANK0 ] PTR unsigned char 
  2498 ;;		 -> RFID_CheckCard@buffer(2), 
  2499 ;;  sendLen         1    5[BANK0 ] unsigned char 
  2500 ;;  backData        1    6[BANK0 ] PTR unsigned char 
  2501 ;;		 -> RFID_CheckCard@buffer(2), 
  2502 ;;  backLen         1    7[BANK0 ] PTR unsigned short 
  2503 ;;		 -> RFID_CheckCard@backBits(2), 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  command         1   18[BANK0 ] unsigned char 
  2506 ;;  i               2   20[BANK0 ] unsigned short 
  2507 ;;  n               1   19[BANK0 ] unsigned char 
  2508 ;;  lastBits        1   17[BANK0 ] unsigned char 
  2509 ;;  waitIRq         1   16[BANK0 ] unsigned char 
  2510 ;;  irqEn           1   15[BANK0 ] unsigned char 
  2511 ;;  status          1   14[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       4       0       0       0
  2522 ;;      Locals:         0       8       0       0       0
  2523 ;;      Temps:          0       6       0       0       0
  2524 ;;      Totals:         0      18       0       0       0
  2525 ;;Total ram usage:       18 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 2
  2528 ;; This function calls:
  2529 ;;		_RFID_Read
  2530 ;;		_RFID_Write
  2531 ;; This function is called by:
  2532 ;;		_RFID_CheckCard
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536     041B                     _RFID_ToCard:	
  2537                           ;psect for function _RFID_ToCard
  2538                           
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _RFID_ToCard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2542                           ;RFID_ToCard@command stored from wreg
  2543     041B  1283               	bcf	3,5	;RP0=0, select bank0
  2544     041C  1303               	bcf	3,6	;RP1=0, select bank0
  2545     041D  00B2               	movwf	RFID_ToCard@command
  2546     041E                     l2329:
  2547                           
  2548                           ;rfid.c: 109:     uint8_t status = 1;
  2549     041E  3001               	movlw	1
  2550     041F  00AE               	movwf	RFID_ToCard@status
  2551     0420                     l2331:
  2552                           
  2553                           ;rfid.c: 110:     uint8_t irqEn = 0x00;
  2554     0420  01AF               	clrf	RFID_ToCard@irqEn
  2555                           
  2556                           ;rfid.c: 111:     uint8_t waitIRq = 0x00;
  2557     0421  01B0               	clrf	RFID_ToCard@waitIRq
  2558     0422                     l2333:
  2559                           
  2560                           ;rfid.c: 112:     uint8_t lastBits;;rfid.c: 113:     uint8_t n;;rfid.c: 114:     uint16_
      +                          t i;;rfid.c: 116:     if(command == 0x0C) {
  2561     0422  300C               	movlw	12
  2562     0423  0632               	xorwf	RFID_ToCard@command,w
  2563     0424  1D03               	btfss	3,2
  2564     0425  2C27               	goto	u2531
  2565     0426  2C28               	goto	u2530
  2566     0427                     u2531:
  2567     0427  2C2C               	goto	l2337
  2568     0428                     u2530:
  2569     0428                     l2335:
  2570                           
  2571                           ;rfid.c: 117:         irqEn = 0x77;
  2572     0428  3077               	movlw	119
  2573     0429  00AF               	movwf	RFID_ToCard@irqEn
  2574                           
  2575                           ;rfid.c: 118:         waitIRq = 0x30;
  2576     042A  3030               	movlw	48
  2577     042B  00B0               	movwf	RFID_ToCard@waitIRq
  2578     042C                     l2337:
  2579                           
  2580                           ;rfid.c: 121:     RFID_Write(0x02, irqEn | 0x80);
  2581     042C  082F               	movf	RFID_ToCard@irqEn,w
  2582     042D  3880               	iorlw	128
  2583     042E  00F8               	movwf	RFID_Write@data
  2584     042F  3002               	movlw	2
  2585     0430  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2586                           
  2587                           ;rfid.c: 122:     RFID_Write(0x04, 0x7F);
  2588     0435  307F               	movlw	127
  2589     0436  00F8               	movwf	RFID_Write@data
  2590     0437  3004               	movlw	4
  2591     0438  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2592                           
  2593                           ;rfid.c: 123:     RFID_Write(0x0A, 0x80);
  2594     043D  3080               	movlw	128
  2595     043E  00F8               	movwf	RFID_Write@data
  2596     043F  300A               	movlw	10
  2597     0440  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2598                           
  2599                           ;rfid.c: 125:     RFID_Write(0x01, 0x00);
  2600     0445  01F8               	clrf	RFID_Write@data
  2601     0446  3001               	movlw	1
  2602     0447  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2603     044C                     l2339:
  2604                           
  2605                           ;rfid.c: 128:     for(i = 0; i < sendLen; i++) {
  2606     044C  1283               	bcf	3,5	;RP0=0, select bank0
  2607     044D  1303               	bcf	3,6	;RP1=0, select bank0
  2608     044E  01B4               	clrf	RFID_ToCard@i
  2609     044F  01B5               	clrf	RFID_ToCard@i+1
  2610     0450  2C67               	goto	l2345
  2611     0451                     l2341:
  2612                           
  2613                           ;rfid.c: 129:         RFID_Write(0x09, sendData[i]);
  2614     0451  0834               	movf	RFID_ToCard@i,w
  2615     0452  0724               	addwf	RFID_ToCard@sendData,w
  2616     0453  00A8               	movwf	??_RFID_ToCard
  2617     0454  0828               	movf	??_RFID_ToCard,w
  2618     0455  0084               	movwf	4
  2619     0456  1383               	bcf	3,7	;select IRP bank0
  2620     0457  0800               	movf	0,w
  2621     0458  00F8               	movwf	RFID_Write@data
  2622     0459  3009               	movlw	9
  2623     045A  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2624     045F                     l2343:
  2625                           
  2626                           ;rfid.c: 130:     }
  2627     045F  3001               	movlw	1
  2628     0460  1283               	bcf	3,5	;RP0=0, select bank0
  2629     0461  1303               	bcf	3,6	;RP1=0, select bank0
  2630     0462  07B4               	addwf	RFID_ToCard@i,f
  2631     0463  1803               	skipnc
  2632     0464  0AB5               	incf	RFID_ToCard@i+1,f
  2633     0465  3000               	movlw	0
  2634     0466  07B5               	addwf	RFID_ToCard@i+1,f
  2635     0467                     l2345:
  2636     0467  0825               	movf	RFID_ToCard@sendLen,w
  2637     0468  00A8               	movwf	??_RFID_ToCard
  2638     0469  01A9               	clrf	??_RFID_ToCard+1
  2639     046A  0829               	movf	??_RFID_ToCard+1,w
  2640     046B  0235               	subwf	RFID_ToCard@i+1,w
  2641     046C  1D03               	skipz
  2642     046D  2C70               	goto	u2545
  2643     046E  0828               	movf	??_RFID_ToCard,w
  2644     046F  0234               	subwf	RFID_ToCard@i,w
  2645     0470                     u2545:
  2646     0470  1C03               	skipc
  2647     0471  2C73               	goto	u2541
  2648     0472  2C74               	goto	u2540
  2649     0473                     u2541:
  2650     0473  2C51               	goto	l2341
  2651     0474                     u2540:
  2652     0474                     l2347:
  2653                           
  2654                           ;rfid.c: 133:     RFID_Write(0x01, command);
  2655     0474  0832               	movf	RFID_ToCard@command,w
  2656     0475  00F8               	movwf	RFID_Write@data
  2657     0476  3001               	movlw	1
  2658     0477  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2659     047C                     l2349:
  2660                           
  2661                           ;rfid.c: 135:     if(command == 0x0C) {
  2662     047C  300C               	movlw	12
  2663     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2664     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2665     047F  0632               	xorwf	RFID_ToCard@command,w
  2666     0480  1D03               	btfss	3,2
  2667     0481  2C83               	goto	u2551
  2668     0482  2C84               	goto	u2550
  2669     0483                     u2551:
  2670     0483  2C92               	goto	l2353
  2671     0484                     u2550:
  2672     0484                     l2351:
  2673                           
  2674                           ;rfid.c: 136:         RFID_Write(0x0D, RFID_Read(0x0D) | 0x80);
  2675     0484  300D               	movlw	13
  2676     0485  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2677     048A  3880               	iorlw	128
  2678     048B  00F8               	movwf	RFID_Write@data
  2679     048C  300D               	movlw	13
  2680     048D  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2681     0492                     l2353:
  2682                           
  2683                           ;rfid.c: 140:     i = 1000;
  2684     0492  30E8               	movlw	232
  2685     0493  1283               	bcf	3,5	;RP0=0, select bank0
  2686     0494  1303               	bcf	3,6	;RP1=0, select bank0
  2687     0495  00B4               	movwf	RFID_ToCard@i
  2688     0496  3003               	movlw	3
  2689     0497  00B5               	movwf	RFID_ToCard@i+1
  2690                           
  2691                           ;rfid.c: 141:     while(i > 0) {
  2692     0498  2CBF               	goto	l2365
  2693     0499                     l2355:
  2694                           
  2695                           ;rfid.c: 142:         n = RFID_Read(0x04);
  2696     0499  3004               	movlw	4
  2697     049A  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2698     049F  1283               	bcf	3,5	;RP0=0, select bank0
  2699     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2700     04A1  00B3               	movwf	RFID_ToCard@n
  2701     04A2                     l2357:
  2702                           
  2703                           ;rfid.c: 143:         if(n & waitIRq) break;
  2704     04A2  0833               	movf	RFID_ToCard@n,w
  2705     04A3  0530               	andwf	RFID_ToCard@waitIRq,w
  2706     04A4  1903               	btfsc	3,2
  2707     04A5  2CA7               	goto	u2561
  2708     04A6  2CA8               	goto	u2560
  2709     04A7                     u2561:
  2710     04A7  2CA9               	goto	l48
  2711     04A8                     u2560:
  2712     04A8  2CC7               	goto	l2367
  2713     04A9                     l48:
  2714                           
  2715                           ;rfid.c: 144:         if(n & 0x01) break;
  2716     04A9  1C33               	btfss	RFID_ToCard@n,0
  2717     04AA  2CAC               	goto	u2571
  2718     04AB  2CAD               	goto	u2570
  2719     04AC                     u2571:
  2720     04AC  2CAE               	goto	l2363
  2721     04AD                     u2570:
  2722     04AD  2CC7               	goto	l2367
  2723     04AE                     l2363:
  2724                           
  2725                           ;rfid.c: 145:         i--;
  2726     04AE  3001               	movlw	1
  2727     04AF  02B4               	subwf	RFID_ToCard@i,f
  2728     04B0  3000               	movlw	0
  2729     04B1  1C03               	skipc
  2730     04B2  03B5               	decf	RFID_ToCard@i+1,f
  2731     04B3  02B5               	subwf	RFID_ToCard@i+1,f
  2732                           
  2733                           ;rfid.c: 146:         _delay((unsigned long)((1)*(20000000/4000.0)));
  2734     04B4  3007               	movlw	7
  2735     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2736     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2737     04B7  00A9               	movwf	??_RFID_ToCard+1
  2738     04B8  307C               	movlw	124
  2739     04B9  00A8               	movwf	??_RFID_ToCard
  2740     04BA                     u3717:
  2741     04BA  0BA8               	decfsz	??_RFID_ToCard,f
  2742     04BB  2CBA               	goto	u3717
  2743     04BC  0BA9               	decfsz	??_RFID_ToCard+1,f
  2744     04BD  2CBA               	goto	u3717
  2745     04BE  0000               	nop
  2746     04BF                     l2365:
  2747                           
  2748                           ;rfid.c: 141:     while(i > 0) {
  2749     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2750     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2751     04C1  0834               	movf	RFID_ToCard@i,w
  2752     04C2  0435               	iorwf	RFID_ToCard@i+1,w
  2753     04C3  1D03               	btfss	3,2
  2754     04C4  2CC6               	goto	u2581
  2755     04C5  2CC7               	goto	u2580
  2756     04C6                     u2581:
  2757     04C6  2C99               	goto	l2355
  2758     04C7                     u2580:
  2759     04C7                     l2367:
  2760                           
  2761                           ;rfid.c: 149:     RFID_Write(0x0D, RFID_Read(0x0D) & ~0x80);
  2762     04C7  300D               	movlw	13
  2763     04C8  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2764     04CD  00F8               	movwf	RFID_Write@data
  2765     04CE  307F               	movlw	127
  2766     04CF  05F8               	andwf	RFID_Write@data,f
  2767     04D0  300D               	movlw	13
  2768     04D1  120A  158A  24F3  120A  118A  	fcall	_RFID_Write
  2769     04D6                     l2369:
  2770                           
  2771                           ;rfid.c: 151:     if(i > 0) {
  2772     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2773     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2774     04D8  0834               	movf	RFID_ToCard@i,w
  2775     04D9  0435               	iorwf	RFID_ToCard@i+1,w
  2776     04DA  1903               	btfsc	3,2
  2777     04DB  2CDD               	goto	u2591
  2778     04DC  2CDE               	goto	u2590
  2779     04DD                     u2591:
  2780     04DD  2D71               	goto	l2399
  2781     04DE                     u2590:
  2782     04DE                     l2371:
  2783                           
  2784                           ;rfid.c: 152:         if(!(RFID_Read(0x06) & 0x1B)) {
  2785     04DE  3006               	movlw	6
  2786     04DF  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2787     04E4  391B               	andlw	27
  2788     04E5  1D03               	btfss	3,2
  2789     04E6  2CE8               	goto	u2601
  2790     04E7  2CE9               	goto	u2600
  2791     04E8                     u2601:
  2792     04E8  2D71               	goto	l2399
  2793     04E9                     u2600:
  2794     04E9                     l2373:
  2795                           
  2796                           ;rfid.c: 153:             status = 0;
  2797     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2798     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2799     04EB  01AE               	clrf	RFID_ToCard@status
  2800     04EC                     l2375:
  2801                           
  2802                           ;rfid.c: 155:             if(command == 0x0C) {
  2803     04EC  300C               	movlw	12
  2804     04ED  0632               	xorwf	RFID_ToCard@command,w
  2805     04EE  1D03               	btfss	3,2
  2806     04EF  2CF1               	goto	u2611
  2807     04F0  2CF2               	goto	u2610
  2808     04F1                     u2611:
  2809     04F1  2D71               	goto	l2399
  2810     04F2                     u2610:
  2811     04F2                     l2377:
  2812                           
  2813                           ;rfid.c: 156:                 n = RFID_Read(0x0A);
  2814     04F2  300A               	movlw	10
  2815     04F3  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2816     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2817     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2818     04FA  00B3               	movwf	RFID_ToCard@n
  2819                           
  2820                           ;rfid.c: 157:                 lastBits = RFID_Read(0x0C) & 0x07;
  2821     04FB  300C               	movlw	12
  2822     04FC  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2823     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2824     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2825     0503  00B1               	movwf	RFID_ToCard@lastBits
  2826     0504                     l2379:
  2827     0504  3007               	movlw	7
  2828     0505  05B1               	andwf	RFID_ToCard@lastBits,f
  2829     0506                     l2381:
  2830                           
  2831                           ;rfid.c: 159:                 if(lastBits) {
  2832     0506  0831               	movf	RFID_ToCard@lastBits,w
  2833     0507  1903               	btfsc	3,2
  2834     0508  2D0A               	goto	u2621
  2835     0509  2D0B               	goto	u2620
  2836     050A                     u2621:
  2837     050A  2D30               	goto	l2385
  2838     050B                     u2620:
  2839     050B                     l2383:
  2840                           
  2841                           ;rfid.c: 160:                     *backLen = (n - 1) * 8 + lastBits;
  2842     050B  0833               	movf	RFID_ToCard@n,w
  2843     050C  00A8               	movwf	??_RFID_ToCard
  2844     050D  01A9               	clrf	??_RFID_ToCard+1
  2845     050E  1003               	clrc
  2846     050F  0DA8               	rlf	??_RFID_ToCard,f
  2847     0510  0DA9               	rlf	??_RFID_ToCard+1,f
  2848     0511  1003               	clrc
  2849     0512  0DA8               	rlf	??_RFID_ToCard,f
  2850     0513  0DA9               	rlf	??_RFID_ToCard+1,f
  2851     0514  1003               	clrc
  2852     0515  0DA8               	rlf	??_RFID_ToCard,f
  2853     0516  0DA9               	rlf	??_RFID_ToCard+1,f
  2854     0517  0831               	movf	RFID_ToCard@lastBits,w
  2855     0518  0728               	addwf	??_RFID_ToCard,w
  2856     0519  00AA               	movwf	??_RFID_ToCard+2
  2857     051A  3000               	movlw	0
  2858     051B  1803               	skipnc
  2859     051C  3001               	movlw	1
  2860     051D  0729               	addwf	??_RFID_ToCard+1,w
  2861     051E  00AB               	movwf	??_RFID_ToCard+3
  2862     051F  082A               	movf	??_RFID_ToCard+2,w
  2863     0520  3EF8               	addlw	248
  2864     0521  00AC               	movwf	??_RFID_ToCard+4
  2865     0522  082B               	movf	??_RFID_ToCard+3,w
  2866     0523  1803               	skipnc
  2867     0524  3E01               	addlw	1
  2868     0525  3EFF               	addlw	255
  2869     0526  00AD               	movwf	??_RFID_ToCard+5
  2870     0527  0827               	movf	RFID_ToCard@backLen,w
  2871     0528  0084               	movwf	4
  2872     0529  082C               	movf	??_RFID_ToCard+4,w
  2873     052A  1383               	bcf	3,7	;select IRP bank0
  2874     052B  0080               	movwf	0
  2875     052C  0A84               	incf	4,f
  2876     052D  082D               	movf	??_RFID_ToCard+5,w
  2877     052E  0080               	movwf	0
  2878                           
  2879                           ;rfid.c: 161:                 } else {
  2880     052F  2D44               	goto	l2387
  2881     0530                     l2385:
  2882                           
  2883                           ;rfid.c: 162:                     *backLen = n * 8;
  2884     0530  0833               	movf	RFID_ToCard@n,w
  2885     0531  00A8               	movwf	??_RFID_ToCard
  2886     0532  01A9               	clrf	??_RFID_ToCard+1
  2887     0533  1003               	clrc
  2888     0534  0DA8               	rlf	??_RFID_ToCard,f
  2889     0535  0DA9               	rlf	??_RFID_ToCard+1,f
  2890     0536  1003               	clrc
  2891     0537  0DA8               	rlf	??_RFID_ToCard,f
  2892     0538  0DA9               	rlf	??_RFID_ToCard+1,f
  2893     0539  1003               	clrc
  2894     053A  0DA8               	rlf	??_RFID_ToCard,f
  2895     053B  0DA9               	rlf	??_RFID_ToCard+1,f
  2896     053C  0827               	movf	RFID_ToCard@backLen,w
  2897     053D  0084               	movwf	4
  2898     053E  0828               	movf	??_RFID_ToCard,w
  2899     053F  1383               	bcf	3,7	;select IRP bank0
  2900     0540  0080               	movwf	0
  2901     0541  0A84               	incf	4,f
  2902     0542  0829               	movf	??_RFID_ToCard+1,w
  2903     0543  0080               	movwf	0
  2904     0544                     l2387:
  2905                           
  2906                           ;rfid.c: 165:                 if(n > 16) n = 16;
  2907     0544  3011               	movlw	17
  2908     0545  0233               	subwf	RFID_ToCard@n,w
  2909     0546  1C03               	skipc
  2910     0547  2D49               	goto	u2631
  2911     0548  2D4A               	goto	u2630
  2912     0549                     u2631:
  2913     0549  2D4C               	goto	l2391
  2914     054A                     u2630:
  2915     054A                     l2389:
  2916     054A  3010               	movlw	16
  2917     054B  00B3               	movwf	RFID_ToCard@n
  2918     054C                     l2391:
  2919                           
  2920                           ;rfid.c: 166:                 for(i = 0; i < n; i++) {
  2921     054C  01B4               	clrf	RFID_ToCard@i
  2922     054D  01B5               	clrf	RFID_ToCard@i+1
  2923     054E  2D64               	goto	l2397
  2924     054F                     l2393:
  2925                           
  2926                           ;rfid.c: 167:                     backData[i] = RFID_Read(0x09);
  2927     054F  0834               	movf	RFID_ToCard@i,w
  2928     0550  0726               	addwf	RFID_ToCard@backData,w
  2929     0551  00A8               	movwf	??_RFID_ToCard
  2930     0552  0828               	movf	??_RFID_ToCard,w
  2931     0553  0084               	movwf	4
  2932     0554  3009               	movlw	9
  2933     0555  120A  158A  2483  120A  118A  	fcall	_RFID_Read
  2934     055A  1383               	bcf	3,7	;select IRP bank0
  2935     055B  0080               	movwf	0
  2936     055C                     l2395:
  2937                           
  2938                           ;rfid.c: 168:                 }
  2939     055C  3001               	movlw	1
  2940     055D  1283               	bcf	3,5	;RP0=0, select bank0
  2941     055E  1303               	bcf	3,6	;RP1=0, select bank0
  2942     055F  07B4               	addwf	RFID_ToCard@i,f
  2943     0560  1803               	skipnc
  2944     0561  0AB5               	incf	RFID_ToCard@i+1,f
  2945     0562  3000               	movlw	0
  2946     0563  07B5               	addwf	RFID_ToCard@i+1,f
  2947     0564                     l2397:
  2948     0564  0833               	movf	RFID_ToCard@n,w
  2949     0565  00A8               	movwf	??_RFID_ToCard
  2950     0566  01A9               	clrf	??_RFID_ToCard+1
  2951     0567  0829               	movf	??_RFID_ToCard+1,w
  2952     0568  0235               	subwf	RFID_ToCard@i+1,w
  2953     0569  1D03               	skipz
  2954     056A  2D6D               	goto	u2645
  2955     056B  0828               	movf	??_RFID_ToCard,w
  2956     056C  0234               	subwf	RFID_ToCard@i,w
  2957     056D                     u2645:
  2958     056D  1C03               	skipc
  2959     056E  2D70               	goto	u2641
  2960     056F  2D71               	goto	u2640
  2961     0570                     u2641:
  2962     0570  2D4F               	goto	l2393
  2963     0571                     u2640:
  2964     0571                     l2399:
  2965                           
  2966                           ;rfid.c: 173:     return status;
  2967     0571  1283               	bcf	3,5	;RP0=0, select bank0
  2968     0572  1303               	bcf	3,6	;RP1=0, select bank0
  2969     0573  082E               	movf	RFID_ToCard@status,w
  2970     0574                     l60:
  2971     0574  0008               	return
  2972     0575                     __end_of_RFID_ToCard:
  2973                           
  2974                           	psect	text14
  2975     0CF3                     __ptext14:	
  2976 ;; *************** function _RFID_Write *****************
  2977 ;; Defined at:
  2978 ;;		line 6 in file "rfid.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  addr            1    wreg     unsigned char 
  2981 ;;  data            1    8[COMMON] unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  addr            1    0[BANK0 ] unsigned char 
  2984 ;;  i               1    3[BANK0 ] unsigned char 
  2985 ;;  i               1    2[BANK0 ] unsigned char 
  2986 ;;  address         1    1[BANK0 ] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         1       0       0       0       0
  2997 ;;      Locals:         0       4       0       0       0
  2998 ;;      Temps:          1       0       0       0       0
  2999 ;;      Totals:         2       4       0       0       0
  3000 ;;Total ram usage:        6 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_RFID_Init
  3007 ;;		_RFID_CheckCard
  3008 ;;		_RFID_ToCard
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012     0CF3                     _RFID_Write:	
  3013                           ;psect for function _RFID_Write
  3014                           
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _RFID_Write: [wreg+status,2+status,0]
  3018                           ;RFID_Write@addr stored from wreg
  3019     0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  3020     0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  3021     0CF5  00A0               	movwf	RFID_Write@addr
  3022     0CF6                     l2225:
  3023                           
  3024                           ;rfid.c: 7:     PORTCbits.RC0 = 0;
  3025     0CF6  1007               	bcf	7,0	;volatile
  3026     0CF7                     l2227:
  3027                           
  3028                           ;rfid.c: 10:     uint8_t address = (addr << 1) & 0x7E;
  3029     0CF7  0820               	movf	RFID_Write@addr,w
  3030     0CF8  00F9               	movwf	??_RFID_Write
  3031     0CF9  0779               	addwf	??_RFID_Write,w
  3032     0CFA  00A1               	movwf	RFID_Write@address
  3033     0CFB  307E               	movlw	126
  3034     0CFC  05A1               	andwf	RFID_Write@address,f
  3035     0CFD                     l2229:
  3036                           
  3037                           ;rfid.c: 11:     for(uint8_t i = 0; i < 8; i++) {
  3038     0CFD  01A2               	clrf	RFID_Write@i
  3039     0CFE                     l15:
  3040                           
  3041                           ;rfid.c: 12:         PORTCbits.RC3 = 0;
  3042     0CFE  1187               	bcf	7,3	;volatile
  3043                           
  3044                           ;rfid.c: 13:         PORTCbits.RC5 = (address & 0x80) ? 1 : 0;
  3045     0CFF  1BA1               	btfsc	RFID_Write@address,7
  3046     0D00  2D02               	goto	u2381
  3047     0D01  2D06               	goto	u2380
  3048     0D02                     u2381:
  3049     0D02  1283               	bcf	3,5	;RP0=0, select bank0
  3050     0D03  1303               	bcf	3,6	;RP1=0, select bank0
  3051     0D04  1687               	bsf	7,5	;volatile
  3052     0D05  2D09               	goto	u2394
  3053     0D06                     u2380:
  3054     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3055     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3056     0D08  1287               	bcf	7,5	;volatile
  3057     0D09                     u2394:
  3058     0D09                     l2235:
  3059                           
  3060                           ;rfid.c: 14:         address <<= 1;
  3061     0D09  1003               	clrc
  3062     0D0A  0DA1               	rlf	RFID_Write@address,f
  3063     0D0B                     l2237:
  3064                           
  3065                           ;rfid.c: 15:         PORTCbits.RC3 = 1;
  3066     0D0B  1587               	bsf	7,3	;volatile
  3067     0D0C                     l2239:
  3068                           
  3069                           ;rfid.c: 16:     }
  3070     0D0C  3001               	movlw	1
  3071     0D0D  07A2               	addwf	RFID_Write@i,f
  3072     0D0E                     l2241:
  3073     0D0E  3008               	movlw	8
  3074     0D0F  0222               	subwf	RFID_Write@i,w
  3075     0D10  1C03               	skipc
  3076     0D11  2D13               	goto	u2401
  3077     0D12  2D14               	goto	u2400
  3078     0D13                     u2401:
  3079     0D13  2CFE               	goto	l15
  3080     0D14                     u2400:
  3081     0D14                     l2243:
  3082                           
  3083                           ;rfid.c: 19:     for(uint8_t i = 0; i < 8; i++) {
  3084     0D14  01A3               	clrf	RFID_Write@i_134
  3085     0D15                     l17:
  3086                           
  3087                           ;rfid.c: 20:         PORTCbits.RC3 = 0;
  3088     0D15  1187               	bcf	7,3	;volatile
  3089                           
  3090                           ;rfid.c: 21:         PORTCbits.RC5 = (data & 0x80) ? 1 : 0;
  3091     0D16  1BF8               	btfsc	RFID_Write@data,7
  3092     0D17  2D19               	goto	u2411
  3093     0D18  2D1D               	goto	u2410
  3094     0D19                     u2411:
  3095     0D19  1283               	bcf	3,5	;RP0=0, select bank0
  3096     0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  3097     0D1B  1687               	bsf	7,5	;volatile
  3098     0D1C  2D20               	goto	u2424
  3099     0D1D                     u2410:
  3100     0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  3101     0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  3102     0D1F  1287               	bcf	7,5	;volatile
  3103     0D20                     u2424:
  3104     0D20                     l2249:
  3105                           
  3106                           ;rfid.c: 22:         data <<= 1;
  3107     0D20  1003               	clrc
  3108     0D21  0DF8               	rlf	RFID_Write@data,f
  3109     0D22                     l2251:
  3110                           
  3111                           ;rfid.c: 23:         PORTCbits.RC3 = 1;
  3112     0D22  1587               	bsf	7,3	;volatile
  3113     0D23                     l2253:
  3114                           
  3115                           ;rfid.c: 24:     }
  3116     0D23  3001               	movlw	1
  3117     0D24  07A3               	addwf	RFID_Write@i_134,f
  3118     0D25                     l2255:
  3119     0D25  3008               	movlw	8
  3120     0D26  0223               	subwf	RFID_Write@i_134,w
  3121     0D27  1C03               	skipc
  3122     0D28  2D2A               	goto	u2431
  3123     0D29  2D2B               	goto	u2430
  3124     0D2A                     u2431:
  3125     0D2A  2D15               	goto	l17
  3126     0D2B                     u2430:
  3127     0D2B                     l18:
  3128                           
  3129                           ;rfid.c: 26:     PORTCbits.RC0 = 1;
  3130     0D2B  1407               	bsf	7,0	;volatile
  3131     0D2C                     l19:
  3132     0D2C  0008               	return
  3133     0D2D                     __end_of_RFID_Write:
  3134                           
  3135                           	psect	text15
  3136     0C83                     __ptext15:	
  3137 ;; *************** function _RFID_Read *****************
  3138 ;; Defined at:
  3139 ;;		line 30 in file "rfid.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  addr            1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  addr            1    3[COMMON] unsigned char 
  3144 ;;  i               1    7[COMMON] unsigned char 
  3145 ;;  i               1    6[COMMON] unsigned char 
  3146 ;;  data            1    5[COMMON] unsigned char 
  3147 ;;  address         1    4[COMMON] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      unsigned char 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3157 ;;      Params:         0       0       0       0       0
  3158 ;;      Locals:         5       0       0       0       0
  3159 ;;      Temps:          1       0       0       0       0
  3160 ;;      Totals:         6       0       0       0       0
  3161 ;;Total ram usage:        6 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_RFID_Init
  3168 ;;		_RFID_ToCard
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172     0C83                     _RFID_Read:	
  3173                           ;psect for function _RFID_Read
  3174                           
  3175                           
  3176                           ;incstack = 0
  3177                           ; Regs used in _RFID_Read: [wreg+status,2+status,0]
  3178                           ;RFID_Read@addr stored from wreg
  3179     0C83  00F3               	movwf	RFID_Read@addr
  3180     0C84                     l2257:
  3181                           
  3182                           ;rfid.c: 31:     uint8_t data = 0;
  3183     0C84  01F5               	clrf	RFID_Read@data
  3184     0C85                     l2259:
  3185                           
  3186                           ;rfid.c: 32:     PORTCbits.RC0 = 0;
  3187     0C85  1283               	bcf	3,5	;RP0=0, select bank0
  3188     0C86  1303               	bcf	3,6	;RP1=0, select bank0
  3189     0C87  1007               	bcf	7,0	;volatile
  3190     0C88                     l2261:
  3191                           
  3192                           ;rfid.c: 35:     uint8_t address = ((addr << 1) & 0x7E) | 0x80;
  3193     0C88  0873               	movf	RFID_Read@addr,w
  3194     0C89  00F2               	movwf	??_RFID_Read
  3195     0C8A  0772               	addwf	??_RFID_Read,w
  3196     0C8B  397E               	andlw	126
  3197     0C8C  3880               	iorlw	128
  3198     0C8D  00F4               	movwf	RFID_Read@address
  3199     0C8E                     l2263:
  3200                           
  3201                           ;rfid.c: 36:     for(uint8_t i = 0; i < 8; i++) {
  3202     0C8E  01F6               	clrf	RFID_Read@i
  3203     0C8F                     l22:
  3204                           
  3205                           ;rfid.c: 37:         PORTCbits.RC3 = 0;
  3206     0C8F  1187               	bcf	7,3	;volatile
  3207                           
  3208                           ;rfid.c: 38:         PORTCbits.RC5 = (address & 0x80) ? 1 : 0;
  3209     0C90  1BF4               	btfsc	RFID_Read@address,7
  3210     0C91  2C93               	goto	u2441
  3211     0C92  2C97               	goto	u2440
  3212     0C93                     u2441:
  3213     0C93  1283               	bcf	3,5	;RP0=0, select bank0
  3214     0C94  1303               	bcf	3,6	;RP1=0, select bank0
  3215     0C95  1687               	bsf	7,5	;volatile
  3216     0C96  2C9A               	goto	u2454
  3217     0C97                     u2440:
  3218     0C97  1283               	bcf	3,5	;RP0=0, select bank0
  3219     0C98  1303               	bcf	3,6	;RP1=0, select bank0
  3220     0C99  1287               	bcf	7,5	;volatile
  3221     0C9A                     u2454:
  3222     0C9A                     l2269:
  3223                           
  3224                           ;rfid.c: 39:         address <<= 1;
  3225     0C9A  1003               	clrc
  3226     0C9B  0DF4               	rlf	RFID_Read@address,f
  3227     0C9C                     l2271:
  3228                           
  3229                           ;rfid.c: 40:         PORTCbits.RC3 = 1;
  3230     0C9C  1587               	bsf	7,3	;volatile
  3231     0C9D                     l2273:
  3232                           
  3233                           ;rfid.c: 41:     }
  3234     0C9D  3001               	movlw	1
  3235     0C9E  07F6               	addwf	RFID_Read@i,f
  3236     0C9F                     l2275:
  3237     0C9F  3008               	movlw	8
  3238     0CA0  0276               	subwf	RFID_Read@i,w
  3239     0CA1  1C03               	skipc
  3240     0CA2  2CA4               	goto	u2461
  3241     0CA3  2CA5               	goto	u2460
  3242     0CA4                     u2461:
  3243     0CA4  2C8F               	goto	l22
  3244     0CA5                     u2460:
  3245     0CA5                     l2277:
  3246                           
  3247                           ;rfid.c: 44:     for(uint8_t i = 0; i < 8; i++) {
  3248     0CA5  01F7               	clrf	RFID_Read@i_140
  3249     0CA6                     l24:
  3250                           
  3251                           ;rfid.c: 45:         PORTCbits.RC3 = 0;
  3252     0CA6  1187               	bcf	7,3	;volatile
  3253                           
  3254                           ;rfid.c: 46:         PORTCbits.RC3 = 1;
  3255     0CA7  1587               	bsf	7,3	;volatile
  3256     0CA8                     l2283:
  3257                           
  3258                           ;rfid.c: 47:         data <<= 1;
  3259     0CA8  1003               	clrc
  3260     0CA9  0DF5               	rlf	RFID_Read@data,f
  3261     0CAA                     l2285:
  3262                           
  3263                           ;rfid.c: 48:         if(PORTCbits.RC4) data |= 1;
  3264     0CAA  1E07               	btfss	7,4	;volatile
  3265     0CAB  2CAD               	goto	u2471
  3266     0CAC  2CAE               	goto	u2470
  3267     0CAD                     u2471:
  3268     0CAD  2CAF               	goto	l2289
  3269     0CAE                     u2470:
  3270     0CAE                     l2287:
  3271     0CAE  1475               	bsf	RFID_Read@data,0
  3272     0CAF                     l2289:
  3273                           
  3274                           ;rfid.c: 49:     }
  3275     0CAF  3001               	movlw	1
  3276     0CB0  07F7               	addwf	RFID_Read@i_140,f
  3277     0CB1                     l2291:
  3278     0CB1  3008               	movlw	8
  3279     0CB2  0277               	subwf	RFID_Read@i_140,w
  3280     0CB3  1C03               	skipc
  3281     0CB4  2CB6               	goto	u2481
  3282     0CB5  2CB7               	goto	u2480
  3283     0CB6                     u2481:
  3284     0CB6  2CA6               	goto	l24
  3285     0CB7                     u2480:
  3286     0CB7                     l25:
  3287                           
  3288                           ;rfid.c: 51:     PORTCbits.RC0 = 1;
  3289     0CB7  1407               	bsf	7,0	;volatile
  3290     0CB8                     l2293:
  3291                           
  3292                           ;rfid.c: 52:     return data;
  3293     0CB8  0875               	movf	RFID_Read@data,w
  3294     0CB9                     l27:
  3295     0CB9  0008               	return
  3296     0CBA                     __end_of_RFID_Read:
  3297                           
  3298                           	psect	text16
  3299     0B53                     __ptext16:	
  3300 ;; *************** function _Interrupts_Init *****************
  3301 ;; Defined at:
  3302 ;;		line 34 in file "main.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		None
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330     0B53                     _Interrupts_Init:	
  3331                           ;psect for function _Interrupts_Init
  3332                           
  3333     0B53                     l2501:	
  3334                           ;incstack = 0
  3335                           ; Regs used in _Interrupts_Init: []
  3336                           
  3337                           
  3338                           ;main.c: 35:     TMR1H = 0xE7;
  3339     0B53  178B               	bsf	11,7	;volatile
  3340                           
  3341                           ;main.c: 36:     TMR1L = 0x96;
  3342     0B54  170B               	bsf	11,6	;volatile
  3343                           
  3344                           ;main.c: 37: 
  3345     0B55  1683               	bsf	3,5	;RP0=1, select bank1
  3346     0B56  1303               	bcf	3,6	;RP1=0, select bank1
  3347     0B57  140C               	bsf	12,0	;volatile
  3348                           
  3349                           ;main.c: 38:     T1CONbits.TMR1ON = 1;
  3350     0B58  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0B59  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0B5A  100C               	bcf	12,0	;volatile
  3353     0B5B                     l162:
  3354     0B5B  0008               	return
  3355     0B5C                     __end_of_Interrupts_Init:
  3356                           
  3357                           	psect	text17
  3358     0E41                     __ptext17:	
  3359 ;; *************** function _ESP32_UART_Update *****************
  3360 ;; Defined at:
  3361 ;;		line 35 in file "esp32_uart.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  s4              1   18[BANK1 ] unsigned char 
  3366 ;;  s3              1   17[BANK1 ] unsigned char 
  3367 ;;  s2              1   16[BANK1 ] unsigned char 
  3368 ;;  s1              1   15[BANK1 ] unsigned char 
  3369 ;;  c               1   14[BANK1 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       0       5       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       0       5       0       0
  3383 ;;Total ram usage:        5 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 7
  3386 ;; This function calls:
  3387 ;;		_UART_DataReady
  3388 ;;		_UART_Read
  3389 ;;		_sscanf
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395     0E41                     _ESP32_UART_Update:	
  3396                           ;psect for function _ESP32_UART_Update
  3397                           
  3398     0E41                     l2913:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _ESP32_UART_Update: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  3401                           
  3402                           
  3403                           ;esp32_uart.c: 36:     if (UART_DataReady()) {
  3404     0E41  120A  158A  232F  120A  158A  	fcall	_UART_DataReady
  3405     0E46  3A00               	xorlw	0
  3406     0E47  1903               	skipnz
  3407     0E48  2E4A               	goto	u3361
  3408     0E49  2E4B               	goto	u3360
  3409     0E4A                     u3361:
  3410     0E4A  2EB4               	goto	l246
  3411     0E4B                     u3360:
  3412     0E4B                     l2915:
  3413                           
  3414                           ;esp32_uart.c: 37:         char c = UART_Read();
  3415     0E4B  120A  158A  2343  120A  158A  	fcall	_UART_Read
  3416     0E50  1683               	bsf	3,5	;RP0=1, select bank1
  3417     0E51  1303               	bcf	3,6	;RP1=0, select bank1
  3418     0E52  00D7               	movwf	ESP32_UART_Update@c^(0+128)
  3419     0E53                     l2917:
  3420                           
  3421                           ;esp32_uart.c: 39:         if (c == '\n') {
  3422     0E53  300A               	movlw	10
  3423     0E54  0657               	xorwf	ESP32_UART_Update@c^(0+128),w
  3424     0E55  1D03               	btfss	3,2
  3425     0E56  2E58               	goto	u3371
  3426     0E57  2E59               	goto	u3370
  3427     0E58                     u3371:
  3428     0E58  2EA6               	goto	l2941
  3429     0E59                     u3370:
  3430     0E59                     l2919:
  3431                           
  3432                           ;esp32_uart.c: 40:             buffer[idx] = '\0';
  3433     0E59  082F               	movf	_idx^(0+128),w
  3434     0E5A  3EB5               	addlw	(low (_buffer| 0))& (0+255)
  3435     0E5B  0084               	movwf	4
  3436     0E5C  1383               	bcf	3,7	;select IRP bank1
  3437     0E5D  0180               	clrf	0
  3438     0E5E                     l2921:
  3439                           
  3440                           ;esp32_uart.c: 41:             idx = 0;
  3441     0E5E  01AF               	clrf	_idx^(0+128)
  3442     0E5F                     l2923:
  3443                           
  3444                           ;esp32_uart.c: 43:             uint8_t s1, s2, s3, s4;;esp32_uart.c: 44:             if 
      +                          (sscanf(buffer, "%hhu,%hhu,%hhu,%hhu", &s1, &s2, &s3, &s4) == 4) {
  3445     0E5F  30B5               	movlw	(low (_buffer| 0))& (0+255)
  3446     0E60  1283               	bcf	3,5	;RP0=0, select bank0
  3447     0E61  1303               	bcf	3,6	;RP1=0, select bank0
  3448     0E62  00E5               	movwf	sscanf@s
  3449     0E63  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3450     0E64  00E6               	movwf	sscanf@fmt
  3451     0E65  30D8               	movlw	(low (ESP32_UART_Update@s1| 0))& (0+255)
  3452     0E66  00E7               	movwf	low ((?_sscanf| 0+2))
  3453     0E67  3000               	movlw	0
  3454     0E68  00E8               	movwf	(low ((?_sscanf| 0+2))+1)
  3455     0E69  30D9               	movlw	(low (ESP32_UART_Update@s2| 0))& (0+255)
  3456     0E6A  00E9               	movwf	low ((?_sscanf| 0+4))
  3457     0E6B  3000               	movlw	0
  3458     0E6C  00EA               	movwf	(low ((?_sscanf| 0+4))+1)
  3459     0E6D  30DA               	movlw	(low (ESP32_UART_Update@s3| 0))& (0+255)
  3460     0E6E  00EB               	movwf	low ((?_sscanf| 0+6))
  3461     0E6F  3000               	movlw	0
  3462     0E70  00EC               	movwf	(low ((?_sscanf| 0+6))+1)
  3463     0E71  30DB               	movlw	(low (ESP32_UART_Update@s4| 0))& (0+255)
  3464     0E72  00ED               	movwf	low ((?_sscanf| 0+8))
  3465     0E73  3000               	movlw	0
  3466     0E74  00EE               	movwf	(low ((?_sscanf| 0+8))+1)
  3467     0E75  120A  158A  244D  120A  158A  	fcall	_sscanf
  3468     0E7A  3004               	movlw	4
  3469     0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  3470     0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  3471     0E7D  0665               	xorwf	?_sscanf,w
  3472     0E7E  0466               	iorwf	?_sscanf+1,w
  3473     0E7F  1D03               	btfss	3,2
  3474     0E80  2E82               	goto	u3381
  3475     0E81  2E83               	goto	u3380
  3476     0E82                     u3381:
  3477     0E82  2EB4               	goto	l246
  3478     0E83                     u3380:
  3479     0E83                     l2925:
  3480                           
  3481                           ;esp32_uart.c: 45:                 if (s1 == 1 && s2 == 1 && s3 == 1 && s4 == 1){
  3482     0E83  1683               	bsf	3,5	;RP0=1, select bank1
  3483     0E84  1303               	bcf	3,6	;RP1=0, select bank1
  3484     0E85  0358               	decf	ESP32_UART_Update@s1^(0+128),w
  3485     0E86  1D03               	btfss	3,2
  3486     0E87  2E89               	goto	u3391
  3487     0E88  2E8A               	goto	u3390
  3488     0E89                     u3391:
  3489     0E89  2EA0               	goto	l2935
  3490     0E8A                     u3390:
  3491     0E8A                     l2927:
  3492     0E8A  0359               	decf	ESP32_UART_Update@s2^(0+128),w
  3493     0E8B  1D03               	btfss	3,2
  3494     0E8C  2E8E               	goto	u3401
  3495     0E8D  2E8F               	goto	u3400
  3496     0E8E                     u3401:
  3497     0E8E  2EA0               	goto	l2935
  3498     0E8F                     u3400:
  3499     0E8F                     l2929:
  3500     0E8F  035A               	decf	ESP32_UART_Update@s3^(0+128),w
  3501     0E90  1D03               	btfss	3,2
  3502     0E91  2E93               	goto	u3411
  3503     0E92  2E94               	goto	u3410
  3504     0E93                     u3411:
  3505     0E93  2EA0               	goto	l2935
  3506     0E94                     u3410:
  3507     0E94                     l2931:
  3508     0E94  035B               	decf	ESP32_UART_Update@s4^(0+128),w
  3509     0E95  1D03               	btfss	3,2
  3510     0E96  2E98               	goto	u3421
  3511     0E97  2E99               	goto	u3420
  3512     0E98                     u3421:
  3513     0E98  2EA0               	goto	l2935
  3514     0E99                     u3420:
  3515     0E99                     l2933:
  3516                           
  3517                           ;esp32_uart.c: 46:                     all_full = 1;
  3518     0E99  3001               	movlw	1
  3519     0E9A  00B0               	movwf	_all_full^(0+128)
  3520                           
  3521                           ;esp32_uart.c: 47:                     PORTBbits.RB4 = 1;
  3522     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3523     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  3524     0E9D  1606               	bsf	6,4	;volatile
  3525                           
  3526                           ;esp32_uart.c: 48:                     PORTBbits.RB5 = 0;
  3527     0E9E  1286               	bcf	6,5	;volatile
  3528                           
  3529                           ;esp32_uart.c: 49:                 }
  3530     0E9F  2EB4               	goto	l246
  3531     0EA0                     l2935:
  3532                           
  3533                           ;esp32_uart.c: 52:                     all_full = 0;
  3534     0EA0  01B0               	clrf	_all_full^(0+128)
  3535     0EA1                     l2937:
  3536                           
  3537                           ;esp32_uart.c: 53:                     PORTBbits.RB4 = 0;
  3538     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  3539     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  3540     0EA3  1206               	bcf	6,4	;volatile
  3541     0EA4                     l2939:
  3542                           
  3543                           ;esp32_uart.c: 54:                     PORTBbits.RB5 = 1;
  3544     0EA4  1686               	bsf	6,5	;volatile
  3545     0EA5  2EB4               	goto	l246
  3546     0EA6                     l2941:
  3547     0EA6  3013               	movlw	19
  3548     0EA7  022F               	subwf	_idx^(0+128),w
  3549     0EA8  1803               	skipnc
  3550     0EA9  2EAB               	goto	u3431
  3551     0EAA  2EAC               	goto	u3430
  3552     0EAB                     u3431:
  3553     0EAB  2EB4               	goto	l246
  3554     0EAC                     u3430:
  3555     0EAC                     l2943:
  3556                           
  3557                           ;esp32_uart.c: 60:             buffer[idx++] = c;
  3558     0EAC  082F               	movf	_idx^(0+128),w
  3559     0EAD  3EB5               	addlw	(low (_buffer| 0))& (0+255)
  3560     0EAE  0084               	movwf	4
  3561     0EAF  0857               	movf	ESP32_UART_Update@c^(0+128),w
  3562     0EB0  1383               	bcf	3,7	;select IRP bank1
  3563     0EB1  0080               	movwf	0
  3564     0EB2                     l2945:
  3565     0EB2  3001               	movlw	1
  3566     0EB3  07AF               	addwf	_idx^(0+128),f
  3567     0EB4                     l246:
  3568     0EB4  0008               	return
  3569     0EB5                     __end_of_ESP32_UART_Update:
  3570                           
  3571                           	psect	text18
  3572     0C4D                     __ptext18:	
  3573 ;; *************** function _sscanf *****************
  3574 ;; Defined at:
  3575 ;;		line 9 in file "D:\App\mplab\pic\sources\c99\common\nf_sscanf.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  s               1   69[BANK0 ] PTR const unsigned char 
  3578 ;;		 -> buffer(20), 
  3579 ;;  fmt             1   70[BANK0 ] PTR const unsigned char 
  3580 ;;		 -> STR_1(20), 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  f              11    3[BANK1 ] struct _IO_FILE
  3583 ;;  ret             2    0[BANK1 ] int 
  3584 ;;  ap              1    2[BANK1 ] PTR void [1]
  3585 ;;		 -> ?_sscanf(2), 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2   69[BANK0 ] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0      10       0       0       0
  3596 ;;      Locals:         0       0      14       0       0
  3597 ;;      Temps:          0       0       0       0       0
  3598 ;;      Totals:         0      10      14       0       0
  3599 ;;Total ram usage:       24 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 6
  3602 ;; This function calls:
  3603 ;;		_vfscanf
  3604 ;; This function is called by:
  3605 ;;		_ESP32_UART_Update
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609     0C4D                     _sscanf:	
  3610                           ;psect for function _sscanf
  3611                           
  3612     0C4D                     l2881:	
  3613                           ;incstack = 0
  3614                           ; Regs used in _sscanf: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  3615                           
  3616     0C4D  3067               	movlw	(low ((?_sscanf| 0+2)))& (0+255)
  3617     0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  3618     0C4F  1303               	bcf	3,6	;RP1=0, select bank1
  3619     0C50  00CB               	movwf	sscanf@ap^(0+128)
  3620     0C51                     l2883:
  3621     0C51  1283               	bcf	3,5	;RP0=0, select bank0
  3622     0C52  1303               	bcf	3,6	;RP1=0, select bank0
  3623     0C53  0865               	movf	sscanf@s,w
  3624     0C54  1683               	bsf	3,5	;RP0=1, select bank1
  3625     0C55  1303               	bcf	3,6	;RP1=0, select bank1
  3626     0C56  00CC               	movwf	sscanf@f^(0+128)
  3627     0C57  3000               	movlw	0
  3628     0C58  00CD               	movwf	(sscanf@f+1)^(0+128)
  3629     0C59                     l2885:
  3630     0C59  01CE               	clrf	(sscanf@f^(0+128)+2)
  3631     0C5A  01CF               	clrf	((sscanf@f+1)^(0+128)+2)
  3632     0C5B                     l2887:
  3633     0C5B  01D3               	clrf	(sscanf@f^(0+128)+7)
  3634     0C5C  01D4               	clrf	((sscanf@f+1)^(0+128)+7)
  3635     0C5D                     l2889:
  3636     0C5D  30CC               	movlw	low sscanf@f
  3637     0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  3638     0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  3639     0C60  00DC               	movwf	vfscanf@fp
  3640     0C61  3000               	movlw	high sscanf@f
  3641     0C62  00DD               	movwf	vfscanf@fp+1
  3642     0C63  0866               	movf	sscanf@fmt,w
  3643     0C64  00DE               	movwf	vfscanf@fmt
  3644     0C65  30CB               	movlw	(low (sscanf@ap| 0))& (0+255)
  3645     0C66  00DF               	movwf	vfscanf@ap
  3646     0C67  120A  158A  26B5  120A  158A  	fcall	_vfscanf
  3647     0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  3648     0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  3649     0C6E  085D               	movf	?_vfscanf+1,w
  3650     0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  3651     0C70  1303               	bcf	3,6	;RP1=0, select bank1
  3652     0C71  00CA               	movwf	(sscanf@ret+1)^(0+128)
  3653     0C72  1283               	bcf	3,5	;RP0=0, select bank0
  3654     0C73  1303               	bcf	3,6	;RP1=0, select bank0
  3655     0C74  085C               	movf	?_vfscanf,w
  3656     0C75  1683               	bsf	3,5	;RP0=1, select bank1
  3657     0C76  1303               	bcf	3,6	;RP1=0, select bank1
  3658     0C77  00C9               	movwf	sscanf@ret^(0+128)
  3659     0C78                     l2891:
  3660     0C78  084A               	movf	(sscanf@ret+1)^(0+128),w
  3661     0C79  1283               	bcf	3,5	;RP0=0, select bank0
  3662     0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  3663     0C7B  00E6               	movwf	?_sscanf+1
  3664     0C7C  1683               	bsf	3,5	;RP0=1, select bank1
  3665     0C7D  1303               	bcf	3,6	;RP1=0, select bank1
  3666     0C7E  0849               	movf	sscanf@ret^(0+128),w
  3667     0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  3668     0C80  1303               	bcf	3,6	;RP1=0, select bank0
  3669     0C81  00E5               	movwf	?_sscanf
  3670     0C82                     l798:
  3671     0C82  0008               	return
  3672     0C83                     __end_of_sscanf:
  3673                           
  3674                           	psect	text19
  3675     0EB5                     __ptext19:	
  3676 ;; *************** function _vfscanf *****************
  3677 ;; Defined at:
  3678 ;;		line 1497 in file "D:\App\mplab\pic\sources\c99\common\doscan.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  3681 ;;		 -> sscanf@f(11), 
  3682 ;;  fmt             1   62[BANK0 ] PTR const unsigned char 
  3683 ;;		 -> STR_1(20), 
  3684 ;;  ap              1   63[BANK0 ] PTR PTR void 
  3685 ;;		 -> sscanf@ap(1), 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  n               2   66[BANK0 ] int 
  3688 ;;  saved_errno     2   64[BANK0 ] int 
  3689 ;;  cfmt            1   68[BANK0 ] PTR unsigned char 
  3690 ;;		 -> STR_1(20), 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  2   60[BANK0 ] int 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       4       0       0       0
  3701 ;;      Locals:         0       5       0       0       0
  3702 ;;      Temps:          0       0       0       0       0
  3703 ;;      Totals:         0       9       0       0       0
  3704 ;;Total ram usage:        9 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; Hardware stack levels required when called: 5
  3707 ;; This function calls:
  3708 ;;		_vfsfcnvrt
  3709 ;; This function is called by:
  3710 ;;		_sscanf
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714     0EB5                     _vfscanf:	
  3715                           ;psect for function _vfscanf
  3716                           
  3717     0EB5                     l2849:	
  3718                           ;incstack = 0
  3719 ;; using string table level
  3720                           ; Regs used in _vfscanf: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  3721                           
  3722                           
  3723                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1497: int vfscanf(FILE *fp, const char *f
      +                          mt, va_list ap);D:\App\mplab\pic\sources\c99\common\doscan.c: 1498: {;D:\App\mplab\pic\s
      +                          ources\c99\common\doscan.c: 1499:     char *cfmt;;D:\App\mplab\pic\sources\c99\common\do
      +                          scan.c: 1500:     int n, saved_errno;;D:\App\mplab\pic\sources\c99\common\doscan.c: 1502
      +                          :     cfmt = (char *)fmt;
  3724     0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3725     0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  3726     0EB7  085E               	movf	vfscanf@fmt,w
  3727     0EB8  00E4               	movwf	vfscanf@cfmt
  3728     0EB9                     l2851:
  3729                           
  3730                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1503:     ncnv = nmatch = 0;
  3731     0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  3732     0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  3733     0EBB  01A3               	clrf	_nmatch^(0+128)
  3734     0EBC  01A4               	clrf	(_nmatch+1)^(0+128)
  3735     0EBD  01A5               	clrf	_ncnv^(0+128)
  3736     0EBE  01A6               	clrf	(_ncnv+1)^(0+128)
  3737     0EBF                     l2853:
  3738                           
  3739                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1504:  saved_errno = errno;
  3740     0EBF  082A               	movf	(_errno+1)^(0+128),w
  3741     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  3742     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  3743     0EC2  00E1               	movwf	vfscanf@saved_errno+1
  3744     0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  3745     0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  3746     0EC5  0829               	movf	_errno^(0+128),w
  3747     0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3748     0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3749     0EC8  00E0               	movwf	vfscanf@saved_errno
  3750                           
  3751                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1505:     while (*cfmt) {
  3752     0EC9  2EF6               	goto	l2865
  3753     0ECA                     l2855:
  3754                           
  3755                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1506:   errno = 0;
  3756     0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  3757     0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  3758     0ECC  01A9               	clrf	_errno^(0+128)
  3759     0ECD  01AA               	clrf	(_errno+1)^(0+128)
  3760     0ECE                     l2857:
  3761                           
  3762                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1507:         n = vfsfcnvrt(fp, &cfmt, ap
      +                          );
  3763     0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3764     0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3765     0ED0  085C               	movf	vfscanf@fp,w
  3766     0ED1  00CC               	movwf	vfsfcnvrt@fp
  3767     0ED2  085D               	movf	vfscanf@fp+1,w
  3768     0ED3  00CD               	movwf	vfsfcnvrt@fp+1
  3769     0ED4  3064               	movlw	(low (vfscanf@cfmt| 0))& (0+255)
  3770     0ED5  00CE               	movwf	vfsfcnvrt@fmt
  3771     0ED6  085F               	movf	vfscanf@ap,w
  3772     0ED7  00CF               	movwf	vfsfcnvrt@ap
  3773     0ED8  3000               	movlw	0
  3774     0ED9  00D0               	movwf	vfsfcnvrt@ap+1
  3775     0EDA  120A  118A  2235  120A  158A  	fcall	_vfsfcnvrt
  3776     0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  3777     0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  3778     0EE1  084D               	movf	?_vfsfcnvrt+1,w
  3779     0EE2  00E3               	movwf	vfscanf@n+1
  3780     0EE3  084C               	movf	?_vfsfcnvrt,w
  3781     0EE4  00E2               	movwf	vfscanf@n
  3782     0EE5                     l2859:
  3783                           
  3784                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1508:         if (n < 0) {
  3785     0EE5  1FE3               	btfss	vfscanf@n+1,7
  3786     0EE6  2EE8               	goto	u3311
  3787     0EE7  2EE9               	goto	u3310
  3788     0EE8                     u3311:
  3789     0EE8  2EEA               	goto	l2863
  3790     0EE9                     u3310:
  3791     0EE9  2F03               	goto	l2867
  3792     0EEA                     l2863:
  3793                           
  3794                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1511:         ncnv += n;
  3795     0EEA  0862               	movf	vfscanf@n,w
  3796     0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  3797     0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  3798     0EED  07A5               	addwf	_ncnv^(0+128),f
  3799     0EEE  1803               	skipnc
  3800     0EEF  0AA6               	incf	(_ncnv+1)^(0+128),f
  3801     0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3802     0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  3803     0EF2  0863               	movf	vfscanf@n+1,w
  3804     0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  3805     0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  3806     0EF5  07A6               	addwf	(_ncnv+1)^(0+128),f
  3807     0EF6                     l2865:
  3808                           
  3809                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1505:     while (*cfmt) {
  3810     0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  3811     0EF7  0864               	movf	vfscanf@cfmt,w
  3812     0EF8  0084               	movwf	4
  3813     0EF9  120A  158A  2000  120A  158A  	fcall	stringdir
  3814     0EFE  3A00               	xorlw	0
  3815     0EFF  1D03               	skipz
  3816     0F00  2F02               	goto	u3321
  3817     0F01  2F03               	goto	u3320
  3818     0F02                     u3321:
  3819     0F02  2ECA               	goto	l2855
  3820     0F03                     u3320:
  3821     0F03                     l2867:
  3822                           
  3823                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1513:  errno = saved_errno;
  3824     0F03  0861               	movf	vfscanf@saved_errno+1,w
  3825     0F04  1683               	bsf	3,5	;RP0=1, select bank1
  3826     0F05  1303               	bcf	3,6	;RP1=0, select bank1
  3827     0F06  00AA               	movwf	(_errno+1)^(0+128)
  3828     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3829     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3830     0F09  0860               	movf	vfscanf@saved_errno,w
  3831     0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  3832     0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  3833     0F0C  00A9               	movwf	_errno^(0+128)
  3834     0F0D                     l2869:
  3835                           
  3836                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1514:     if (n == (-1) && ncnv == 0) {
  3837     0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  3838     0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  3839     0F0F  0A62               	incf	vfscanf@n,w
  3840     0F10  1D03               	skipz
  3841     0F11  2F16               	goto	u3331
  3842     0F12  0A63               	incf	vfscanf@n+1,w
  3843     0F13  1D03               	btfss	3,2
  3844     0F14  2F16               	goto	u3331
  3845     0F15  2F17               	goto	u3330
  3846     0F16                     u3331:
  3847     0F16  2F26               	goto	l2877
  3848     0F17                     u3330:
  3849     0F17                     l2871:
  3850     0F17  1683               	bsf	3,5	;RP0=1, select bank1
  3851     0F18  1303               	bcf	3,6	;RP1=0, select bank1
  3852     0F19  0825               	movf	_ncnv^(0+128),w
  3853     0F1A  0426               	iorwf	(_ncnv+1)^(0+128),w
  3854     0F1B  1D03               	btfss	3,2
  3855     0F1C  2F1E               	goto	u3341
  3856     0F1D  2F1F               	goto	u3340
  3857     0F1E                     u3341:
  3858     0F1E  2F26               	goto	l2877
  3859     0F1F                     u3340:
  3860     0F1F                     l2873:
  3861                           
  3862                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1515:         return n;
  3863     0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3864     0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3865     0F21  0863               	movf	vfscanf@n+1,w
  3866     0F22  00DD               	movwf	?_vfscanf+1
  3867     0F23  0862               	movf	vfscanf@n,w
  3868     0F24  00DC               	movwf	?_vfscanf
  3869     0F25  2F32               	goto	l884
  3870     0F26                     l2877:
  3871                           
  3872                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1518:     return ncnv;
  3873     0F26  1683               	bsf	3,5	;RP0=1, select bank1
  3874     0F27  1303               	bcf	3,6	;RP1=0, select bank1
  3875     0F28  0826               	movf	(_ncnv+1)^(0+128),w
  3876     0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0F2B  00DD               	movwf	?_vfscanf+1
  3879     0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  3880     0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  3881     0F2E  0825               	movf	_ncnv^(0+128),w
  3882     0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  3883     0F30  1303               	bcf	3,6	;RP1=0, select bank0
  3884     0F31  00DC               	movwf	?_vfscanf
  3885     0F32                     l884:
  3886     0F32  0008               	return
  3887     0F33                     __end_of_vfscanf:
  3888                           
  3889                           	psect	text20
  3890     0235                     __ptext20:	
  3891 ;; *************** function _vfsfcnvrt *****************
  3892 ;; Defined at:
  3893 ;;		line 672 in file "D:\App\mplab\pic\sources\c99\common\doscan.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  3896 ;;		 -> sscanf@f(11), 
  3897 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3898 ;;		 -> vfscanf@cfmt(1), 
  3899 ;;  ap              2   47[BANK0 ] PTR PTR void 
  3900 ;;		 -> sscanf@ap(1), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  llu             4   52[BANK0 ] unsigned long 
  3903 ;;  f               4    0        unsigned long 
  3904 ;;  ll              4    0        long 
  3905 ;;  ct              3    0        unsigned char [3]
  3906 ;;  c               2   58[BANK0 ] int 
  3907 ;;  i               2   56[BANK0 ] int 
  3908 ;;  cp              2    0        PTR unsigned char 
  3909 ;;  vp              1   51[BANK0 ] PTR void 
  3910 ;;		 -> ?_sscanf(2), ESP32_UART_Update@s4(1), ESP32_UART_Update@s3(1), ESP32_UART_Update@s2(1), 
  3911 ;;		 -> ESP32_UART_Update@s1(1), 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2   44[BANK0 ] int 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       5       0       0       0
  3922 ;;      Locals:         0       9       0       0       0
  3923 ;;      Temps:          0       2       0       0       0
  3924 ;;      Totals:         0      16       0       0       0
  3925 ;;Total ram usage:       16 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 4
  3928 ;; This function calls:
  3929 ;;		_atou
  3930 ;;		_fgetc
  3931 ;;		_skipws
  3932 ;;		_strncmp
  3933 ;;		_ungetc
  3934 ;; This function is called by:
  3935 ;;		_vfscanf
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939     0235                     _vfsfcnvrt:	
  3940                           ;psect for function _vfsfcnvrt
  3941                           
  3942     0235                     l2735:	
  3943                           ;incstack = 0
  3944 ;; using string table level
  3945                           ; Regs used in _vfsfcnvrt: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  3946                           
  3947                           
  3948                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 672: static int vfsfcnvrt(FILE *fp, char 
      +                          *fmt[], va_list ap);D:\App\mplab\pic\sources\c99\common\doscan.c: 673: {;D:\App\mplab\pi
      +                          c\sources\c99\common\doscan.c: 674:     char *cp, ct[3];;D:\App\mplab\pic\sources\c99\co
      +                          mmon\doscan.c: 675:     int c, i;;D:\App\mplab\pic\sources\c99\common\doscan.c: 676:    
      +                           long long ll;;D:\App\mplab\pic\sources\c99\common\doscan.c: 677:     unsigned long long
      +                           llu;;D:\App\mplab\pic\sources\c99\common\doscan.c: 678:     long double f;
  3949     0235  1283               	bcf	3,5	;RP0=0, select bank0
  3950     0236  1303               	bcf	3,6	;RP1=0, select bank0
  3951     0237  084E               	movf	vfsfcnvrt@fmt,w
  3952     0238  0084               	movwf	4
  3953     0239  1383               	bcf	3,7	;select IRP bank0
  3954     023A  0800               	movf	0,w
  3955     023B  0084               	movwf	4
  3956     023C  120A  158A  2000  120A  118A  	fcall	stringdir
  3957     0241  3A25               	xorlw	37
  3958     0242  1D03               	skipz
  3959     0243  2A45               	goto	u3121
  3960     0244  2A46               	goto	u3120
  3961     0245                     u3121:
  3962     0245  2B66               	goto	l2803
  3963     0246                     u3120:
  3964     0246                     l2737:
  3965                           
  3966                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 683:         ++*fmt;
  3967     0246  084E               	movf	vfsfcnvrt@fmt,w
  3968     0247  0084               	movwf	4
  3969     0248  3001               	movlw	1
  3970     0249  0780               	addwf	0,f
  3971     024A                     l2739:
  3972                           
  3973                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 685:         asup = width = 0;
  3974     024A  3000               	movlw	0
  3975     024B  1683               	bsf	3,5	;RP0=1, select bank1
  3976     024C  1303               	bcf	3,6	;RP1=0, select bank1
  3977     024D  00A7               	movwf	_width^(0+128)
  3978     024E  00A8               	movwf	(_width+1)^(0+128)
  3979     024F  0827               	movf	_width^(0+128),w
  3980     0250  0428               	iorwf	(_width+1)^(0+128),w
  3981     0251  1D03               	btfss	3,2
  3982     0252  2A54               	goto	u3131
  3983     0253  2A56               	goto	u3130
  3984     0254                     u3131:
  3985     0254  3001               	movlw	1
  3986     0255  2A57               	goto	u3140
  3987     0256                     u3130:
  3988     0256  3000               	movlw	0
  3989     0257                     u3140:
  3990     0257  1283               	bcf	3,5	;RP0=0, select bank0
  3991     0258  1303               	bcf	3,6	;RP1=0, select bank0
  3992     0259  00EF               	movwf	_asup
  3993     025A                     l2741:
  3994                           
  3995                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1212:         if (!strncmp(*fmt, "hhu", (
      +                          (sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3996     025A  084E               	movf	vfsfcnvrt@fmt,w
  3997     025B  0084               	movwf	4
  3998     025C  0800               	movf	0,w
  3999     025D  00F2               	movwf	strncmp@l
  4000     025E  3011               	movlw	(low (((STR_1+16)-__stringbase)| (0+32768)))& (0+255)
  4001     025F  00F3               	movwf	strncmp@r
  4002     0260  3003               	movlw	3
  4003     0261  00F4               	movwf	strncmp@n
  4004     0262  3000               	movlw	0
  4005     0263  00F5               	movwf	strncmp@n+1
  4006     0264  120A  158A  2579  120A  118A  	fcall	_strncmp
  4007     0269  0872               	movf	?_strncmp,w
  4008     026A  0473               	iorwf	?_strncmp+1,w
  4009     026B  1D03               	btfss	3,2
  4010     026C  2A6E               	goto	u3151
  4011     026D  2A6F               	goto	u3150
  4012     026E                     u3151:
  4013     026E  2AB4               	goto	l2757
  4014     026F                     u3150:
  4015     026F                     l2743:
  4016                           
  4017                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1214:             *fmt += ((sizeof("hhu")
      +                          /sizeof("hhu"[0]))-1);
  4018     026F  1283               	bcf	3,5	;RP0=0, select bank0
  4019     0270  1303               	bcf	3,6	;RP1=0, select bank0
  4020     0271  084E               	movf	vfsfcnvrt@fmt,w
  4021     0272  0084               	movwf	4
  4022     0273  3003               	movlw	3
  4023     0274  1383               	bcf	3,7	;select IRP bank0
  4024     0275  0780               	addwf	0,f
  4025     0276                     l2745:
  4026                           
  4027                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1215:             i = atou(fp, &llu);
  4028     0276  084C               	movf	vfsfcnvrt@fp,w
  4029     0277  00C0               	movwf	atou@fp
  4030     0278  084D               	movf	vfsfcnvrt@fp+1,w
  4031     0279  00C1               	movwf	atou@fp+1
  4032     027A  3054               	movlw	(low (vfsfcnvrt@llu| 0))& (0+255)
  4033     027B  00C2               	movwf	atou@pll
  4034     027C  120A  118A  2575  120A  118A  	fcall	_atou
  4035     0281  1283               	bcf	3,5	;RP0=0, select bank0
  4036     0282  1303               	bcf	3,6	;RP1=0, select bank0
  4037     0283  0841               	movf	?_atou+1,w
  4038     0284  00D9               	movwf	vfsfcnvrt@i+1
  4039     0285  0840               	movf	?_atou,w
  4040     0286  00D8               	movwf	vfsfcnvrt@i
  4041     0287                     l2747:
  4042                           
  4043                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1216:             if (!(i < 1)) {
  4044     0287  0859               	movf	vfsfcnvrt@i+1,w
  4045     0288  3A80               	xorlw	128
  4046     0289  00FF               	movwf	btemp1
  4047     028A  3080               	movlw	128
  4048     028B  027F               	subwf	btemp1,w
  4049     028C  1D03               	skipz
  4050     028D  2A90               	goto	u3165
  4051     028E  3001               	movlw	1
  4052     028F  0258               	subwf	vfsfcnvrt@i,w
  4053     0290                     u3165:
  4054     0290  1C03               	skipc
  4055     0291  2A93               	goto	u3161
  4056     0292  2A94               	goto	u3160
  4057     0293                     u3161:
  4058     0293  2AAD               	goto	l2753
  4059     0294                     u3160:
  4060     0294                     l2749:
  4061                           
  4062                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1217:                 vp = (void *)(*(uns
      +                          igned char * *)__va_arg(*(unsigned char * **)ap, (unsigned char *)0));
  4063     0294  1283               	bcf	3,5	;RP0=0, select bank0
  4064     0295  1303               	bcf	3,6	;RP1=0, select bank0
  4065     0296  084F               	movf	vfsfcnvrt@ap,w
  4066     0297  0084               	movwf	4
  4067     0298  1783               	bsf	3,7
  4068     0299  1C50               	btfss	vfsfcnvrt@ap+1,0
  4069     029A  1383               	bcf	3,7
  4070     029B  0800               	movf	0,w
  4071     029C  00FF               	movwf	btemp1
  4072     029D  3002               	movlw	2
  4073     029E  0780               	addwf	0,f
  4074     029F  087F               	movf	btemp1,w
  4075     02A0  0084               	movwf	4
  4076     02A1  1383               	bcf	3,7	;select IRP bank0
  4077     02A2  0800               	movf	0,w
  4078     02A3  00D1               	movwf	??_vfsfcnvrt
  4079     02A4  0A84               	incf	4,f
  4080     02A5  0800               	movf	0,w
  4081     02A6  00D2               	movwf	??_vfsfcnvrt+1
  4082     02A7  0851               	movf	??_vfsfcnvrt,w
  4083     02A8  00D3               	movwf	vfsfcnvrt@vp
  4084     02A9                     l2751:
  4085                           
  4086                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1218:                 *(unsigned char *)v
      +                          p = (unsigned char)llu;
  4087     02A9  0853               	movf	vfsfcnvrt@vp,w
  4088     02AA  0084               	movwf	4
  4089     02AB  0854               	movf	vfsfcnvrt@llu,w
  4090     02AC  0080               	movwf	0
  4091     02AD                     l2753:
  4092                           
  4093                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1220:             return i;
  4094     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  4095     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  4096     02AF  0859               	movf	vfsfcnvrt@i+1,w
  4097     02B0  00CD               	movwf	?_vfsfcnvrt+1
  4098     02B1  0858               	movf	vfsfcnvrt@i,w
  4099     02B2  00CC               	movwf	?_vfsfcnvrt
  4100     02B3  2C1A               	goto	l857
  4101     02B4                     l2757:
  4102                           
  4103                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1239:         if (*fmt[0] == 'u') {
  4104     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  4105     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  4106     02B6  084E               	movf	vfsfcnvrt@fmt,w
  4107     02B7  0084               	movwf	4
  4108     02B8  1383               	bcf	3,7	;select IRP bank0
  4109     02B9  0800               	movf	0,w
  4110     02BA  0084               	movwf	4
  4111     02BB  120A  158A  2000  120A  118A  	fcall	stringdir
  4112     02C0  3A75               	xorlw	117
  4113     02C1  1D03               	skipz
  4114     02C2  2AC4               	goto	u3171
  4115     02C3  2AC5               	goto	u3170
  4116     02C4                     u3171:
  4117     02C4  2B04               	goto	l2773
  4118     02C5                     u3170:
  4119     02C5                     l2759:
  4120                           
  4121                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1241:             ++*fmt;
  4122     02C5  084E               	movf	vfsfcnvrt@fmt,w
  4123     02C6  0084               	movwf	4
  4124     02C7  3001               	movlw	1
  4125     02C8  0780               	addwf	0,f
  4126     02C9                     l2761:
  4127                           
  4128                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1242:             i = atou(fp, &llu);
  4129     02C9  084C               	movf	vfsfcnvrt@fp,w
  4130     02CA  00C0               	movwf	atou@fp
  4131     02CB  084D               	movf	vfsfcnvrt@fp+1,w
  4132     02CC  00C1               	movwf	atou@fp+1
  4133     02CD  3054               	movlw	(low (vfsfcnvrt@llu| 0))& (0+255)
  4134     02CE  00C2               	movwf	atou@pll
  4135     02CF  120A  118A  2575  120A  118A  	fcall	_atou
  4136     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4137     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4138     02D6  0841               	movf	?_atou+1,w
  4139     02D7  00D9               	movwf	vfsfcnvrt@i+1
  4140     02D8  0840               	movf	?_atou,w
  4141     02D9  00D8               	movwf	vfsfcnvrt@i
  4142     02DA                     l2763:
  4143                           
  4144                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1243:             if (!(i < 1)) {
  4145     02DA  0859               	movf	vfsfcnvrt@i+1,w
  4146     02DB  3A80               	xorlw	128
  4147     02DC  00FF               	movwf	btemp1
  4148     02DD  3080               	movlw	128
  4149     02DE  027F               	subwf	btemp1,w
  4150     02DF  1D03               	skipz
  4151     02E0  2AE3               	goto	u3185
  4152     02E1  3001               	movlw	1
  4153     02E2  0258               	subwf	vfsfcnvrt@i,w
  4154     02E3                     u3185:
  4155     02E3  1C03               	skipc
  4156     02E4  2AE6               	goto	u3181
  4157     02E5  2AE7               	goto	u3180
  4158     02E6                     u3181:
  4159     02E6  2AAD               	goto	l2753
  4160     02E7                     u3180:
  4161     02E7                     l2765:
  4162                           
  4163                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1244:                 vp = (void *)(*(uns
      +                          igned int * *)__va_arg(*(unsigned int * **)ap, (unsigned int *)0));
  4164     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  4165     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  4166     02E9  084F               	movf	vfsfcnvrt@ap,w
  4167     02EA  0084               	movwf	4
  4168     02EB  1783               	bsf	3,7
  4169     02EC  1C50               	btfss	vfsfcnvrt@ap+1,0
  4170     02ED  1383               	bcf	3,7
  4171     02EE  0800               	movf	0,w
  4172     02EF  00FF               	movwf	btemp1
  4173     02F0  3002               	movlw	2
  4174     02F1  0780               	addwf	0,f
  4175     02F2  087F               	movf	btemp1,w
  4176     02F3  0084               	movwf	4
  4177     02F4  1383               	bcf	3,7	;select IRP bank0
  4178     02F5  0800               	movf	0,w
  4179     02F6  00D1               	movwf	??_vfsfcnvrt
  4180     02F7  0A84               	incf	4,f
  4181     02F8  0800               	movf	0,w
  4182     02F9  00D2               	movwf	??_vfsfcnvrt+1
  4183     02FA  0851               	movf	??_vfsfcnvrt,w
  4184     02FB  00D3               	movwf	vfsfcnvrt@vp
  4185     02FC                     l2767:
  4186                           
  4187                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1245:                 *(unsigned int *)vp
      +                           = (unsigned int)llu;
  4188     02FC  0853               	movf	vfsfcnvrt@vp,w
  4189     02FD  0084               	movwf	4
  4190     02FE  0854               	movf	vfsfcnvrt@llu,w
  4191     02FF  0080               	movwf	0
  4192     0300  0A84               	incf	4,f
  4193     0301  0855               	movf	vfsfcnvrt@llu+1,w
  4194     0302  0080               	movwf	0
  4195     0303  2AAD               	goto	l2753
  4196     0304                     l2773:
  4197                           
  4198                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1448:         if ((*fmt)[0] == '%') {
  4199     0304  084E               	movf	vfsfcnvrt@fmt,w
  4200     0305  0084               	movwf	4
  4201     0306  0800               	movf	0,w
  4202     0307  0084               	movwf	4
  4203     0308  120A  158A  2000  120A  118A  	fcall	stringdir
  4204     030D  3A25               	xorlw	37
  4205     030E  1D03               	skipz
  4206     030F  2B11               	goto	u3191
  4207     0310  2B12               	goto	u3190
  4208     0311                     u3191:
  4209     0311  2B61               	goto	l2797
  4210     0312                     u3190:
  4211     0312                     l2775:
  4212                           
  4213                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1449:    skipws(fp);
  4214     0312  084C               	movf	vfsfcnvrt@fp,w
  4215     0313  00AA               	movwf	skipws@fp
  4216     0314  084D               	movf	vfsfcnvrt@fp+1,w
  4217     0315  00AB               	movwf	skipws@fp+1
  4218     0316  120A  158A  24BA  120A  118A  	fcall	_skipws
  4219                           
  4220                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1450:    c = fgetc(fp);
  4221     031B  1283               	bcf	3,5	;RP0=0, select bank0
  4222     031C  1303               	bcf	3,6	;RP1=0, select bank0
  4223     031D  084C               	movf	vfsfcnvrt@fp,w
  4224     031E  00F4               	movwf	fgetc@fp
  4225     031F  084D               	movf	vfsfcnvrt@fp+1,w
  4226     0320  00F5               	movwf	fgetc@fp+1
  4227     0321  120A  158A  2733  120A  118A  	fcall	_fgetc
  4228     0326  0875               	movf	?_fgetc+1,w
  4229     0327  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0328  1303               	bcf	3,6	;RP1=0, select bank0
  4231     0329  00DB               	movwf	vfsfcnvrt@c+1
  4232     032A  0874               	movf	?_fgetc,w
  4233     032B  00DA               	movwf	vfsfcnvrt@c
  4234     032C                     l2777:
  4235                           
  4236                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1451:    if (c == '%') {
  4237     032C  3025               	movlw	37
  4238     032D  065A               	xorwf	vfsfcnvrt@c,w
  4239     032E  045B               	iorwf	vfsfcnvrt@c+1,w
  4240     032F  1D03               	btfss	3,2
  4241     0330  2B32               	goto	u3201
  4242     0331  2B33               	goto	u3200
  4243     0332                     u3201:
  4244     0332  2B45               	goto	l2789
  4245     0333                     u3200:
  4246     0333                     l2779:
  4247                           
  4248                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1452:     ++*fmt;
  4249     0333  084E               	movf	vfsfcnvrt@fmt,w
  4250     0334  0084               	movwf	4
  4251     0335  3001               	movlw	1
  4252     0336  1383               	bcf	3,7	;select IRP bank0
  4253     0337  0780               	addwf	0,f
  4254     0338                     l2781:
  4255                           
  4256                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1453:     ++nmatch;
  4257     0338  3001               	movlw	1
  4258     0339  1683               	bsf	3,5	;RP0=1, select bank1
  4259     033A  1303               	bcf	3,6	;RP1=0, select bank1
  4260     033B  07A3               	addwf	_nmatch^(0+128),f
  4261     033C  1803               	skipnc
  4262     033D  0AA4               	incf	(_nmatch+1)^(0+128),f
  4263     033E  3000               	movlw	0
  4264     033F  07A4               	addwf	(_nmatch+1)^(0+128),f
  4265     0340                     l2783:
  4266                           
  4267                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1454:     return 0;
  4268     0340  1283               	bcf	3,5	;RP0=0, select bank0
  4269     0341  1303               	bcf	3,6	;RP1=0, select bank0
  4270     0342  01CC               	clrf	?_vfsfcnvrt
  4271     0343  01CD               	clrf	?_vfsfcnvrt+1
  4272     0344  2C1A               	goto	l857
  4273     0345                     l2789:
  4274     0345  0A5A               	incf	vfsfcnvrt@c,w
  4275     0346  1D03               	skipz
  4276     0347  2B4D               	goto	u3210
  4277     0348  0A5B               	incf	vfsfcnvrt@c+1,w
  4278     0349  1903               	btfsc	3,2
  4279     034A  2B4C               	goto	u3211
  4280     034B  2B4D               	goto	u3210
  4281     034C                     u3211:
  4282     034C  2B5A               	goto	l2793
  4283     034D                     u3210:
  4284     034D                     l2791:
  4285                           
  4286                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1457:     ungetc(c, fp);
  4287     034D  085B               	movf	vfsfcnvrt@c+1,w
  4288     034E  00F3               	movwf	ungetc@c+1
  4289     034F  085A               	movf	vfsfcnvrt@c,w
  4290     0350  00F2               	movwf	ungetc@c
  4291     0351  084C               	movf	vfsfcnvrt@fp,w
  4292     0352  00F4               	movwf	ungetc@fp
  4293     0353  084D               	movf	vfsfcnvrt@fp+1,w
  4294     0354  00F5               	movwf	ungetc@fp+1
  4295     0355  120A  158A  25DB  120A  118A  	fcall	_ungetc
  4296     035A                     l2793:
  4297                           
  4298                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1459:    return (-1) - 1;
  4299     035A  30FE               	movlw	254
  4300     035B  1283               	bcf	3,5	;RP0=0, select bank0
  4301     035C  1303               	bcf	3,6	;RP1=0, select bank0
  4302     035D  00CC               	movwf	?_vfsfcnvrt
  4303     035E  30FF               	movlw	255
  4304     035F  00CD               	movwf	?_vfsfcnvrt+1
  4305     0360  2C1A               	goto	l857
  4306     0361                     l2797:
  4307                           
  4308                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1463:         ++*fmt;
  4309     0361  084E               	movf	vfsfcnvrt@fmt,w
  4310     0362  0084               	movwf	4
  4311     0363  3001               	movlw	1
  4312     0364  0780               	addwf	0,f
  4313     0365  2B40               	goto	l2783
  4314     0366                     l2803:
  4315                           
  4316                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1468:     c = fgetc(fp);
  4317     0366  084C               	movf	vfsfcnvrt@fp,w
  4318     0367  00F4               	movwf	fgetc@fp
  4319     0368  084D               	movf	vfsfcnvrt@fp+1,w
  4320     0369  00F5               	movwf	fgetc@fp+1
  4321     036A  120A  158A  2733  120A  118A  	fcall	_fgetc
  4322     036F  0875               	movf	?_fgetc+1,w
  4323     0370  1283               	bcf	3,5	;RP0=0, select bank0
  4324     0371  1303               	bcf	3,6	;RP1=0, select bank0
  4325     0372  00DB               	movwf	vfsfcnvrt@c+1
  4326     0373  0874               	movf	?_fgetc,w
  4327     0374  00DA               	movwf	vfsfcnvrt@c
  4328     0375                     l2805:
  4329                           
  4330                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1469:  if ((((*fmt[0] == ' ') || ((unsign
      +                          ed char)((*fmt[0])-'\t') < 5)))) {
  4331     0375  084E               	movf	vfsfcnvrt@fmt,w
  4332     0376  0084               	movwf	4
  4333     0377  1383               	bcf	3,7	;select IRP bank0
  4334     0378  0800               	movf	0,w
  4335     0379  0084               	movwf	4
  4336     037A  120A  158A  2000  120A  118A  	fcall	stringdir
  4337     037F  3A20               	xorlw	32
  4338     0380  1903               	skipnz
  4339     0381  2B83               	goto	u3221
  4340     0382  2B84               	goto	u3220
  4341     0383                     u3221:
  4342     0383  2B95               	goto	l2809
  4343     0384                     u3220:
  4344     0384                     l2807:
  4345     0384  084E               	movf	vfsfcnvrt@fmt,w
  4346     0385  0084               	movwf	4
  4347     0386  0800               	movf	0,w
  4348     0387  0084               	movwf	4
  4349     0388  120A  158A  2000  120A  118A  	fcall	stringdir
  4350     038D  3EF7               	addlw	247
  4351     038E  00D1               	movwf	??_vfsfcnvrt
  4352     038F  3005               	movlw	5
  4353     0390  0251               	subwf	??_vfsfcnvrt,w
  4354     0391  1803               	skipnc
  4355     0392  2B94               	goto	u3231
  4356     0393  2B95               	goto	u3230
  4357     0394                     u3231:
  4358     0394  2BF8               	goto	l2827
  4359     0395                     u3230:
  4360     0395                     l2809:
  4361                           
  4362                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1472:    ++*fmt;
  4363     0395  084E               	movf	vfsfcnvrt@fmt,w
  4364     0396  0084               	movwf	4
  4365     0397  3001               	movlw	1
  4366     0398  0780               	addwf	0,f
  4367     0399                     l2811:
  4368                           
  4369                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1473:   } while((((*fmt[0] == ' ') || ((u
      +                          nsigned char)((*fmt[0])-'\t') < 5))));
  4370     0399  084E               	movf	vfsfcnvrt@fmt,w
  4371     039A  0084               	movwf	4
  4372     039B  0800               	movf	0,w
  4373     039C  0084               	movwf	4
  4374     039D  120A  158A  2000  120A  118A  	fcall	stringdir
  4375     03A2  3A20               	xorlw	32
  4376     03A3  1903               	skipnz
  4377     03A4  2BA6               	goto	u3241
  4378     03A5  2BA7               	goto	u3240
  4379     03A6                     u3241:
  4380     03A6  2B95               	goto	l2809
  4381     03A7                     u3240:
  4382     03A7                     l2813:
  4383     03A7  084E               	movf	vfsfcnvrt@fmt,w
  4384     03A8  0084               	movwf	4
  4385     03A9  0800               	movf	0,w
  4386     03AA  0084               	movwf	4
  4387     03AB  120A  158A  2000  120A  118A  	fcall	stringdir
  4388     03B0  3EF7               	addlw	247
  4389     03B1  00D1               	movwf	??_vfsfcnvrt
  4390     03B2  3005               	movlw	5
  4391     03B3  0251               	subwf	??_vfsfcnvrt,w
  4392     03B4  1C03               	skipc
  4393     03B5  2BB7               	goto	u3251
  4394     03B6  2BB8               	goto	u3250
  4395     03B7                     u3251:
  4396     03B7  2B95               	goto	l2809
  4397     03B8                     u3250:
  4398     03B8  2BD2               	goto	l2819
  4399     03B9                     l2815:
  4400                           
  4401                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1476:    ++nmatch;
  4402     03B9  3001               	movlw	1
  4403     03BA  1683               	bsf	3,5	;RP0=1, select bank1
  4404     03BB  1303               	bcf	3,6	;RP1=0, select bank1
  4405     03BC  07A3               	addwf	_nmatch^(0+128),f
  4406     03BD  1803               	skipnc
  4407     03BE  0AA4               	incf	(_nmatch+1)^(0+128),f
  4408     03BF  3000               	movlw	0
  4409     03C0  07A4               	addwf	(_nmatch+1)^(0+128),f
  4410     03C1                     l2817:
  4411                           
  4412                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1477:    c = fgetc(fp);
  4413     03C1  1283               	bcf	3,5	;RP0=0, select bank0
  4414     03C2  1303               	bcf	3,6	;RP1=0, select bank0
  4415     03C3  084C               	movf	vfsfcnvrt@fp,w
  4416     03C4  00F4               	movwf	fgetc@fp
  4417     03C5  084D               	movf	vfsfcnvrt@fp+1,w
  4418     03C6  00F5               	movwf	fgetc@fp+1
  4419     03C7  120A  158A  2733  120A  118A  	fcall	_fgetc
  4420     03CC  0875               	movf	?_fgetc+1,w
  4421     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  4422     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  4423     03CF  00DB               	movwf	vfsfcnvrt@c+1
  4424     03D0  0874               	movf	?_fgetc,w
  4425     03D1  00DA               	movwf	vfsfcnvrt@c
  4426     03D2                     l2819:
  4427                           
  4428                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1475:   while ((((c == ' ') || ((unsigned
      +                           char)((c)-'\t') < 5)))) {
  4429     03D2  3020               	movlw	32
  4430     03D3  065A               	xorwf	vfsfcnvrt@c,w
  4431     03D4  045B               	iorwf	vfsfcnvrt@c+1,w
  4432     03D5  1903               	btfsc	3,2
  4433     03D6  2BD8               	goto	u3261
  4434     03D7  2BD9               	goto	u3260
  4435     03D8                     u3261:
  4436     03D8  2BB9               	goto	l2815
  4437     03D9                     u3260:
  4438     03D9                     l2821:
  4439     03D9  30F7               	movlw	247
  4440     03DA  075A               	addwf	vfsfcnvrt@c,w
  4441     03DB  00D1               	movwf	??_vfsfcnvrt
  4442     03DC  3005               	movlw	5
  4443     03DD  0251               	subwf	??_vfsfcnvrt,w
  4444     03DE  1C03               	skipc
  4445     03DF  2BE1               	goto	u3271
  4446     03E0  2BE2               	goto	u3270
  4447     03E1                     u3271:
  4448     03E1  2BB9               	goto	l2815
  4449     03E2                     u3270:
  4450     03E2                     l2823:
  4451                           
  4452                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1479:   if (c != (-1)) {
  4453     03E2  0A5A               	incf	vfsfcnvrt@c,w
  4454     03E3  1D03               	skipz
  4455     03E4  2BEA               	goto	u3280
  4456     03E5  0A5B               	incf	vfsfcnvrt@c+1,w
  4457     03E6  1903               	btfsc	3,2
  4458     03E7  2BE9               	goto	u3281
  4459     03E8  2BEA               	goto	u3280
  4460     03E9                     u3281:
  4461     03E9  2B40               	goto	l2783
  4462     03EA                     u3280:
  4463     03EA                     l2825:
  4464                           
  4465                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1480:    ungetc(c, fp);
  4466     03EA  085B               	movf	vfsfcnvrt@c+1,w
  4467     03EB  00F3               	movwf	ungetc@c+1
  4468     03EC  085A               	movf	vfsfcnvrt@c,w
  4469     03ED  00F2               	movwf	ungetc@c
  4470     03EE  084C               	movf	vfsfcnvrt@fp,w
  4471     03EF  00F4               	movwf	ungetc@fp
  4472     03F0  084D               	movf	vfsfcnvrt@fp+1,w
  4473     03F1  00F5               	movwf	ungetc@fp+1
  4474     03F2  120A  158A  25DB  120A  118A  	fcall	_ungetc
  4475     03F7  2B40               	goto	l2783
  4476     03F8                     l2827:
  4477     03F8  084E               	movf	vfsfcnvrt@fmt,w
  4478     03F9  0084               	movwf	4
  4479     03FA  0800               	movf	0,w
  4480     03FB  0084               	movwf	4
  4481     03FC  120A  158A  2000  120A  118A  	fcall	stringdir
  4482     0401  00D1               	movwf	??_vfsfcnvrt
  4483     0402  01D2               	clrf	??_vfsfcnvrt+1
  4484     0403  085B               	movf	vfsfcnvrt@c+1,w
  4485     0404  0652               	xorwf	??_vfsfcnvrt+1,w
  4486     0405  1D03               	skipz
  4487     0406  2C09               	goto	u3295
  4488     0407  085A               	movf	vfsfcnvrt@c,w
  4489     0408  0651               	xorwf	??_vfsfcnvrt,w
  4490     0409                     u3295:
  4491     0409  1D03               	skipz
  4492     040A  2C0C               	goto	u3291
  4493     040B  2C0D               	goto	u3290
  4494     040C                     u3291:
  4495     040C  2C0E               	goto	l2833
  4496     040D                     u3290:
  4497     040D  2B33               	goto	l2779
  4498     040E                     l2833:
  4499                           
  4500                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1487:   if (c == (-1)) {
  4501     040E  0A5A               	incf	vfsfcnvrt@c,w
  4502     040F  1D03               	skipz
  4503     0410  2C15               	goto	u3301
  4504     0411  0A5B               	incf	vfsfcnvrt@c+1,w
  4505     0412  1D03               	btfss	3,2
  4506     0413  2C15               	goto	u3301
  4507     0414  2C16               	goto	u3300
  4508     0415                     u3301:
  4509     0415  2B4D               	goto	l2791
  4510     0416                     u3300:
  4511     0416                     l2835:
  4512                           
  4513                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 1488:    return (-1);
  4514     0416  30FF               	movlw	255
  4515     0417  00CC               	movwf	?_vfsfcnvrt
  4516     0418  30FF               	movlw	255
  4517     0419  00CD               	movwf	?_vfsfcnvrt+1
  4518     041A                     l857:
  4519     041A  0008               	return
  4520     041B                     __end_of_vfsfcnvrt:
  4521                           
  4522                           	psect	text21
  4523     0D79                     __ptext21:	
  4524 ;; *************** function _strncmp *****************
  4525 ;; Defined at:
  4526 ;;		line 3 in file "D:\App\mplab\pic\sources\c99\common\strncmp.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  l               1    2[COMMON] PTR const unsigned char 
  4529 ;;		 -> STR_1(20), 
  4530 ;;  r               1    3[COMMON] PTR const unsigned char 
  4531 ;;		 -> STR_4(4), 
  4532 ;;  n               2    4[COMMON] unsigned int 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2    2[COMMON] int 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         4       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0
  4546 ;;      Temps:          1       0       0       0       0
  4547 ;;      Totals:         5       0       0       0       0
  4548 ;;Total ram usage:        5 bytes
  4549 ;; Hardware stack levels used: 2
  4550 ;; Hardware stack levels required when called: 1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_vfsfcnvrt
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558     0D79                     _strncmp:	
  4559                           ;psect for function _strncmp
  4560                           
  4561     0D79                     l2089:	
  4562                           ;incstack = 0
  4563                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  4564                           
  4565     0D79  3001               	movlw	1
  4566     0D7A  02F4               	subwf	strncmp@n,f
  4567     0D7B  3000               	movlw	0
  4568     0D7C  1C03               	skipc
  4569     0D7D  03F5               	decf	strncmp@n+1,f
  4570     0D7E  02F5               	subwf	strncmp@n+1,f
  4571     0D7F  0A74               	incf	strncmp@n,w
  4572     0D80  1D03               	skipz
  4573     0D81  2D86               	goto	u2141
  4574     0D82  0A75               	incf	strncmp@n+1,w
  4575     0D83  1D03               	btfss	3,2
  4576     0D84  2D86               	goto	u2141
  4577     0D85  2D87               	goto	u2140
  4578     0D86                     u2141:
  4579     0D86  2D94               	goto	l2099
  4580     0D87                     u2140:
  4581     0D87                     l2091:
  4582     0D87  01F2               	clrf	?_strncmp
  4583     0D88  01F3               	clrf	?_strncmp+1
  4584     0D89  2DDA               	goto	l982
  4585     0D8A                     l2095:
  4586     0D8A  3001               	movlw	1
  4587     0D8B  07F2               	addwf	strncmp@l,f
  4588     0D8C  3001               	movlw	1
  4589     0D8D  07F3               	addwf	strncmp@r,f
  4590     0D8E                     l2097:
  4591     0D8E  3001               	movlw	1
  4592     0D8F  02F4               	subwf	strncmp@n,f
  4593     0D90  3000               	movlw	0
  4594     0D91  1C03               	skipc
  4595     0D92  03F5               	decf	strncmp@n+1,f
  4596     0D93  02F5               	subwf	strncmp@n+1,f
  4597     0D94                     l2099:
  4598     0D94  0872               	movf	strncmp@l,w
  4599     0D95  0084               	movwf	4
  4600     0D96  120A  158A  2000  120A  158A  	fcall	stringdir
  4601     0D9B  3A00               	xorlw	0
  4602     0D9C  1903               	skipnz
  4603     0D9D  2D9F               	goto	u2151
  4604     0D9E  2DA0               	goto	u2150
  4605     0D9F                     u2151:
  4606     0D9F  2DC6               	goto	l2107
  4607     0DA0                     u2150:
  4608     0DA0                     l2101:
  4609     0DA0  0873               	movf	strncmp@r,w
  4610     0DA1  0084               	movwf	4
  4611     0DA2  120A  158A  2000  120A  158A  	fcall	stringdir
  4612     0DA7  3A00               	xorlw	0
  4613     0DA8  1903               	skipnz
  4614     0DA9  2DAB               	goto	u2161
  4615     0DAA  2DAC               	goto	u2160
  4616     0DAB                     u2161:
  4617     0DAB  2DC6               	goto	l2107
  4618     0DAC                     u2160:
  4619     0DAC                     l2103:
  4620     0DAC  0874               	movf	strncmp@n,w
  4621     0DAD  0475               	iorwf	strncmp@n+1,w
  4622     0DAE  1903               	btfsc	3,2
  4623     0DAF  2DB1               	goto	u2171
  4624     0DB0  2DB2               	goto	u2170
  4625     0DB1                     u2171:
  4626     0DB1  2DC6               	goto	l2107
  4627     0DB2                     u2170:
  4628     0DB2                     l2105:
  4629     0DB2  0873               	movf	strncmp@r,w
  4630     0DB3  0084               	movwf	4
  4631     0DB4  120A  158A  2000  120A  158A  	fcall	stringdir
  4632     0DB9  00F6               	movwf	??_strncmp
  4633     0DBA  0872               	movf	strncmp@l,w
  4634     0DBB  0084               	movwf	4
  4635     0DBC  120A  158A  2000  120A  158A  	fcall	stringdir
  4636     0DC1  0676               	xorwf	??_strncmp,w
  4637     0DC2  1903               	skipnz
  4638     0DC3  2DC5               	goto	u2181
  4639     0DC4  2DC6               	goto	u2180
  4640     0DC5                     u2181:
  4641     0DC5  2D8A               	goto	l2095
  4642     0DC6                     u2180:
  4643     0DC6                     l2107:
  4644     0DC6  0872               	movf	strncmp@l,w
  4645     0DC7  0084               	movwf	4
  4646     0DC8  120A  158A  2000  120A  158A  	fcall	stringdir
  4647     0DCD  00F6               	movwf	??_strncmp
  4648     0DCE  0873               	movf	strncmp@r,w
  4649     0DCF  0084               	movwf	4
  4650     0DD0  120A  158A  2000  120A  158A  	fcall	stringdir
  4651     0DD5  0276               	subwf	??_strncmp,w
  4652     0DD6  00F2               	movwf	?_strncmp
  4653     0DD7  01F3               	clrf	?_strncmp+1
  4654     0DD8  1C03               	skipc
  4655     0DD9  03F3               	decf	?_strncmp+1,f
  4656     0DDA                     l982:
  4657     0DDA  0008               	return
  4658     0DDB                     __end_of_strncmp:
  4659                           
  4660                           	psect	text22
  4661     0575                     __ptext22:	
  4662 ;; *************** function _atou *****************
  4663 ;; Defined at:
  4664 ;;		line 482 in file "D:\App\mplab\pic\sources\c99\common\doscan.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  fp              2   32[BANK0 ] PTR struct _IO_FILE
  4667 ;;		 -> sscanf@f(11), 
  4668 ;;  pll             1   34[BANK0 ] PTR unsigned long 
  4669 ;;		 -> vfsfcnvrt@llu(4), 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  c               2   42[BANK0 ] int 
  4672 ;;  i               2   40[BANK0 ] int 
  4673 ;;  w               2   37[BANK0 ] int 
  4674 ;;  ep              1   39[BANK0 ] PTR unsigned char 
  4675 ;;		 -> dbuf(32), 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  2   32[BANK0 ] int 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       3       0       0       0
  4686 ;;      Locals:         0       7       0       0       0
  4687 ;;      Temps:          0       2       0       0       0
  4688 ;;      Totals:         0      12       0       0       0
  4689 ;;Total ram usage:       12 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 3
  4692 ;; This function calls:
  4693 ;;		___strtoxl
  4694 ;;		_fgetc
  4695 ;;		_skipws
  4696 ;;		_ungetc
  4697 ;; This function is called by:
  4698 ;;		_vfsfcnvrt
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702     0575                     _atou:	
  4703                           ;psect for function _atou
  4704                           
  4705     0575                     l2671:	
  4706                           ;incstack = 0
  4707                           ; Regs used in _atou: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  4708                           
  4709                           
  4710                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 482: static int atou(FILE *fp, unsigned l
      +                          ong long *pll);D:\App\mplab\pic\sources\c99\common\doscan.c: 483: {;D:\App\mplab\pic\sou
      +                          rces\c99\common\doscan.c: 484:     char *ep;;D:\App\mplab\pic\sources\c99\common\doscan.
      +                          c: 485:     int c, i, w;;D:\App\mplab\pic\sources\c99\common\doscan.c: 488:     skipws(f
      +                          p);
  4711     0575  1283               	bcf	3,5	;RP0=0, select bank0
  4712     0576  1303               	bcf	3,6	;RP1=0, select bank0
  4713     0577  0840               	movf	atou@fp,w
  4714     0578  00AA               	movwf	skipws@fp
  4715     0579  0841               	movf	atou@fp+1,w
  4716     057A  00AB               	movwf	skipws@fp+1
  4717     057B  120A  158A  24BA  120A  118A  	fcall	_skipws
  4718     0580                     l2673:
  4719                           
  4720                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 491:     w = width ? width : sizeof(dbuf)
      +                           - 1;
  4721     0580  1683               	bsf	3,5	;RP0=1, select bank1
  4722     0581  1303               	bcf	3,6	;RP1=0, select bank1
  4723     0582  0827               	movf	_width^(0+128),w
  4724     0583  0428               	iorwf	(_width+1)^(0+128),w
  4725     0584  1D03               	btfss	3,2
  4726     0585  2D87               	goto	u2971
  4727     0586  2D88               	goto	u2970
  4728     0587                     u2971:
  4729     0587  2D8F               	goto	l2677
  4730     0588                     u2970:
  4731     0588                     l2675:
  4732     0588  301F               	movlw	31
  4733     0589  1283               	bcf	3,5	;RP0=0, select bank0
  4734     058A  1303               	bcf	3,6	;RP1=0, select bank0
  4735     058B  00C5               	movwf	atou@w
  4736     058C  3000               	movlw	0
  4737     058D  00C6               	movwf	atou@w+1
  4738     058E  2D99               	goto	l2679
  4739     058F                     l2677:
  4740     058F  0828               	movf	(_width+1)^(0+128),w
  4741     0590  1283               	bcf	3,5	;RP0=0, select bank0
  4742     0591  1303               	bcf	3,6	;RP1=0, select bank0
  4743     0592  00C6               	movwf	atou@w+1
  4744     0593  1683               	bsf	3,5	;RP0=1, select bank1
  4745     0594  1303               	bcf	3,6	;RP1=0, select bank1
  4746     0595  0827               	movf	_width^(0+128),w
  4747     0596  1283               	bcf	3,5	;RP0=0, select bank0
  4748     0597  1303               	bcf	3,6	;RP1=0, select bank0
  4749     0598  00C5               	movwf	atou@w
  4750     0599                     l2679:
  4751                           
  4752                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 492:     i = 0;
  4753     0599  01C8               	clrf	atou@i
  4754     059A  01C9               	clrf	atou@i+1
  4755                           
  4756                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 493:     while ((i < w) && (i < (sizeof(d
      +                          buf) - 1))) {
  4757     059B  2E11               	goto	l2717
  4758     059C                     l2681:
  4759                           
  4760                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 494:         c = fgetc(fp);
  4761     059C  0840               	movf	atou@fp,w
  4762     059D  00F4               	movwf	fgetc@fp
  4763     059E  0841               	movf	atou@fp+1,w
  4764     059F  00F5               	movwf	fgetc@fp+1
  4765     05A0  120A  158A  2733  120A  118A  	fcall	_fgetc
  4766     05A5  0875               	movf	?_fgetc+1,w
  4767     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  4768     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  4769     05A8  00CB               	movwf	atou@c+1
  4770     05A9  0874               	movf	?_fgetc,w
  4771     05AA  00CA               	movwf	atou@c
  4772     05AB                     l2683:
  4773                           
  4774                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 495:         if (c == (-1) && (width || i
      +                          ==0)) {
  4775     05AB  0A4A               	incf	atou@c,w
  4776     05AC  1D03               	skipz
  4777     05AD  2DB2               	goto	u2981
  4778     05AE  0A4B               	incf	atou@c+1,w
  4779     05AF  1D03               	btfss	3,2
  4780     05B0  2DB2               	goto	u2981
  4781     05B1  2DB3               	goto	u2980
  4782     05B2                     u2981:
  4783     05B2  2DC9               	goto	l2693
  4784     05B3                     u2980:
  4785     05B3                     l2685:
  4786     05B3  1683               	bsf	3,5	;RP0=1, select bank1
  4787     05B4  1303               	bcf	3,6	;RP1=0, select bank1
  4788     05B5  0827               	movf	_width^(0+128),w
  4789     05B6  0428               	iorwf	(_width+1)^(0+128),w
  4790     05B7  1D03               	btfss	3,2
  4791     05B8  2DBA               	goto	u2991
  4792     05B9  2DBB               	goto	u2990
  4793     05BA                     u2991:
  4794     05BA  2DC3               	goto	l2689
  4795     05BB                     u2990:
  4796     05BB                     l2687:
  4797     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  4798     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  4799     05BD  0848               	movf	atou@i,w
  4800     05BE  0449               	iorwf	atou@i+1,w
  4801     05BF  1D03               	btfss	3,2
  4802     05C0  2DC2               	goto	u3001
  4803     05C1  2DC3               	goto	u3000
  4804     05C2                     u3001:
  4805     05C2  2DC9               	goto	l2693
  4806     05C3                     u3000:
  4807     05C3                     l2689:
  4808                           
  4809                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 496:             return c;
  4810     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4811     05C4  084B               	movf	atou@c+1,w
  4812     05C5  00C1               	movwf	?_atou+1
  4813     05C6  084A               	movf	atou@c,w
  4814     05C7  00C0               	movwf	?_atou
  4815     05C8  2E73               	goto	l839
  4816     05C9                     l2693:
  4817                           
  4818                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 498:         if (!i && ((c == '+') || (c 
      +                          == '-'))) {
  4819     05C9  0848               	movf	atou@i,w
  4820     05CA  0449               	iorwf	atou@i+1,w
  4821     05CB  1D03               	btfss	3,2
  4822     05CC  2DCE               	goto	u3011
  4823     05CD  2DCF               	goto	u3010
  4824     05CE                     u3011:
  4825     05CE  2DF2               	goto	l2705
  4826     05CF                     u3010:
  4827     05CF                     l2695:
  4828     05CF  302B               	movlw	43
  4829     05D0  064A               	xorwf	atou@c,w
  4830     05D1  044B               	iorwf	atou@c+1,w
  4831     05D2  1903               	btfsc	3,2
  4832     05D3  2DD5               	goto	u3021
  4833     05D4  2DD6               	goto	u3020
  4834     05D5                     u3021:
  4835     05D5  2DDD               	goto	l2699
  4836     05D6                     u3020:
  4837     05D6                     l2697:
  4838     05D6  302D               	movlw	45
  4839     05D7  064A               	xorwf	atou@c,w
  4840     05D8  044B               	iorwf	atou@c+1,w
  4841     05D9  1D03               	btfss	3,2
  4842     05DA  2DDC               	goto	u3031
  4843     05DB  2DDD               	goto	u3030
  4844     05DC                     u3031:
  4845     05DC  2DF2               	goto	l2705
  4846     05DD                     u3030:
  4847     05DD                     l2699:
  4848                           
  4849                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 499:             dbuf[i] = (char)c;
  4850     05DD  0848               	movf	atou@i,w
  4851     05DE  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4852     05DF  0084               	movwf	4
  4853     05E0  084A               	movf	atou@c,w
  4854     05E1  1783               	bsf	3,7	;select IRP bank3
  4855     05E2  0080               	movwf	0
  4856     05E3                     l2701:
  4857                           
  4858                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 500:             ++i;
  4859     05E3  3001               	movlw	1
  4860     05E4  07C8               	addwf	atou@i,f
  4861     05E5  1803               	skipnc
  4862     05E6  0AC9               	incf	atou@i+1,f
  4863     05E7  3000               	movlw	0
  4864     05E8  07C9               	addwf	atou@i+1,f
  4865     05E9                     l2703:
  4866                           
  4867                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 501:             ++nmatch;
  4868     05E9  3001               	movlw	1
  4869     05EA  1683               	bsf	3,5	;RP0=1, select bank1
  4870     05EB  1303               	bcf	3,6	;RP1=0, select bank1
  4871     05EC  07A3               	addwf	_nmatch^(0+128),f
  4872     05ED  1803               	skipnc
  4873     05EE  0AA4               	incf	(_nmatch+1)^(0+128),f
  4874     05EF  3000               	movlw	0
  4875     05F0  07A4               	addwf	(_nmatch+1)^(0+128),f
  4876                           
  4877                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 502:             continue;
  4878     05F1  2E11               	goto	l2717
  4879     05F2                     l2705:
  4880                           
  4881                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 504:         if (!(((unsigned char)((c)-'
      +                          0')) < 10)) {
  4882     05F2  30D0               	movlw	208
  4883     05F3  074A               	addwf	atou@c,w
  4884     05F4  00C3               	movwf	??_atou
  4885     05F5  300A               	movlw	10
  4886     05F6  0243               	subwf	??_atou,w
  4887     05F7  1C03               	skipc
  4888     05F8  2DFA               	goto	u3041
  4889     05F9  2DFB               	goto	u3040
  4890     05FA                     u3041:
  4891     05FA  2DDD               	goto	l2699
  4892     05FB                     u3040:
  4893     05FB                     l2707:
  4894                           
  4895                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 505:    if (c != (-1)) {
  4896     05FB  0A4A               	incf	atou@c,w
  4897     05FC  1D03               	skipz
  4898     05FD  2E03               	goto	u3050
  4899     05FE  0A4B               	incf	atou@c+1,w
  4900     05FF  1903               	btfsc	3,2
  4901     0600  2E02               	goto	u3051
  4902     0601  2E03               	goto	u3050
  4903     0602                     u3051:
  4904     0602  2E2B               	goto	l2721
  4905     0603                     u3050:
  4906     0603                     l2709:
  4907                           
  4908                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 506:     ungetc(c, fp);
  4909     0603  084B               	movf	atou@c+1,w
  4910     0604  00F3               	movwf	ungetc@c+1
  4911     0605  084A               	movf	atou@c,w
  4912     0606  00F2               	movwf	ungetc@c
  4913     0607  0840               	movf	atou@fp,w
  4914     0608  00F4               	movwf	ungetc@fp
  4915     0609  0841               	movf	atou@fp+1,w
  4916     060A  00F5               	movwf	ungetc@fp+1
  4917     060B  120A  158A  25DB  120A  118A  	fcall	_ungetc
  4918     0610  2E2B               	goto	l2721
  4919     0611                     l2717:
  4920                           
  4921                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 493:     while ((i < w) && (i < (sizeof(d
      +                          buf) - 1))) {
  4922     0611  1283               	bcf	3,5	;RP0=0, select bank0
  4923     0612  0849               	movf	atou@i+1,w
  4924     0613  3A80               	xorlw	128
  4925     0614  00C3               	movwf	??_atou
  4926     0615  0846               	movf	atou@w+1,w
  4927     0616  3A80               	xorlw	128
  4928     0617  0243               	subwf	??_atou,w
  4929     0618  1D03               	skipz
  4930     0619  2E1C               	goto	u3065
  4931     061A  0845               	movf	atou@w,w
  4932     061B  0248               	subwf	atou@i,w
  4933     061C                     u3065:
  4934     061C  1803               	skipnc
  4935     061D  2E1F               	goto	u3061
  4936     061E  2E20               	goto	u3060
  4937     061F                     u3061:
  4938     061F  2E2B               	goto	l2721
  4939     0620                     u3060:
  4940     0620                     l2719:
  4941     0620  3000               	movlw	0
  4942     0621  1283               	bcf	3,5	;RP0=0, select bank0
  4943     0622  1303               	bcf	3,6	;RP1=0, select bank0
  4944     0623  0249               	subwf	atou@i+1,w
  4945     0624  301F               	movlw	31
  4946     0625  1903               	skipnz
  4947     0626  0248               	subwf	atou@i,w
  4948     0627  1C03               	skipc
  4949     0628  2E2A               	goto	u3071
  4950     0629  2E2B               	goto	u3070
  4951     062A                     u3071:
  4952     062A  2D9C               	goto	l2681
  4953     062B                     u3070:
  4954     062B                     l2721:
  4955                           
  4956                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 514:     dbuf[i] = '\0';
  4957     062B  1283               	bcf	3,5	;RP0=0, select bank0
  4958     062C  1303               	bcf	3,6	;RP1=0, select bank0
  4959     062D  0848               	movf	atou@i,w
  4960     062E  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4961     062F  0084               	movwf	4
  4962     0630  1783               	bsf	3,7	;select IRP bank3
  4963     0631  0180               	clrf	0
  4964     0632                     l2723:
  4965                           
  4966                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 520:     *pll = __strtoxl(&dbuf[0],&ep,10
      +                          ,0);
  4967     0632  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4968     0633  00A4               	movwf	___strtoxl@s
  4969     0634  3047               	movlw	(low (atou@ep| 0))& (0+255)
  4970     0635  00A5               	movwf	___strtoxl@endptr
  4971     0636  300A               	movlw	10
  4972     0637  00A6               	movwf	___strtoxl@base
  4973     0638  3000               	movlw	0
  4974     0639  00A7               	movwf	___strtoxl@base+1
  4975     063A  01A8               	clrf	___strtoxl@is_signed
  4976     063B  120A  118A  2029  120A  118A  	fcall	___strtoxl
  4977     0640  1283               	bcf	3,5	;RP0=0, select bank0
  4978     0641  1303               	bcf	3,6	;RP1=0, select bank0
  4979     0642  0842               	movf	atou@pll,w
  4980     0643  0084               	movwf	4
  4981     0644  0824               	movf	?___strtoxl,w
  4982     0645  1383               	bcf	3,7	;select IRP bank0
  4983     0646  0080               	movwf	0
  4984     0647  0A84               	incf	4,f
  4985     0648  0825               	movf	?___strtoxl+1,w
  4986     0649  0080               	movwf	0
  4987     064A  0A84               	incf	4,f
  4988     064B  0826               	movf	?___strtoxl+2,w
  4989     064C  0080               	movwf	0
  4990     064D  0A84               	incf	4,f
  4991     064E  0827               	movf	?___strtoxl+3,w
  4992     064F  0080               	movwf	0
  4993     0650                     l2725:
  4994                           
  4995                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 523:     return (errno || !i) ? (-1) - 1 
      +                          : !asup;
  4996     0650  1683               	bsf	3,5	;RP0=1, select bank1
  4997     0651  1303               	bcf	3,6	;RP1=0, select bank1
  4998     0652  0829               	movf	_errno^(0+128),w
  4999     0653  042A               	iorwf	(_errno+1)^(0+128),w
  5000     0654  1D03               	btfss	3,2
  5001     0655  2E57               	goto	u3081
  5002     0656  2E58               	goto	u3080
  5003     0657                     u3081:
  5004     0657  2E6E               	goto	l2731
  5005     0658                     u3080:
  5006     0658                     l2727:
  5007     0658  1283               	bcf	3,5	;RP0=0, select bank0
  5008     0659  1303               	bcf	3,6	;RP1=0, select bank0
  5009     065A  0848               	movf	atou@i,w
  5010     065B  0449               	iorwf	atou@i+1,w
  5011     065C  1903               	btfsc	3,2
  5012     065D  2E5F               	goto	u3091
  5013     065E  2E60               	goto	u3090
  5014     065F                     u3091:
  5015     065F  2E6E               	goto	l2731
  5016     0660                     u3090:
  5017     0660                     l2729:
  5018     0660  086F               	movf	_asup,w
  5019     0661  1903               	btfsc	3,2
  5020     0662  2E64               	goto	u3101
  5021     0663  2E66               	goto	u3100
  5022     0664                     u3101:
  5023     0664  3001               	movlw	1
  5024     0665  2E67               	goto	u3110
  5025     0666                     u3100:
  5026     0666  3000               	movlw	0
  5027     0667                     u3110:
  5028     0667  00C3               	movwf	??_atou
  5029     0668  01C4               	clrf	??_atou+1
  5030     0669  0843               	movf	??_atou,w
  5031     066A  00C0               	movwf	?_atou
  5032     066B  0844               	movf	??_atou+1,w
  5033     066C  00C1               	movwf	?_atou+1
  5034     066D  2E73               	goto	l839
  5035     066E                     l2731:
  5036     066E  30FE               	movlw	254
  5037     066F  1283               	bcf	3,5	;RP0=0, select bank0
  5038     0670  00C0               	movwf	?_atou
  5039     0671  30FF               	movlw	255
  5040     0672  00C1               	movwf	?_atou+1
  5041     0673                     l839:
  5042     0673  0008               	return
  5043     0674                     __end_of_atou:
  5044                           
  5045                           	psect	text23
  5046     0CBA                     __ptext23:	
  5047 ;; *************** function _skipws *****************
  5048 ;; Defined at:
  5049 ;;		line 74 in file "D:\App\mplab\pic\sources\c99\common\doscan.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  5052 ;;		 -> sscanf@f(11), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  c               2   12[BANK0 ] int 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       2       0       0       0
  5065 ;;      Locals:         0       2       0       0       0
  5066 ;;      Temps:          1       0       0       0       0
  5067 ;;      Totals:         1       4       0       0       0
  5068 ;;Total ram usage:        5 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 1
  5071 ;; This function calls:
  5072 ;;		_fgetc
  5073 ;;		_ungetc
  5074 ;; This function is called by:
  5075 ;;		_atou
  5076 ;;		_vfsfcnvrt
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080     0CBA                     _skipws:	
  5081                           ;psect for function _skipws
  5082                           
  5083     0CBA                     l2661:	
  5084                           ;incstack = 0
  5085                           ; Regs used in _skipws: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  5086                           
  5087                           
  5088                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 74: static void skipws(FILE *fp);D:\App\m
      +                          plab\pic\sources\c99\common\doscan.c: 75: {;D:\App\mplab\pic\sources\c99\common\doscan.c
      +                          : 76:     int c;;D:\App\mplab\pic\sources\c99\common\doscan.c: 78:     while ((c = fgetc
      +                          (fp)) != (-1)) {
  5089     0CBA  2CD9               	goto	l2669
  5090     0CBB                     l2663:
  5091                           
  5092                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 79:         if (!(((c == ' ') || ((unsign
      +                          ed char)((c)-'\t') < 5)))) {
  5093     0CBB  3020               	movlw	32
  5094     0CBC  062C               	xorwf	skipws@c,w
  5095     0CBD  042D               	iorwf	skipws@c+1,w
  5096     0CBE  1903               	btfsc	3,2
  5097     0CBF  2CC1               	goto	u2941
  5098     0CC0  2CC2               	goto	u2940
  5099     0CC1                     u2941:
  5100     0CC1  2CD9               	goto	l2669
  5101     0CC2                     u2940:
  5102     0CC2                     l2665:
  5103     0CC2  30F7               	movlw	247
  5104     0CC3  072C               	addwf	skipws@c,w
  5105     0CC4  00FA               	movwf	??_skipws
  5106     0CC5  3005               	movlw	5
  5107     0CC6  027A               	subwf	??_skipws,w
  5108     0CC7  1C03               	skipc
  5109     0CC8  2CCA               	goto	u2951
  5110     0CC9  2CCB               	goto	u2950
  5111     0CCA                     u2951:
  5112     0CCA  2CD9               	goto	l2669
  5113     0CCB                     u2950:
  5114     0CCB                     l2667:
  5115                           
  5116                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 80:             ungetc(c, fp);
  5117     0CCB  082D               	movf	skipws@c+1,w
  5118     0CCC  00F3               	movwf	ungetc@c+1
  5119     0CCD  082C               	movf	skipws@c,w
  5120     0CCE  00F2               	movwf	ungetc@c
  5121     0CCF  082A               	movf	skipws@fp,w
  5122     0CD0  00F4               	movwf	ungetc@fp
  5123     0CD1  082B               	movf	skipws@fp+1,w
  5124     0CD2  00F5               	movwf	ungetc@fp+1
  5125     0CD3  120A  158A  25DB  120A  158A  	fcall	_ungetc
  5126                           
  5127                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 81:             break;
  5128     0CD8  2CF2               	goto	l827
  5129     0CD9                     l2669:
  5130                           
  5131                           ;D:\App\mplab\pic\sources\c99\common\doscan.c: 78:     while ((c = fgetc(fp)) != (-1)) {
  5132     0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  5133     0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  5134     0CDB  082A               	movf	skipws@fp,w
  5135     0CDC  00F4               	movwf	fgetc@fp
  5136     0CDD  082B               	movf	skipws@fp+1,w
  5137     0CDE  00F5               	movwf	fgetc@fp+1
  5138     0CDF  120A  158A  2733  120A  158A  	fcall	_fgetc
  5139     0CE4  0875               	movf	?_fgetc+1,w
  5140     0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  5141     0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  5142     0CE7  00AD               	movwf	skipws@c+1
  5143     0CE8  0874               	movf	?_fgetc,w
  5144     0CE9  00AC               	movwf	skipws@c
  5145     0CEA  0A2C               	incf	skipws@c,w
  5146     0CEB  1D03               	skipz
  5147     0CEC  2CF1               	goto	u2961
  5148     0CED  0A2D               	incf	skipws@c+1,w
  5149     0CEE  1D03               	btfss	3,2
  5150     0CEF  2CF1               	goto	u2961
  5151     0CF0  2CF2               	goto	u2960
  5152     0CF1                     u2961:
  5153     0CF1  2CBB               	goto	l2663
  5154     0CF2                     u2960:
  5155     0CF2                     l827:
  5156     0CF2  0008               	return
  5157     0CF3                     __end_of_skipws:
  5158                           
  5159                           	psect	text24
  5160     0DDB                     __ptext24:	
  5161 ;; *************** function _ungetc *****************
  5162 ;; Defined at:
  5163 ;;		line 33 in file "D:\App\mplab\pic\sources\c99\common\nf_getc.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  c               2    2[COMMON] int 
  5166 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  5167 ;;		 -> sscanf@f(11), 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  2    2[COMMON] int 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         4       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0
  5181 ;;      Temps:          4       0       0       0       0
  5182 ;;      Totals:         8       0       0       0       0
  5183 ;;Total ram usage:        8 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; Hardware stack levels required when called: 1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_skipws
  5190 ;;		_atou
  5191 ;;		_vfsfcnvrt
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195     0DDB                     _ungetc:	
  5196                           ;psect for function _ungetc
  5197                           
  5198     0DDB                     l1841:	
  5199                           ;incstack = 0
  5200                           ; Regs used in _ungetc: [wreg-fsr0h+status,2+status,0]
  5201                           
  5202     0DDB  0A72               	incf	ungetc@c,w
  5203     0DDC  1D03               	skipz
  5204     0DDD  2DE2               	goto	u1521
  5205     0DDE  0A73               	incf	ungetc@c+1,w
  5206     0DDF  1D03               	btfss	3,2
  5207     0DE0  2DE2               	goto	u1521
  5208     0DE1  2DE3               	goto	u1520
  5209     0DE2                     u1521:
  5210     0DE2  2DE4               	goto	l1845
  5211     0DE3                     u1520:
  5212     0DE3  2E40               	goto	l969
  5213     0DE4                     l1845:
  5214     0DE4  0874               	movf	ungetc@fp,w
  5215     0DE5  0475               	iorwf	ungetc@fp+1,w
  5216     0DE6  1D03               	btfss	3,2
  5217     0DE7  2DE9               	goto	u1531
  5218     0DE8  2DEA               	goto	u1530
  5219     0DE9                     u1531:
  5220     0DE9  2DF9               	goto	l1853
  5221     0DEA                     u1530:
  5222     0DEA                     l1847:
  5223     0DEA  3003               	movlw	3
  5224     0DEB  067B               	xorwf	___ungetcnt,w
  5225     0DEC  1903               	btfsc	3,2
  5226     0DED  2DEF               	goto	u1541
  5227     0DEE  2DF0               	goto	u1540
  5228     0DEF                     u1541:
  5229     0DEF  2E40               	goto	l969
  5230     0DF0                     u1540:
  5231     0DF0                     l1849:
  5232     0DF0  087B               	movf	___ungetcnt,w
  5233     0DF1  3EA0               	addlw	(low (___ungetbuf| 0))& (0+255)
  5234     0DF2  0084               	movwf	4
  5235     0DF3  0872               	movf	ungetc@c,w
  5236     0DF4  1383               	bcf	3,7	;select IRP bank1
  5237     0DF5  0080               	movwf	0
  5238     0DF6                     l1851:
  5239     0DF6  3001               	movlw	1
  5240     0DF7  07FB               	addwf	___ungetcnt,f
  5241     0DF8  2E40               	goto	l969
  5242     0DF9                     l1853:
  5243     0DF9  0874               	movf	ungetc@fp,w
  5244     0DFA  3E07               	addlw	7
  5245     0DFB  00F6               	movwf	??_ungetc
  5246     0DFC  0875               	movf	ungetc@fp+1,w
  5247     0DFD  1803               	skipnc
  5248     0DFE  3E01               	addlw	1
  5249     0DFF  3E00               	addlw	0
  5250     0E00  00F7               	movwf	??_ungetc+1
  5251     0E01  0876               	movf	??_ungetc,w
  5252     0E02  0084               	movwf	4
  5253     0E03  1783               	bsf	3,7
  5254     0E04  1C77               	btfss	??_ungetc+1,0
  5255     0E05  1383               	bcf	3,7
  5256     0E06  0800               	movf	0,w
  5257     0E07  00F8               	movwf	??_ungetc+2
  5258     0E08  0A84               	incf	4,f
  5259     0E09  0800               	movf	0,w
  5260     0E0A  00F9               	movwf	??_ungetc+3
  5261     0E0B  3003               	movlw	3
  5262     0E0C  0678               	xorwf	??_ungetc+2,w
  5263     0E0D  0479               	iorwf	??_ungetc+3,w
  5264     0E0E  1903               	btfsc	3,2
  5265     0E0F  2E11               	goto	u1551
  5266     0E10  2E12               	goto	u1550
  5267     0E11                     u1551:
  5268     0E11  2E40               	goto	l969
  5269     0E12                     u1550:
  5270     0E12                     l1855:
  5271     0E12  0874               	movf	ungetc@fp,w
  5272     0E13  3E07               	addlw	7
  5273     0E14  00F6               	movwf	??_ungetc
  5274     0E15  0875               	movf	ungetc@fp+1,w
  5275     0E16  1803               	skipnc
  5276     0E17  3E01               	addlw	1
  5277     0E18  3E00               	addlw	0
  5278     0E19  00F7               	movwf	??_ungetc+1
  5279     0E1A  0876               	movf	??_ungetc,w
  5280     0E1B  0084               	movwf	4
  5281     0E1C  1783               	bsf	3,7
  5282     0E1D  1C77               	btfss	??_ungetc+1,0
  5283     0E1E  1383               	bcf	3,7
  5284     0E1F  0800               	movf	0,w
  5285     0E20  3E04               	addlw	4
  5286     0E21  0774               	addwf	ungetc@fp,w
  5287     0E22  00F8               	movwf	??_ungetc+2
  5288     0E23  0875               	movf	ungetc@fp+1,w
  5289     0E24  1803               	skipnc
  5290     0E25  3E01               	addlw	1
  5291     0E26  00F9               	movwf	??_ungetc+3
  5292     0E27  0878               	movf	??_ungetc+2,w
  5293     0E28  0084               	movwf	4
  5294     0E29  1783               	bsf	3,7
  5295     0E2A  1C79               	btfss	??_ungetc+3,0
  5296     0E2B  1383               	bcf	3,7
  5297     0E2C  0872               	movf	ungetc@c,w
  5298     0E2D  0080               	movwf	0
  5299     0E2E  0874               	movf	ungetc@fp,w
  5300     0E2F  3E07               	addlw	7
  5301     0E30  00F6               	movwf	??_ungetc
  5302     0E31  0875               	movf	ungetc@fp+1,w
  5303     0E32  1803               	skipnc
  5304     0E33  3E01               	addlw	1
  5305     0E34  3E00               	addlw	0
  5306     0E35  00F7               	movwf	??_ungetc+1
  5307     0E36  0876               	movf	??_ungetc,w
  5308     0E37  0084               	movwf	4
  5309     0E38  1783               	bsf	3,7
  5310     0E39  1C77               	btfss	??_ungetc+1,0
  5311     0E3A  1383               	bcf	3,7
  5312     0E3B  3001               	movlw	1
  5313     0E3C  0780               	addwf	0,f
  5314     0E3D  0A84               	incf	4,f
  5315     0E3E  1803               	skipnc
  5316     0E3F  0A80               	incf	0,f
  5317     0E40                     l969:
  5318     0E40  0008               	return
  5319     0E41                     __end_of_ungetc:
  5320                           
  5321                           	psect	text25
  5322     0F33                     __ptext25:	
  5323 ;; *************** function _fgetc *****************
  5324 ;; Defined at:
  5325 ;;		line 11 in file "D:\App\mplab\pic\sources\c99\common\nf_getc.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  5328 ;;		 -> sscanf@f(11), 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  c               2    6[COMMON] int 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2    4[COMMON] int 
  5333 ;; Registers used:
  5334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         2       0       0       0       0
  5341 ;;      Locals:         2       0       0       0       0
  5342 ;;      Temps:          0      10       0       0       0
  5343 ;;      Totals:         4      10       0       0       0
  5344 ;;Total ram usage:       14 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; Hardware stack levels required when called: 1
  5347 ;; This function calls:
  5348 ;;		_getch
  5349 ;; This function is called by:
  5350 ;;		_skipws
  5351 ;;		_atou
  5352 ;;		_vfsfcnvrt
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356     0F33                     _fgetc:	
  5357                           ;psect for function _fgetc
  5358                           
  5359     0F33                     l1857:	
  5360                           ;incstack = 0
  5361                           ; Regs used in _fgetc: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  5362                           
  5363     0F33  0874               	movf	fgetc@fp,w
  5364     0F34  0475               	iorwf	fgetc@fp+1,w
  5365     0F35  1D03               	btfss	3,2
  5366     0F36  2F38               	goto	u1561
  5367     0F37  2F39               	goto	u1560
  5368     0F38                     u1561:
  5369     0F38  2F58               	goto	l1865
  5370     0F39                     u1560:
  5371     0F39                     l1859:
  5372     0F39  087B               	movf	___ungetcnt,w
  5373     0F3A  1D03               	btfss	3,2
  5374     0F3B  2F3D               	goto	u1571
  5375     0F3C  2F3E               	goto	u1570
  5376     0F3D                     u1571:
  5377     0F3D  2F48               	goto	l1863
  5378     0F3E                     u1570:
  5379     0F3E                     l1861:
  5380     0F3E  120A  158A  2325  120A  158A  	fcall	_getch
  5381     0F43  0873               	movf	?_getch+1,w
  5382     0F44  00F7               	movwf	fgetc@c+1
  5383     0F45  0872               	movf	?_getch,w
  5384     0F46  00F6               	movwf	fgetc@c
  5385     0F47  2FFB               	goto	l1877
  5386     0F48                     l1863:
  5387     0F48  3001               	movlw	1
  5388     0F49  02FB               	subwf	___ungetcnt,f
  5389     0F4A  087B               	movf	___ungetcnt,w
  5390     0F4B  3EA0               	addlw	(low (___ungetbuf| 0))& (0+255)
  5391     0F4C  0084               	movwf	4
  5392     0F4D  1383               	bcf	3,7	;select IRP bank1
  5393     0F4E  0800               	movf	0,w
  5394     0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5395     0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5396     0F51  00A0               	movwf	??_fgetc
  5397     0F52  01A1               	clrf	??_fgetc+1
  5398     0F53  0820               	movf	??_fgetc,w
  5399     0F54  00F6               	movwf	fgetc@c
  5400     0F55  0821               	movf	??_fgetc+1,w
  5401     0F56  00F7               	movwf	fgetc@c+1
  5402     0F57  2FFB               	goto	l1877
  5403     0F58                     l1865:
  5404     0F58  0874               	movf	fgetc@fp,w
  5405     0F59  3E07               	addlw	7
  5406     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5407     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5408     0F5C  00A0               	movwf	??_fgetc
  5409     0F5D  0875               	movf	fgetc@fp+1,w
  5410     0F5E  1803               	skipnc
  5411     0F5F  3E01               	addlw	1
  5412     0F60  3E00               	addlw	0
  5413     0F61  00A1               	movwf	??_fgetc+1
  5414     0F62  0820               	movf	??_fgetc,w
  5415     0F63  0084               	movwf	4
  5416     0F64  1783               	bsf	3,7
  5417     0F65  1C21               	btfss	??_fgetc+1,0
  5418     0F66  1383               	bcf	3,7
  5419     0F67  0800               	movf	0,w
  5420     0F68  00A2               	movwf	??_fgetc+2
  5421     0F69  0A84               	incf	4,f
  5422     0F6A  0800               	movf	0,w
  5423     0F6B  00A3               	movwf	??_fgetc+3
  5424     0F6C  0822               	movf	??_fgetc+2,w
  5425     0F6D  0423               	iorwf	??_fgetc+3,w
  5426     0F6E  1903               	btfsc	3,2
  5427     0F6F  2F71               	goto	u1581
  5428     0F70  2F72               	goto	u1580
  5429     0F71                     u1581:
  5430     0F71  2FAD               	goto	l1869
  5431     0F72                     u1580:
  5432     0F72                     l1867:
  5433     0F72  0874               	movf	fgetc@fp,w
  5434     0F73  3E07               	addlw	7
  5435     0F74  00A0               	movwf	??_fgetc
  5436     0F75  0875               	movf	fgetc@fp+1,w
  5437     0F76  1803               	skipnc
  5438     0F77  3E01               	addlw	1
  5439     0F78  3E00               	addlw	0
  5440     0F79  00A1               	movwf	??_fgetc+1
  5441     0F7A  0820               	movf	??_fgetc,w
  5442     0F7B  0084               	movwf	4
  5443     0F7C  1783               	bsf	3,7
  5444     0F7D  1C21               	btfss	??_fgetc+1,0
  5445     0F7E  1383               	bcf	3,7
  5446     0F7F  30FF               	movlw	255
  5447     0F80  0780               	addwf	0,f
  5448     0F81  0F84               	incfsz	4,f
  5449     0F82  0800               	movf	0,w
  5450     0F83  1803               	skipnc
  5451     0F84  0A00               	incf	0,w
  5452     0F85  00FF               	movwf	btemp1
  5453     0F86  30FF               	movlw	255
  5454     0F87  077F               	addwf	btemp1,w
  5455     0F88  0080               	movwf	0
  5456     0F89  0384               	decf	4,f
  5457     0F8A  0800               	movf	0,w
  5458     0F8B  00A2               	movwf	??_fgetc+2
  5459     0F8C  0A84               	incf	4,f
  5460     0F8D  0800               	movf	0,w
  5461     0F8E  00A3               	movwf	??_fgetc+3
  5462     0F8F  3004               	movlw	4
  5463     0F90  0722               	addwf	??_fgetc+2,w
  5464     0F91  00A4               	movwf	??_fgetc+4
  5465     0F92  0824               	movf	??_fgetc+4,w
  5466     0F93  0774               	addwf	fgetc@fp,w
  5467     0F94  00A6               	movwf	??_fgetc+6
  5468     0F95  0875               	movf	fgetc@fp+1,w
  5469     0F96  00A5               	movwf	??_fgetc+5
  5470     0F97  1803               	skipnc
  5471     0F98  0AA5               	incf	??_fgetc+5,f
  5472     0F99  1FA4               	btfss	??_fgetc+4,7
  5473     0F9A  2F9C               	goto	u1590
  5474     0F9B  03A5               	decf	??_fgetc+5,f
  5475     0F9C                     u1590:
  5476     0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  5477     0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  5478     0F9E  0825               	movf	??_fgetc+5,w
  5479     0F9F  00A7               	movwf	??_fgetc+7
  5480     0FA0  0826               	movf	??_fgetc+6,w
  5481     0FA1  0084               	movwf	4
  5482     0FA2  1783               	bsf	3,7
  5483     0FA3  1C27               	btfss	??_fgetc+7,0
  5484     0FA4  1383               	bcf	3,7
  5485     0FA5  0800               	movf	0,w
  5486     0FA6  00A8               	movwf	??_fgetc+8
  5487     0FA7  01A9               	clrf	??_fgetc+9
  5488     0FA8  0828               	movf	??_fgetc+8,w
  5489     0FA9  00F6               	movwf	fgetc@c
  5490     0FAA  0829               	movf	??_fgetc+9,w
  5491     0FAB  00F7               	movwf	fgetc@c+1
  5492     0FAC  2FFB               	goto	l1877
  5493     0FAD                     l1869:
  5494     0FAD  0874               	movf	fgetc@fp,w
  5495     0FAE  0084               	movwf	4
  5496     0FAF  1783               	bsf	3,7
  5497     0FB0  1C75               	btfss	fgetc@fp+1,0
  5498     0FB1  1383               	bcf	3,7
  5499     0FB2  0800               	movf	0,w
  5500     0FB3  00A0               	movwf	??_fgetc
  5501     0FB4  0A84               	incf	4,f
  5502     0FB5  0800               	movf	0,w
  5503     0FB6  00A1               	movwf	??_fgetc+1
  5504     0FB7  0874               	movf	fgetc@fp,w
  5505     0FB8  3E02               	addlw	2
  5506     0FB9  00A2               	movwf	??_fgetc+2
  5507     0FBA  0875               	movf	fgetc@fp+1,w
  5508     0FBB  1803               	skipnc
  5509     0FBC  3E01               	addlw	1
  5510     0FBD  3E00               	addlw	0
  5511     0FBE  00A3               	movwf	??_fgetc+3
  5512     0FBF  0822               	movf	??_fgetc+2,w
  5513     0FC0  0084               	movwf	4
  5514     0FC1  1783               	bsf	3,7
  5515     0FC2  1C23               	btfss	??_fgetc+3,0
  5516     0FC3  1383               	bcf	3,7
  5517     0FC4  0800               	movf	0,w
  5518     0FC5  0720               	addwf	??_fgetc,w
  5519     0FC6  00A5               	movwf	??_fgetc+5
  5520     0FC7  0821               	movf	??_fgetc+1,w
  5521     0FC8  00A4               	movwf	??_fgetc+4
  5522     0FC9  1803               	skipnc
  5523     0FCA  0AA4               	incf	??_fgetc+4,f
  5524     0FCB  1F80               	btfss	0,7
  5525     0FCC  2FCE               	goto	u1600
  5526     0FCD  03A4               	decf	??_fgetc+4,f
  5527     0FCE                     u1600:
  5528     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5529     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5530     0FD0  0824               	movf	??_fgetc+4,w
  5531     0FD1  00A6               	movwf	??_fgetc+6
  5532     0FD2  0825               	movf	??_fgetc+5,w
  5533     0FD3  0084               	movwf	4
  5534     0FD4  1783               	bsf	3,7
  5535     0FD5  1C26               	btfss	??_fgetc+6,0
  5536     0FD6  1383               	bcf	3,7
  5537     0FD7  0800               	movf	0,w
  5538     0FD8  00A7               	movwf	??_fgetc+7
  5539     0FD9  01A8               	clrf	??_fgetc+8
  5540     0FDA  0827               	movf	??_fgetc+7,w
  5541     0FDB  00F6               	movwf	fgetc@c
  5542     0FDC  0828               	movf	??_fgetc+8,w
  5543     0FDD  00F7               	movwf	fgetc@c+1
  5544     0FDE                     l1871:
  5545     0FDE  0876               	movf	fgetc@c,w
  5546     0FDF  0477               	iorwf	fgetc@c+1,w
  5547     0FE0  1D03               	btfss	3,2
  5548     0FE1  2FE3               	goto	u1611
  5549     0FE2  2FE4               	goto	u1610
  5550     0FE3                     u1611:
  5551     0FE3  2FE9               	goto	l1875
  5552     0FE4                     u1610:
  5553     0FE4                     l1873:
  5554     0FE4  30FF               	movlw	255
  5555     0FE5  00F6               	movwf	fgetc@c
  5556     0FE6  30FF               	movlw	255
  5557     0FE7  00F7               	movwf	fgetc@c+1
  5558     0FE8  2FFB               	goto	l1877
  5559     0FE9                     l1875:
  5560     0FE9  0874               	movf	fgetc@fp,w
  5561     0FEA  3E02               	addlw	2
  5562     0FEB  00A0               	movwf	??_fgetc
  5563     0FEC  0875               	movf	fgetc@fp+1,w
  5564     0FED  1803               	skipnc
  5565     0FEE  3E01               	addlw	1
  5566     0FEF  3E00               	addlw	0
  5567     0FF0  00A1               	movwf	??_fgetc+1
  5568     0FF1  0820               	movf	??_fgetc,w
  5569     0FF2  0084               	movwf	4
  5570     0FF3  1783               	bsf	3,7
  5571     0FF4  1C21               	btfss	??_fgetc+1,0
  5572     0FF5  1383               	bcf	3,7
  5573     0FF6  3001               	movlw	1
  5574     0FF7  0780               	addwf	0,f
  5575     0FF8  0A84               	incf	4,f
  5576     0FF9  1803               	skipnc
  5577     0FFA  0A80               	incf	0,f
  5578     0FFB                     l1877:
  5579     0FFB  0877               	movf	fgetc@c+1,w
  5580     0FFC  00F5               	movwf	?_fgetc+1
  5581     0FFD  0876               	movf	fgetc@c,w
  5582     0FFE  00F4               	movwf	?_fgetc
  5583     0FFF                     l965:
  5584     0FFF  0008               	return
  5585     1000                     __end_of_fgetc:
  5586                           
  5587                           	psect	text26
  5588     0B25                     __ptext26:	
  5589 ;; *************** function _getch *****************
  5590 ;; Defined at:
  5591 ;;		line 7 in file "D:\App\mplab\pic\sources\c99\common\getch.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    2[COMMON] int 
  5598 ;; Registers used:
  5599 ;;		wreg
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         2       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         2       0       0       0       0
  5609 ;;Total ram usage:        2 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; Hardware stack levels required when called: 1
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_fgetc
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619     0B25                     _getch:	
  5620                           ;psect for function _getch
  5621                           
  5622     0B25                     l1823:	
  5623                           ;incstack = 0
  5624 ;; hardware stack exceeded
  5625                           ; Regs used in _getch: [wreg]
  5626                           
  5627     0B25  30FF               	movlw	255
  5628     0B26  00F2               	movwf	?_getch
  5629     0B27  30FF               	movlw	255
  5630     0B28  00F3               	movwf	?_getch+1
  5631     0B29                     l978:
  5632     0B29  0008               	return
  5633     0B2A                     __end_of_getch:
  5634                           
  5635                           	psect	text27
  5636     0029                     __ptext27:	
  5637 ;; *************** function ___strtoxl *****************
  5638 ;; Defined at:
  5639 ;;		line 7 in file "D:\App\mplab\pic\sources\c99\common\__strtoxl.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  5642 ;;		 -> dbuf(32), 
  5643 ;;  endptr          1    5[BANK0 ] PTR PTR unsigned char 
  5644 ;;		 -> atou@ep(1), 
  5645 ;;  base            2    6[BANK0 ] int 
  5646 ;;  is_signed       1    8[BANK0 ] unsigned char 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  a               4   26[BANK0 ] unsigned long 
  5649 ;;  limit           4   21[BANK0 ] unsigned long 
  5650 ;;  prev_a          4   13[BANK0 ] unsigned long 
  5651 ;;  c               1   31[BANK0 ] unsigned char 
  5652 ;;  cp              1   30[BANK0 ] PTR const unsigned char 
  5653 ;;		 -> dbuf(32), 
  5654 ;;  flags           1   25[BANK0 ] enum E246
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  4    4[BANK0 ] unsigned long 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, btemp1, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5664 ;;      Params:         0       5       0       0       0
  5665 ;;      Locals:         0      19       0       0       0
  5666 ;;      Temps:          0       4       0       0       0
  5667 ;;      Totals:         0      28       0       0       0
  5668 ;;Total ram usage:       28 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 2
  5671 ;; This function calls:
  5672 ;;		___lmul
  5673 ;; This function is called by:
  5674 ;;		_atou
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678     0029                     ___strtoxl:	
  5679                           ;psect for function ___strtoxl
  5680                           
  5681     0029                     l1891:	
  5682                           ;incstack = 0
  5683                           ; Regs used in ___strtoxl: [wreg-fsr0h+status,2+status,0+pclath+btemp1+cstack]
  5684                           
  5685     0029  1283               	bcf	3,5	;RP0=0, select bank0
  5686     002A  1303               	bcf	3,6	;RP1=0, select bank0
  5687     002B  01B9               	clrf	___strtoxl@flags
  5688     002C                     l1893:
  5689     002C  3000               	movlw	0
  5690     002D  00BD               	movwf	___strtoxl@a+3
  5691     002E  3000               	movlw	0
  5692     002F  00BC               	movwf	___strtoxl@a+2
  5693     0030  3000               	movlw	0
  5694     0031  00BB               	movwf	___strtoxl@a+1
  5695     0032  3000               	movlw	0
  5696     0033  00BA               	movwf	___strtoxl@a
  5697     0034                     l1895:
  5698     0034  0824               	movf	___strtoxl@s,w
  5699     0035  00BE               	movwf	___strtoxl@cp
  5700     0036                     l1897:
  5701     0036  0827               	movf	___strtoxl@base+1,w
  5702     0037  3A80               	xorlw	128
  5703     0038  00FF               	movwf	btemp1
  5704     0039  3080               	movlw	128
  5705     003A  027F               	subwf	btemp1,w
  5706     003B  1D03               	skipz
  5707     003C  283F               	goto	u1655
  5708     003D  3025               	movlw	37
  5709     003E  0226               	subwf	___strtoxl@base,w
  5710     003F                     u1655:
  5711     003F  1803               	skipnc
  5712     0040  2842               	goto	u1651
  5713     0041  2843               	goto	u1650
  5714     0042                     u1651:
  5715     0042  284B               	goto	l1901
  5716     0043                     u1650:
  5717     0043                     l1899:
  5718     0043  1283               	bcf	3,5	;RP0=0, select bank0
  5719     0044  1303               	bcf	3,6	;RP1=0, select bank0
  5720     0045  0326               	decf	___strtoxl@base,w
  5721     0046  0427               	iorwf	___strtoxl@base+1,w
  5722     0047  1D03               	btfss	3,2
  5723     0048  284A               	goto	u1661
  5724     0049  284B               	goto	u1660
  5725     004A                     u1661:
  5726     004A  2852               	goto	l1903
  5727     004B                     u1660:
  5728     004B                     l1901:
  5729     004B  3016               	movlw	22
  5730     004C  1683               	bsf	3,5	;RP0=1, select bank1
  5731     004D  1303               	bcf	3,6	;RP1=0, select bank1
  5732     004E  00A9               	movwf	_errno^(0+128)
  5733     004F  3000               	movlw	0
  5734     0050  00AA               	movwf	(_errno^(0+128)+1)
  5735     0051  2A1B               	goto	l2013
  5736     0052                     l1903:
  5737     0052  083E               	movf	___strtoxl@cp,w
  5738     0053  1903               	btfsc	3,2
  5739     0054  2856               	goto	u1671
  5740     0055  2857               	goto	u1670
  5741     0056                     u1671:
  5742     0056  2A1B               	goto	l2013
  5743     0057                     u1670:
  5744     0057                     l1905:
  5745     0057  083E               	movf	___strtoxl@cp,w
  5746     0058  0084               	movwf	4
  5747     0059  1783               	bsf	3,7	;select IRP bank2
  5748     005A  0800               	movf	0,w
  5749     005B  1D03               	btfss	3,2
  5750     005C  285E               	goto	u1681
  5751     005D  285F               	goto	u1680
  5752     005E                     u1681:
  5753     005E  2860               	goto	l1907
  5754     005F                     u1680:
  5755     005F  2A1B               	goto	l2013
  5756     0060                     l1907:
  5757     0060  083E               	movf	___strtoxl@cp,w
  5758     0061  0084               	movwf	4
  5759     0062  0800               	movf	0,w
  5760     0063  00BF               	movwf	___strtoxl@c
  5761     0064  286B               	goto	l1911
  5762     0065                     l1909:
  5763     0065  3001               	movlw	1
  5764     0066  07BE               	addwf	___strtoxl@cp,f
  5765     0067  083E               	movf	___strtoxl@cp,w
  5766     0068  0084               	movwf	4
  5767     0069  0800               	movf	0,w
  5768     006A  00BF               	movwf	___strtoxl@c
  5769     006B                     l1911:
  5770     006B  3020               	movlw	32
  5771     006C  063F               	xorwf	___strtoxl@c,w
  5772     006D  1903               	btfsc	3,2
  5773     006E  2870               	goto	u1691
  5774     006F  2871               	goto	u1690
  5775     0070                     u1691:
  5776     0070  2865               	goto	l1909
  5777     0071                     u1690:
  5778     0071                     l1913:
  5779     0071  30F7               	movlw	247
  5780     0072  073F               	addwf	___strtoxl@c,w
  5781     0073  00A9               	movwf	??___strtoxl
  5782     0074  3005               	movlw	5
  5783     0075  0229               	subwf	??___strtoxl,w
  5784     0076  1C03               	skipc
  5785     0077  2879               	goto	u1701
  5786     0078  287A               	goto	u1700
  5787     0079                     u1701:
  5788     0079  2865               	goto	l1909
  5789     007A                     u1700:
  5790     007A                     l1915:
  5791     007A  302D               	movlw	45
  5792     007B  063F               	xorwf	___strtoxl@c,w
  5793     007C  1D03               	btfss	3,2
  5794     007D  287F               	goto	u1711
  5795     007E  2880               	goto	u1710
  5796     007F                     u1711:
  5797     007F  2889               	goto	l1921
  5798     0080                     u1710:
  5799     0080                     l1917:
  5800     0080  3001               	movlw	1
  5801     0081  00B9               	movwf	___strtoxl@flags
  5802     0082                     l1919:
  5803     0082  3001               	movlw	1
  5804     0083  07BE               	addwf	___strtoxl@cp,f
  5805     0084  083E               	movf	___strtoxl@cp,w
  5806     0085  0084               	movwf	4
  5807     0086  0800               	movf	0,w
  5808     0087  00BF               	movwf	___strtoxl@c
  5809     0088  2890               	goto	l1925
  5810     0089                     l1921:
  5811     0089  302B               	movlw	43
  5812     008A  063F               	xorwf	___strtoxl@c,w
  5813     008B  1D03               	btfss	3,2
  5814     008C  288E               	goto	u1721
  5815     008D  288F               	goto	u1720
  5816     008E                     u1721:
  5817     008E  2890               	goto	l1925
  5818     008F                     u1720:
  5819     008F  2882               	goto	l1919
  5820     0090                     l1925:
  5821     0090  3030               	movlw	48
  5822     0091  063F               	xorwf	___strtoxl@c,w
  5823     0092  1D03               	btfss	3,2
  5824     0093  2895               	goto	u1731
  5825     0094  2896               	goto	u1730
  5826     0095                     u1731:
  5827     0095  2911               	goto	l1961
  5828     0096                     u1730:
  5829     0096                     l1927:
  5830     0096  3001               	movlw	1
  5831     0097  07BE               	addwf	___strtoxl@cp,f
  5832     0098  083E               	movf	___strtoxl@cp,w
  5833     0099  0084               	movwf	4
  5834     009A  0800               	movf	0,w
  5835     009B  00BF               	movwf	___strtoxl@c
  5836     009C                     l1929:
  5837     009C  0826               	movf	___strtoxl@base,w
  5838     009D  0427               	iorwf	___strtoxl@base+1,w
  5839     009E  1903               	btfsc	3,2
  5840     009F  28A1               	goto	u1741
  5841     00A0  28A2               	goto	u1740
  5842     00A1                     u1741:
  5843     00A1  28A9               	goto	l1933
  5844     00A2                     u1740:
  5845     00A2                     l1931:
  5846     00A2  3010               	movlw	16
  5847     00A3  0626               	xorwf	___strtoxl@base,w
  5848     00A4  0427               	iorwf	___strtoxl@base+1,w
  5849     00A5  1D03               	btfss	3,2
  5850     00A6  28A8               	goto	u1751
  5851     00A7  28A9               	goto	u1750
  5852     00A8                     u1751:
  5853     00A8  2906               	goto	l903
  5854     00A9                     u1750:
  5855     00A9                     l1933:
  5856     00A9  3078               	movlw	120
  5857     00AA  063F               	xorwf	___strtoxl@c,w
  5858     00AB  1903               	btfsc	3,2
  5859     00AC  28AE               	goto	u1761
  5860     00AD  28AF               	goto	u1760
  5861     00AE                     u1761:
  5862     00AE  28B5               	goto	l1937
  5863     00AF                     u1760:
  5864     00AF                     l1935:
  5865     00AF  3058               	movlw	88
  5866     00B0  063F               	xorwf	___strtoxl@c,w
  5867     00B1  1D03               	btfss	3,2
  5868     00B2  28B4               	goto	u1771
  5869     00B3  28B5               	goto	u1770
  5870     00B4                     u1771:
  5871     00B4  2906               	goto	l903
  5872     00B5                     u1770:
  5873     00B5                     l1937:
  5874     00B5  3010               	movlw	16
  5875     00B6  00A6               	movwf	___strtoxl@base
  5876     00B7  3000               	movlw	0
  5877     00B8  00A7               	movwf	___strtoxl@base+1
  5878     00B9                     l1939:
  5879     00B9  3001               	movlw	1
  5880     00BA  07BE               	addwf	___strtoxl@cp,f
  5881     00BB  083E               	movf	___strtoxl@cp,w
  5882     00BC  0084               	movwf	4
  5883     00BD  0800               	movf	0,w
  5884     00BE  00BF               	movwf	___strtoxl@c
  5885     00BF                     l1941:
  5886     00BF  3020               	movlw	32
  5887     00C0  043F               	iorwf	___strtoxl@c,w
  5888     00C1  00A9               	movwf	??___strtoxl
  5889     00C2  309F               	movlw	159
  5890     00C3  0729               	addwf	??___strtoxl,w
  5891     00C4  00AA               	movwf	??___strtoxl+1
  5892     00C5  301A               	movlw	26
  5893     00C6  022A               	subwf	??___strtoxl+1,w
  5894     00C7  1803               	skipnc
  5895     00C8  28CA               	goto	u1781
  5896     00C9  28CB               	goto	u1780
  5897     00CA                     u1781:
  5898     00CA  28ED               	goto	l1951
  5899     00CB                     u1780:
  5900     00CB                     l1943:
  5901     00CB  309F               	movlw	159
  5902     00CC  073F               	addwf	___strtoxl@c,w
  5903     00CD  00A9               	movwf	??___strtoxl
  5904     00CE  301A               	movlw	26
  5905     00CF  0229               	subwf	??___strtoxl,w
  5906     00D0  1C03               	skipc
  5907     00D1  28D3               	goto	u1791
  5908     00D2  28D4               	goto	u1790
  5909     00D3                     u1791:
  5910     00D3  28DC               	goto	l1947
  5911     00D4                     u1790:
  5912     00D4                     l1945:
  5913     00D4  083F               	movf	___strtoxl@c,w
  5914     00D5  00A9               	movwf	??___strtoxl
  5915     00D6  01AA               	clrf	??___strtoxl+1
  5916     00D7  0829               	movf	??___strtoxl,w
  5917     00D8  00B1               	movwf	___strtoxl$1100
  5918     00D9  082A               	movf	??___strtoxl+1,w
  5919     00DA  00B2               	movwf	___strtoxl$1100+1
  5920     00DB  28E4               	goto	l1949
  5921     00DC                     l1947:
  5922     00DC  083F               	movf	___strtoxl@c,w
  5923     00DD  395F               	andlw	95
  5924     00DE  00A9               	movwf	??___strtoxl
  5925     00DF  01AA               	clrf	??___strtoxl+1
  5926     00E0  0829               	movf	??___strtoxl,w
  5927     00E1  00B1               	movwf	___strtoxl$1100
  5928     00E2  082A               	movf	??___strtoxl+1,w
  5929     00E3  00B2               	movwf	___strtoxl$1100+1
  5930     00E4                     l1949:
  5931     00E4  30C9               	movlw	201
  5932     00E5  0731               	addwf	___strtoxl$1100,w
  5933     00E6  00A9               	movwf	??___strtoxl
  5934     00E7  3010               	movlw	16
  5935     00E8  0229               	subwf	??___strtoxl,w
  5936     00E9  1803               	skipnc
  5937     00EA  28EC               	goto	u1801
  5938     00EB  28ED               	goto	u1800
  5939     00EC                     u1801:
  5940     00EC  2902               	goto	l910
  5941     00ED                     u1800:
  5942     00ED                     l1951:
  5943     00ED  3020               	movlw	32
  5944     00EE  043F               	iorwf	___strtoxl@c,w
  5945     00EF  00A9               	movwf	??___strtoxl
  5946     00F0  309F               	movlw	159
  5947     00F1  0729               	addwf	??___strtoxl,w
  5948     00F2  00AA               	movwf	??___strtoxl+1
  5949     00F3  301A               	movlw	26
  5950     00F4  022A               	subwf	??___strtoxl+1,w
  5951     00F5  1C03               	skipc
  5952     00F6  28F8               	goto	u1811
  5953     00F7  28F9               	goto	u1810
  5954     00F8                     u1811:
  5955     00F8  2911               	goto	l1961
  5956     00F9                     u1810:
  5957     00F9                     l1953:
  5958     00F9  30D0               	movlw	208
  5959     00FA  073F               	addwf	___strtoxl@c,w
  5960     00FB  00A9               	movwf	??___strtoxl
  5961     00FC  300A               	movlw	10
  5962     00FD  0229               	subwf	??___strtoxl,w
  5963     00FE  1C03               	skipc
  5964     00FF  2901               	goto	u1821
  5965     0100  2902               	goto	u1820
  5966     0101                     u1821:
  5967     0101  2911               	goto	l1961
  5968     0102                     u1820:
  5969     0102                     l910:
  5970     0102  1539               	bsf	___strtoxl@flags,2
  5971     0103                     l1955:
  5972     0103  3001               	movlw	1
  5973     0104  02BE               	subwf	___strtoxl@cp,f
  5974     0105  2A1B               	goto	l2013
  5975     0106                     l903:
  5976     0106  1539               	bsf	___strtoxl@flags,2
  5977     0107                     l1957:
  5978     0107  0826               	movf	___strtoxl@base,w
  5979     0108  0427               	iorwf	___strtoxl@base+1,w
  5980     0109  1D03               	btfss	3,2
  5981     010A  290C               	goto	u1831
  5982     010B  290D               	goto	u1830
  5983     010C                     u1831:
  5984     010C  2911               	goto	l1961
  5985     010D                     u1830:
  5986     010D                     l1959:
  5987     010D  3008               	movlw	8
  5988     010E  00A6               	movwf	___strtoxl@base
  5989     010F  3000               	movlw	0
  5990     0110  00A7               	movwf	___strtoxl@base+1
  5991     0111                     l1961:
  5992     0111  0826               	movf	___strtoxl@base,w
  5993     0112  0427               	iorwf	___strtoxl@base+1,w
  5994     0113  1D03               	btfss	3,2
  5995     0114  2916               	goto	u1841
  5996     0115  2917               	goto	u1840
  5997     0116                     u1841:
  5998     0116  291B               	goto	l1965
  5999     0117                     u1840:
  6000     0117                     l1963:
  6001     0117  300A               	movlw	10
  6002     0118  00A6               	movwf	___strtoxl@base
  6003     0119  3000               	movlw	0
  6004     011A  00A7               	movwf	___strtoxl@base+1
  6005     011B                     l1965:
  6006     011B  0828               	movf	___strtoxl@is_signed,w
  6007     011C  1903               	btfsc	3,2
  6008     011D  291F               	goto	u1851
  6009     011E  2920               	goto	u1850
  6010     011F                     u1851:
  6011     011F  2936               	goto	l1973
  6012     0120                     u1850:
  6013     0120                     l1967:
  6014     0120  1839               	btfsc	___strtoxl@flags,0
  6015     0121  2923               	goto	u1861
  6016     0122  2924               	goto	u1860
  6017     0123                     u1861:
  6018     0123  292D               	goto	l1971
  6019     0124                     u1860:
  6020     0124                     l1969:
  6021     0124  307F               	movlw	127
  6022     0125  00B8               	movwf	___strtoxl@limit+3
  6023     0126  30FF               	movlw	255
  6024     0127  00B7               	movwf	___strtoxl@limit+2
  6025     0128  30FF               	movlw	255
  6026     0129  00B6               	movwf	___strtoxl@limit+1
  6027     012A  30FF               	movlw	255
  6028     012B  00B5               	movwf	___strtoxl@limit
  6029     012C  293E               	goto	l926
  6030     012D                     l1971:
  6031     012D  3080               	movlw	128
  6032     012E  00B8               	movwf	___strtoxl@limit+3
  6033     012F  3000               	movlw	0
  6034     0130  00B7               	movwf	___strtoxl@limit+2
  6035     0131  3000               	movlw	0
  6036     0132  00B6               	movwf	___strtoxl@limit+1
  6037     0133  3000               	movlw	0
  6038     0134  00B5               	movwf	___strtoxl@limit
  6039     0135  293E               	goto	l926
  6040     0136                     l1973:
  6041     0136  30FF               	movlw	255
  6042     0137  00B8               	movwf	___strtoxl@limit+3
  6043     0138  30FF               	movlw	255
  6044     0139  00B7               	movwf	___strtoxl@limit+2
  6045     013A  30FF               	movlw	255
  6046     013B  00B6               	movwf	___strtoxl@limit+1
  6047     013C  30FF               	movlw	255
  6048     013D  00B5               	movwf	___strtoxl@limit
  6049     013E                     l926:
  6050     013E  083D               	movf	___strtoxl@a+3,w
  6051     013F  00B0               	movwf	___strtoxl@prev_a+3
  6052     0140  083C               	movf	___strtoxl@a+2,w
  6053     0141  00AF               	movwf	___strtoxl@prev_a+2
  6054     0142  083B               	movf	___strtoxl@a+1,w
  6055     0143  00AE               	movwf	___strtoxl@prev_a+1
  6056     0144  083A               	movf	___strtoxl@a,w
  6057     0145  00AD               	movwf	___strtoxl@prev_a
  6058     0146                     l1975:
  6059     0146  3020               	movlw	32
  6060     0147  043F               	iorwf	___strtoxl@c,w
  6061     0148  00A9               	movwf	??___strtoxl
  6062     0149  309F               	movlw	159
  6063     014A  0729               	addwf	??___strtoxl,w
  6064     014B  00AA               	movwf	??___strtoxl+1
  6065     014C  301A               	movlw	26
  6066     014D  022A               	subwf	??___strtoxl+1,w
  6067     014E  1803               	skipnc
  6068     014F  2951               	goto	u1871
  6069     0150  2952               	goto	u1870
  6070     0151                     u1871:
  6071     0151  296F               	goto	l1985
  6072     0152                     u1870:
  6073     0152                     l1977:
  6074     0152  309F               	movlw	159
  6075     0153  073F               	addwf	___strtoxl@c,w
  6076     0154  00A9               	movwf	??___strtoxl
  6077     0155  301A               	movlw	26
  6078     0156  0229               	subwf	??___strtoxl,w
  6079     0157  1C03               	skipc
  6080     0158  295A               	goto	u1881
  6081     0159  295B               	goto	u1880
  6082     015A                     u1881:
  6083     015A  2963               	goto	l1981
  6084     015B                     u1880:
  6085     015B                     l1979:
  6086     015B  083F               	movf	___strtoxl@c,w
  6087     015C  00A9               	movwf	??___strtoxl
  6088     015D  01AA               	clrf	??___strtoxl+1
  6089     015E  0829               	movf	??___strtoxl,w
  6090     015F  00B3               	movwf	___strtoxl$1101
  6091     0160  082A               	movf	??___strtoxl+1,w
  6092     0161  00B4               	movwf	___strtoxl$1101+1
  6093     0162  296B               	goto	l1983
  6094     0163                     l1981:
  6095     0163  083F               	movf	___strtoxl@c,w
  6096     0164  395F               	andlw	95
  6097     0165  00A9               	movwf	??___strtoxl
  6098     0166  01AA               	clrf	??___strtoxl+1
  6099     0167  0829               	movf	??___strtoxl,w
  6100     0168  00B3               	movwf	___strtoxl$1101
  6101     0169  082A               	movf	??___strtoxl+1,w
  6102     016A  00B4               	movwf	___strtoxl$1101+1
  6103     016B                     l1983:
  6104     016B  0833               	movf	___strtoxl$1101,w
  6105     016C  3EC9               	addlw	201
  6106     016D  00BF               	movwf	___strtoxl@c
  6107     016E  297A               	goto	l1989
  6108     016F                     l1985:
  6109     016F  30D0               	movlw	208
  6110     0170  073F               	addwf	___strtoxl@c,w
  6111     0171  00A9               	movwf	??___strtoxl
  6112     0172  300A               	movlw	10
  6113     0173  0229               	subwf	??___strtoxl,w
  6114     0174  1803               	skipnc
  6115     0175  2977               	goto	u1891
  6116     0176  2978               	goto	u1890
  6117     0177                     u1891:
  6118     0177  2A06               	goto	l2009
  6119     0178                     u1890:
  6120     0178                     l1987:
  6121     0178  3030               	movlw	48
  6122     0179  02BF               	subwf	___strtoxl@c,f
  6123     017A                     l1989:
  6124     017A  0827               	movf	___strtoxl@base+1,w
  6125     017B  3A80               	xorlw	128
  6126     017C  3C80               	sublw	128
  6127     017D  1D03               	skipz
  6128     017E  2981               	goto	u1905
  6129     017F  0826               	movf	___strtoxl@base,w
  6130     0180  023F               	subwf	___strtoxl@c,w
  6131     0181                     u1905:
  6132     0181  1C03               	skipc
  6133     0182  2984               	goto	u1901
  6134     0183  2985               	goto	u1900
  6135     0184                     u1901:
  6136     0184  2986               	goto	l936
  6137     0185                     u1900:
  6138     0185  2A06               	goto	l2009
  6139     0186                     l936:
  6140     0186  1283               	bcf	3,5	;RP0=0, select bank0
  6141     0187  1303               	bcf	3,6	;RP1=0, select bank0
  6142     0188  18B9               	btfsc	___strtoxl@flags,1
  6143     0189  298B               	goto	u1911
  6144     018A  298C               	goto	u1910
  6145     018B                     u1911:
  6146     018B  29FD               	goto	l2005
  6147     018C                     u1910:
  6148     018C                     l1993:
  6149     018C  083F               	movf	___strtoxl@c,w
  6150     018D  00A9               	movwf	??___strtoxl
  6151     018E  01AA               	clrf	??___strtoxl+1
  6152     018F  01AB               	clrf	??___strtoxl+2
  6153     0190  01AC               	clrf	??___strtoxl+3
  6154     0191  0826               	movf	___strtoxl@base,w
  6155     0192  00F2               	movwf	___lmul@multiplier
  6156     0193  0827               	movf	___strtoxl@base+1,w
  6157     0194  00F3               	movwf	___lmul@multiplier+1
  6158     0195  3000               	movlw	0
  6159     0196  1BF3               	btfsc	___lmul@multiplier+1,7
  6160     0197  30FF               	movlw	255
  6161     0198  00F4               	movwf	___lmul@multiplier+2
  6162     0199  00F5               	movwf	___lmul@multiplier+3
  6163     019A  083D               	movf	___strtoxl@a+3,w
  6164     019B  00F9               	movwf	___lmul@multiplicand+3
  6165     019C  083C               	movf	___strtoxl@a+2,w
  6166     019D  00F8               	movwf	___lmul@multiplicand+2
  6167     019E  083B               	movf	___strtoxl@a+1,w
  6168     019F  00F7               	movwf	___lmul@multiplicand+1
  6169     01A0  083A               	movf	___strtoxl@a,w
  6170     01A1  00F6               	movwf	___lmul@multiplicand
  6171     01A2  120A  158A  252D  120A  118A  	fcall	___lmul
  6172     01A7  0872               	movf	?___lmul,w
  6173     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6174     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  6175     01AA  07A9               	addwf	??___strtoxl,f
  6176     01AB  0873               	movf	?___lmul+1,w
  6177     01AC  1803               	skipnc
  6178     01AD  0F73               	incfsz	?___lmul+1,w
  6179     01AE  29B0               	goto	u1920
  6180     01AF  29B1               	goto	u1921
  6181     01B0                     u1920:
  6182     01B0  07AA               	addwf	??___strtoxl+1,f
  6183     01B1                     u1921:
  6184     01B1  0874               	movf	?___lmul+2,w
  6185     01B2  1803               	skipnc
  6186     01B3  0F74               	incfsz	?___lmul+2,w
  6187     01B4  29B6               	goto	u1922
  6188     01B5  29B7               	goto	u1923
  6189     01B6                     u1922:
  6190     01B6  07AB               	addwf	??___strtoxl+2,f
  6191     01B7                     u1923:
  6192     01B7  0875               	movf	?___lmul+3,w
  6193     01B8  1803               	skipnc
  6194     01B9  0A75               	incf	?___lmul+3,w
  6195     01BA  07AC               	addwf	??___strtoxl+3,f
  6196     01BB  082C               	movf	??___strtoxl+3,w
  6197     01BC  00BD               	movwf	___strtoxl@a+3
  6198     01BD  082B               	movf	??___strtoxl+2,w
  6199     01BE  00BC               	movwf	___strtoxl@a+2
  6200     01BF  082A               	movf	??___strtoxl+1,w
  6201     01C0  00BB               	movwf	___strtoxl@a+1
  6202     01C1  0829               	movf	??___strtoxl,w
  6203     01C2  00BA               	movwf	___strtoxl@a
  6204     01C3                     l1995:
  6205     01C3  0830               	movf	___strtoxl@prev_a+3,w
  6206     01C4  023D               	subwf	___strtoxl@a+3,w
  6207     01C5  1D03               	skipz
  6208     01C6  29D1               	goto	u1935
  6209     01C7  082F               	movf	___strtoxl@prev_a+2,w
  6210     01C8  023C               	subwf	___strtoxl@a+2,w
  6211     01C9  1D03               	skipz
  6212     01CA  29D1               	goto	u1935
  6213     01CB  082E               	movf	___strtoxl@prev_a+1,w
  6214     01CC  023B               	subwf	___strtoxl@a+1,w
  6215     01CD  1D03               	skipz
  6216     01CE  29D1               	goto	u1935
  6217     01CF  082D               	movf	___strtoxl@prev_a,w
  6218     01D0  023A               	subwf	___strtoxl@a,w
  6219     01D1                     u1935:
  6220     01D1  1C03               	skipc
  6221     01D2  29D4               	goto	u1931
  6222     01D3  29D5               	goto	u1930
  6223     01D4                     u1931:
  6224     01D4  29EC               	goto	l2001
  6225     01D5                     u1930:
  6226     01D5                     l1997:
  6227     01D5  0828               	movf	___strtoxl@is_signed,w
  6228     01D6  1903               	btfsc	3,2
  6229     01D7  29D9               	goto	u1941
  6230     01D8  29DA               	goto	u1940
  6231     01D9                     u1941:
  6232     01D9  29FD               	goto	l2005
  6233     01DA                     u1940:
  6234     01DA                     l1999:
  6235     01DA  083D               	movf	___strtoxl@a+3,w
  6236     01DB  0238               	subwf	___strtoxl@limit+3,w
  6237     01DC  1D03               	skipz
  6238     01DD  29E8               	goto	u1955
  6239     01DE  083C               	movf	___strtoxl@a+2,w
  6240     01DF  0237               	subwf	___strtoxl@limit+2,w
  6241     01E0  1D03               	skipz
  6242     01E1  29E8               	goto	u1955
  6243     01E2  083B               	movf	___strtoxl@a+1,w
  6244     01E3  0236               	subwf	___strtoxl@limit+1,w
  6245     01E4  1D03               	skipz
  6246     01E5  29E8               	goto	u1955
  6247     01E6  083A               	movf	___strtoxl@a,w
  6248     01E7  0235               	subwf	___strtoxl@limit,w
  6249     01E8                     u1955:
  6250     01E8  1803               	skipnc
  6251     01E9  29EB               	goto	u1951
  6252     01EA  29EC               	goto	u1950
  6253     01EB                     u1951:
  6254     01EB  29FD               	goto	l2005
  6255     01EC                     u1950:
  6256     01EC                     l2001:
  6257     01EC  0838               	movf	___strtoxl@limit+3,w
  6258     01ED  00BD               	movwf	___strtoxl@a+3
  6259     01EE  0837               	movf	___strtoxl@limit+2,w
  6260     01EF  00BC               	movwf	___strtoxl@a+2
  6261     01F0  0836               	movf	___strtoxl@limit+1,w
  6262     01F1  00BB               	movwf	___strtoxl@a+1
  6263     01F2  0835               	movf	___strtoxl@limit,w
  6264     01F3  00BA               	movwf	___strtoxl@a
  6265     01F4  3022               	movlw	34
  6266     01F5  1683               	bsf	3,5	;RP0=1, select bank1
  6267     01F6  1303               	bcf	3,6	;RP1=0, select bank1
  6268     01F7  00A9               	movwf	_errno^(0+128)
  6269     01F8  3000               	movlw	0
  6270     01F9  00AA               	movwf	(_errno^(0+128)+1)
  6271     01FA                     l2003:
  6272     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  6273     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  6274     01FC  14B9               	bsf	___strtoxl@flags,1
  6275     01FD                     l2005:
  6276     01FD  3001               	movlw	1
  6277     01FE  07BE               	addwf	___strtoxl@cp,f
  6278     01FF  083E               	movf	___strtoxl@cp,w
  6279     0200  0084               	movwf	4
  6280     0201  1783               	bsf	3,7	;select IRP bank2
  6281     0202  0800               	movf	0,w
  6282     0203  00BF               	movwf	___strtoxl@c
  6283     0204                     l2007:
  6284     0204  1539               	bsf	___strtoxl@flags,2
  6285     0205  293E               	goto	l926
  6286     0206                     l2009:
  6287     0206  3003               	movlw	3
  6288     0207  1283               	bcf	3,5	;RP0=0, select bank0
  6289     0208  1303               	bcf	3,6	;RP1=0, select bank0
  6290     0209  0539               	andwf	___strtoxl@flags,w
  6291     020A  00A9               	movwf	??___strtoxl
  6292     020B  0329               	decf	??___strtoxl,w
  6293     020C  1D03               	btfss	3,2
  6294     020D  2A0F               	goto	u1961
  6295     020E  2A10               	goto	u1960
  6296     020F                     u1961:
  6297     020F  2A1B               	goto	l2013
  6298     0210                     u1960:
  6299     0210                     l2011:
  6300     0210  09BA               	comf	___strtoxl@a,f
  6301     0211  09BB               	comf	___strtoxl@a+1,f
  6302     0212  09BC               	comf	___strtoxl@a+2,f
  6303     0213  09BD               	comf	___strtoxl@a+3,f
  6304     0214  0ABA               	incf	___strtoxl@a,f
  6305     0215  1903               	skipnz
  6306     0216  0ABB               	incf	___strtoxl@a+1,f
  6307     0217  1903               	skipnz
  6308     0218  0ABC               	incf	___strtoxl@a+2,f
  6309     0219  1903               	skipnz
  6310     021A  0ABD               	incf	___strtoxl@a+3,f
  6311     021B                     l2013:
  6312     021B  1283               	bcf	3,5	;RP0=0, select bank0
  6313     021C  0825               	movf	___strtoxl@endptr,w
  6314     021D  1903               	btfsc	3,2
  6315     021E  2A20               	goto	u1971
  6316     021F  2A21               	goto	u1970
  6317     0220                     u1971:
  6318     0220  2A2C               	goto	l2021
  6319     0221                     u1970:
  6320     0221                     l2015:
  6321     0221  1939               	btfsc	___strtoxl@flags,2
  6322     0222  2A24               	goto	u1981
  6323     0223  2A25               	goto	u1980
  6324     0224                     u1981:
  6325     0224  2A27               	goto	l2019
  6326     0225                     u1980:
  6327     0225                     l2017:
  6328     0225  0824               	movf	___strtoxl@s,w
  6329     0226  00BE               	movwf	___strtoxl@cp
  6330     0227                     l2019:
  6331     0227  0825               	movf	___strtoxl@endptr,w
  6332     0228  0084               	movwf	4
  6333     0229  083E               	movf	___strtoxl@cp,w
  6334     022A  1383               	bcf	3,7	;select IRP bank0
  6335     022B  0080               	movwf	0
  6336     022C                     l2021:
  6337     022C  083D               	movf	___strtoxl@a+3,w
  6338     022D  00A7               	movwf	?___strtoxl+3
  6339     022E  083C               	movf	___strtoxl@a+2,w
  6340     022F  00A6               	movwf	?___strtoxl+2
  6341     0230  083B               	movf	___strtoxl@a+1,w
  6342     0231  00A5               	movwf	?___strtoxl+1
  6343     0232  083A               	movf	___strtoxl@a,w
  6344     0233  00A4               	movwf	?___strtoxl
  6345     0234                     l944:
  6346     0234  0008               	return
  6347     0235                     __end_of___strtoxl:
  6348                           
  6349                           	psect	text28
  6350     0D2D                     __ptext28:	
  6351 ;; *************** function ___lmul *****************
  6352 ;; Defined at:
  6353 ;;		line 15 in file "D:\App\mplab\pic\sources\c99\common\Umul32.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  multiplier      4    2[COMMON] unsigned long 
  6356 ;;  multiplicand    4    6[COMMON] unsigned long 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  product         4    0[BANK0 ] unsigned long 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  4    2[COMMON] unsigned long 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6368 ;;      Params:         8       0       0       0       0
  6369 ;;      Locals:         0       4       0       0       0
  6370 ;;      Temps:          1       0       0       0       0
  6371 ;;      Totals:         9       4       0       0       0
  6372 ;;Total ram usage:       13 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		___strtoxl
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382     0D2D                     ___lmul:	
  6383                           ;psect for function ___lmul
  6384                           
  6385     0D2D                     l1827:	
  6386                           ;incstack = 0
  6387                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6388                           
  6389     0D2D  3000               	movlw	0
  6390     0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  6391     0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  6392     0D30  00A3               	movwf	___lmul@product+3
  6393     0D31  3000               	movlw	0
  6394     0D32  00A2               	movwf	___lmul@product+2
  6395     0D33  3000               	movlw	0
  6396     0D34  00A1               	movwf	___lmul@product+1
  6397     0D35  3000               	movlw	0
  6398     0D36  00A0               	movwf	___lmul@product
  6399     0D37                     l1829:
  6400     0D37  1C72               	btfss	___lmul@multiplier,0
  6401     0D38  2D3A               	goto	u1471
  6402     0D39  2D3B               	goto	u1470
  6403     0D3A                     u1471:
  6404     0D3A  2D54               	goto	l1833
  6405     0D3B                     u1470:
  6406     0D3B                     l1831:
  6407     0D3B  0876               	movf	___lmul@multiplicand,w
  6408     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  6409     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  6410     0D3E  07A0               	addwf	___lmul@product,f
  6411     0D3F  0877               	movf	___lmul@multiplicand+1,w
  6412     0D40  1103               	clrz
  6413     0D41  1803               	skipnc
  6414     0D42  3E01               	addlw	1
  6415     0D43  1903               	skipnz
  6416     0D44  2D46               	goto	u1481
  6417     0D45  07A1               	addwf	___lmul@product+1,f
  6418     0D46                     u1481:
  6419     0D46  0878               	movf	___lmul@multiplicand+2,w
  6420     0D47  1103               	clrz
  6421     0D48  1803               	skipnc
  6422     0D49  3E01               	addlw	1
  6423     0D4A  1903               	skipnz
  6424     0D4B  2D4D               	goto	u1482
  6425     0D4C  07A2               	addwf	___lmul@product+2,f
  6426     0D4D                     u1482:
  6427     0D4D  0879               	movf	___lmul@multiplicand+3,w
  6428     0D4E  1103               	clrz
  6429     0D4F  1803               	skipnc
  6430     0D50  3E01               	addlw	1
  6431     0D51  1903               	skipnz
  6432     0D52  2D54               	goto	u1483
  6433     0D53  07A3               	addwf	___lmul@product+3,f
  6434     0D54                     u1483:
  6435     0D54                     l1833:
  6436     0D54  3001               	movlw	1
  6437     0D55  00FA               	movwf	??___lmul
  6438     0D56                     u1495:
  6439     0D56  1003               	clrc
  6440     0D57  0DF6               	rlf	___lmul@multiplicand,f
  6441     0D58  0DF7               	rlf	___lmul@multiplicand+1,f
  6442     0D59  0DF8               	rlf	___lmul@multiplicand+2,f
  6443     0D5A  0DF9               	rlf	___lmul@multiplicand+3,f
  6444     0D5B  0BFA               	decfsz	??___lmul,f
  6445     0D5C  2D56               	goto	u1495
  6446     0D5D                     l1835:
  6447     0D5D  3001               	movlw	1
  6448     0D5E                     u1505:
  6449     0D5E  1003               	clrc
  6450     0D5F  0CF5               	rrf	___lmul@multiplier+3,f
  6451     0D60  0CF4               	rrf	___lmul@multiplier+2,f
  6452     0D61  0CF3               	rrf	___lmul@multiplier+1,f
  6453     0D62  0CF2               	rrf	___lmul@multiplier,f
  6454     0D63  3EFF               	addlw	-1
  6455     0D64  1D03               	skipz
  6456     0D65  2D5E               	goto	u1505
  6457     0D66  0875               	movf	___lmul@multiplier+3,w
  6458     0D67  0474               	iorwf	___lmul@multiplier+2,w
  6459     0D68  0473               	iorwf	___lmul@multiplier+1,w
  6460     0D69  0472               	iorwf	___lmul@multiplier,w
  6461     0D6A  1D03               	skipz
  6462     0D6B  2D6D               	goto	u1511
  6463     0D6C  2D6E               	goto	u1510
  6464     0D6D                     u1511:
  6465     0D6D  2D37               	goto	l1829
  6466     0D6E                     u1510:
  6467     0D6E                     l1837:
  6468     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  6469     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  6470     0D70  0823               	movf	___lmul@product+3,w
  6471     0D71  00F5               	movwf	?___lmul+3
  6472     0D72  0822               	movf	___lmul@product+2,w
  6473     0D73  00F4               	movwf	?___lmul+2
  6474     0D74  0821               	movf	___lmul@product+1,w
  6475     0D75  00F3               	movwf	?___lmul+1
  6476     0D76  0820               	movf	___lmul@product,w
  6477     0D77  00F2               	movwf	?___lmul
  6478     0D78                     l349:
  6479     0D78  0008               	return
  6480     0D79                     __end_of___lmul:
  6481                           
  6482                           	psect	text29
  6483     0B43                     __ptext29:	
  6484 ;; *************** function _UART_Read *****************
  6485 ;; Defined at:
  6486 ;;		line 30 in file "esp32_uart.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      unsigned char 
  6493 ;; Registers used:
  6494 ;;		wreg
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6500 ;;      Params:         0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used: 1
  6506 ;; Hardware stack levels required when called: 1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_ESP32_UART_Update
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514     0B43                     _UART_Read:	
  6515                           ;psect for function _UART_Read
  6516                           
  6517     0B43                     l2407:	
  6518                           ;incstack = 0
  6519                           ; Regs used in _UART_Read: [wreg]
  6520                           
  6521     0B43                     l233:	
  6522                           ;esp32_uart.c: 31:     while (!RCIF);
  6523                           
  6524     0B43  1283               	bcf	3,5	;RP0=0, select bank0
  6525     0B44  1303               	bcf	3,6	;RP1=0, select bank0
  6526     0B45  1E8C               	btfss	12,5	;volatile
  6527     0B46  2B48               	goto	u2651
  6528     0B47  2B49               	goto	u2650
  6529     0B48                     u2651:
  6530     0B48  2B43               	goto	l233
  6531     0B49                     u2650:
  6532     0B49                     l2409:
  6533                           
  6534                           ;esp32_uart.c: 32:     return RCREG;
  6535     0B49  081A               	movf	26,w	;volatile
  6536     0B4A                     l236:
  6537     0B4A  0008               	return
  6538     0B4B                     __end_of_UART_Read:
  6539                           
  6540                           	psect	text30
  6541     0B2F                     __ptext30:	
  6542 ;; *************** function _UART_DataReady *****************
  6543 ;; Defined at:
  6544 ;;		line 26 in file "esp32_uart.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      unsigned char 
  6551 ;; Registers used:
  6552 ;;		wreg
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6558 ;;      Params:         0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0
  6561 ;;      Totals:         0       0       0       0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 1
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_ESP32_UART_Update
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572     0B2F                     _UART_DataReady:	
  6573                           ;psect for function _UART_DataReady
  6574                           
  6575     0B2F                     l2403:	
  6576                           ;incstack = 0
  6577                           ; Regs used in _UART_DataReady: [wreg]
  6578                           
  6579                           
  6580                           ;esp32_uart.c: 27:     return RCIF;
  6581     0B2F  3000               	movlw	0
  6582     0B30  1283               	bcf	3,5	;RP0=0, select bank0
  6583     0B31  1303               	bcf	3,6	;RP1=0, select bank0
  6584     0B32  1A8C               	btfsc	12,5	;volatile
  6585     0B33  3001               	movlw	1
  6586     0B34                     l230:
  6587     0B34  0008               	return
  6588     0B35                     __end_of_UART_DataReady:
  6589                           
  6590                           	psect	text31
  6591     0BDE                     __ptext31:	
  6592 ;; *************** function _ESP32_UART_Init *****************
  6593 ;; Defined at:
  6594 ;;		line 9 in file "esp32_uart.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		None
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6608 ;;      Params:         0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0
  6611 ;;      Totals:         0       0       0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622     0BDE                     _ESP32_UART_Init:	
  6623                           ;psect for function _ESP32_UART_Init
  6624                           
  6625     0BDE                     l2513:	
  6626                           ;incstack = 0
  6627                           ; Regs used in _ESP32_UART_Init: []
  6628                           
  6629                           
  6630                           ;esp32_uart.c: 10:     TRISC6 = 0;
  6631     0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  6632     0BDF  1303               	bcf	3,6	;RP1=0, select bank1
  6633     0BE0  1307               	bcf	7,6	;volatile
  6634                           
  6635                           ;esp32_uart.c: 11:     TRISC7 = 1;
  6636     0BE1  1787               	bsf	7,7	;volatile
  6637                           
  6638                           ;esp32_uart.c: 12:     SPBRG = 129;
  6639     0BE2  3081               	movlw	129
  6640     0BE3  0099               	movwf	25	;volatile
  6641                           
  6642                           ;esp32_uart.c: 13:     BRGH = 1;
  6643     0BE4  1518               	bsf	24,2	;volatile
  6644                           
  6645                           ;esp32_uart.c: 14:     SYNC = 0;
  6646     0BE5  1218               	bcf	24,4	;volatile
  6647                           
  6648                           ;esp32_uart.c: 15:     SPEN = 1;
  6649     0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  6650     0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  6651     0BE8  1798               	bsf	24,7	;volatile
  6652                           
  6653                           ;esp32_uart.c: 16:     TXEN = 1;
  6654     0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  6655     0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  6656     0BEB  1698               	bsf	24,5	;volatile
  6657                           
  6658                           ;esp32_uart.c: 17:     CREN = 1;
  6659     0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  6660     0BED  1303               	bcf	3,6	;RP1=0, select bank0
  6661     0BEE  1618               	bsf	24,4	;volatile
  6662                           
  6663                           ;esp32_uart.c: 20:     TRISBbits.TRISB4 = 0;
  6664     0BEF  1683               	bsf	3,5	;RP0=1, select bank1
  6665     0BF0  1303               	bcf	3,6	;RP1=0, select bank1
  6666     0BF1  1206               	bcf	6,4	;volatile
  6667                           
  6668                           ;esp32_uart.c: 21:     TRISBbits.TRISB5 = 0;
  6669     0BF2  1286               	bcf	6,5	;volatile
  6670                           
  6671                           ;esp32_uart.c: 22:     PORTBbits.RB4 = 0;
  6672     0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  6673     0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  6674     0BF5  1206               	bcf	6,4	;volatile
  6675                           
  6676                           ;esp32_uart.c: 23:     PORTBbits.RB5 = 0;
  6677     0BF6  1286               	bcf	6,5	;volatile
  6678     0BF7                     l227:
  6679     0BF7  0008               	return
  6680     0BF8                     __end_of_ESP32_UART_Init:
  6681                           
  6682                           	psect	text32
  6683     0B21                     __ptext32:	
  6684 ;; *************** function _ESP32_AllFull *****************
  6685 ;; Defined at:
  6686 ;;		line 65 in file "esp32_uart.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      unsigned char 
  6693 ;; Registers used:
  6694 ;;		wreg
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6700 ;;      Params:         0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used: 1
  6706 ;; Hardware stack levels required when called: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_main
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714     0B21                     _ESP32_AllFull:	
  6715                           ;psect for function _ESP32_AllFull
  6716                           
  6717     0B21                     l2549:	
  6718                           ;incstack = 0
  6719                           ; Regs used in _ESP32_AllFull: [wreg]
  6720                           
  6721                           
  6722                           ;esp32_uart.c: 66:     return all_full;
  6723     0B21  1683               	bsf	3,5	;RP0=1, select bank1
  6724     0B22  1303               	bcf	3,6	;RP1=0, select bank1
  6725     0B23  0830               	movf	_all_full^(0+128),w
  6726     0B24                     l249:
  6727     0B24  0008               	return
  6728     0B25                     __end_of_ESP32_AllFull:
  6729                           
  6730                           	psect	text33
  6731     0BF8                     __ptext33:	
  6732 ;; *************** function _ISR *****************
  6733 ;; Defined at:
  6734 ;;		line 149 in file "main.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6748 ;;      Params:         0       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0
  6750 ;;      Temps:          2       0       0       0       0
  6751 ;;      Totals:         2       0       0       0       0
  6752 ;;Total ram usage:        2 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		Interrupt level 1
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761     0BF8                     _ISR:	
  6762                           ;psect for function _ISR
  6763                           
  6764     0BF8                     i1l2649:
  6765                           
  6766                           ;main.c: 150: 
  6767     0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  6768     0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  6769     0BFA  1C0C               	btfss	12,0	;volatile
  6770     0BFB  2BFD               	goto	u291_21
  6771     0BFC  2BFE               	goto	u291_20
  6772     0BFD                     u291_21:
  6773     0BFD  2C18               	goto	i1l192
  6774     0BFE                     u291_20:
  6775     0BFE                     i1l2651:
  6776                           
  6777                           ;main.c: 151: }
  6778     0BFE  100C               	bcf	12,0	;volatile
  6779     0BFF  30E7               	movlw	231
  6780     0C00  008F               	movwf	15	;volatile
  6781     0C01  3096               	movlw	150
  6782     0C02  008E               	movwf	14	;volatile
  6783     0C03                     i1l2653:
  6784     0C03  1683               	bsf	3,5	;RP0=1, select bank1
  6785     0C04  1303               	bcf	3,6	;RP1=0, select bank1
  6786     0C05  082D               	movf	_servo1_delay_ticks^(0+128),w	;volatile
  6787     0C06  042E               	iorwf	(_servo1_delay_ticks+1)^(0+128),w	;volatile
  6788     0C07  1903               	btfsc	3,2
  6789     0C08  2C0A               	goto	u292_21
  6790     0C09  2C0B               	goto	u292_20
  6791     0C0A                     u292_21:
  6792     0C0A  2C11               	goto	i1l2657
  6793     0C0B                     u292_20:
  6794     0C0B                     i1l2655:
  6795     0C0B  3001               	movlw	1
  6796     0C0C  02AD               	subwf	_servo1_delay_ticks^(0+128),f	;volatile
  6797     0C0D  3000               	movlw	0
  6798     0C0E  1C03               	skipc
  6799     0C0F  03AE               	decf	(_servo1_delay_ticks+1)^(0+128),f	;volatile
  6800     0C10  02AE               	subwf	(_servo1_delay_ticks+1)^(0+128),f	;volatile
  6801     0C11                     i1l2657:
  6802     0C11  0834               	movf	_servo2_delay_ticks^(0+128),w	;volatile
  6803     0C12  1903               	btfsc	3,2
  6804     0C13  2C15               	goto	u293_21
  6805     0C14  2C16               	goto	u293_20
  6806     0C15                     u293_21:
  6807     0C15  2C18               	goto	i1l192
  6808     0C16                     u293_20:
  6809     0C16                     i1l2659:
  6810     0C16  3001               	movlw	1
  6811     0C17  02B4               	subwf	_servo2_delay_ticks^(0+128),f	;volatile
  6812     0C18                     i1l192:
  6813     0C18  0871               	movf	??_ISR+1,w
  6814     0C19  008A               	movwf	10
  6815     0C1A  0E70               	swapf	??_ISR,w
  6816     0C1B  0083               	movwf	3
  6817     0C1C  0EFE               	swapf	btemp,f
  6818     0C1D  0E7E               	swapf	btemp,w
  6819     0C1E  0009               	retfie
  6820     0C1F                     __end_of_ISR:
  6821     0002                     ___latbits      equ	2
  6822     007E                     btemp           set	126	;btemp
  6823     007E                     btemp0          set	126
  6824     007F                     btemp1          set	127
  6825     007E                     wtemp0          set	126
  6826     007F                     wtemp0a         set	127
  6827     007F                     ttemp0a         set	127
  6828     0080                     ltemp0a         set	128
  6829                           
  6830                           	psect	intentry
  6831     0004                     __pintentry:	
  6832                           ;incstack = 0
  6833 ;; hardware stack exceeded
  6834                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6835                           
  6836     0004                     interrupt_function:
  6837     007E                     saved_w         set	btemp
  6838     0004  00FE               	movwf	btemp
  6839     0005  0E03               	swapf	3,w
  6840     0006  00F0               	movwf	??_ISR
  6841     0007  080A               	movf	10,w
  6842     0008  00F1               	movwf	??_ISR+1
  6843     0009  120A  158A  2BF8   	ljmp	_ISR
  6844                           
  6845                           	psect	config
  6846                           
  6847                           ;Config register CONFIG @ 0x2007
  6848                           ;	Oscillator Selection bits
  6849                           ;	FOSC = HS, HS oscillator
  6850                           ;	Watchdog Timer Enable bit
  6851                           ;	WDTE = OFF, WDT disabled
  6852                           ;	Power-up Timer Enable bit
  6853                           ;	PWRTE = OFF, PWRT disabled
  6854                           ;	Brown-out Reset Enable bit
  6855                           ;	BOREN = OFF, BOR disabled
  6856                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6857                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6858                           ;	Data EEPROM Memory Code Protection bit
  6859                           ;	CPD = OFF, Data EEPROM code protection off
  6860                           ;	Flash Program Memory Write Enable bits
  6861                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6862                           ;	In-Circuit Debugger Mode bit
  6863                           ;	DEBUG = 0x1, unprogrammed default
  6864                           ;	Flash Program Memory Code Protection bit
  6865                           ;	CP = OFF, Code protection off
  6866     2007                     	org	8199
  6867     2007  3F3A               	dw	16186

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      80
    BANK1            80     21      62
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    atou@ep	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    atou@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sscanf@f(BANK1[11]), 

    atou@pll	PTR unsigned long  size(1) Largest target is 4
		 -> vfsfcnvrt@llu(BANK0[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sscanf@f(BANK1[11]), 

    fgetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), 

    fgetc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    RFID_ToCard@backData	PTR unsigned char  size(1) Largest target is 2
		 -> RFID_CheckCard@buffer(BANK0[2]), 

    RFID_ToCard@backLen	PTR unsigned short  size(1) Largest target is 2
		 -> RFID_CheckCard@backBits(BANK0[2]), 

    RFID_ToCard@sendData	PTR unsigned char  size(1) Largest target is 2
		 -> RFID_CheckCard@buffer(BANK0[2]), 

    S973$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), 

    S973$source	PTR const unsigned char  size(1) Largest target is 0

    skipws@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sscanf@f(BANK1[11]), 

    sscanf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sscanf(BANK0[2]), 

    sscanf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 

    sscanf@s	PTR const unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), 

    __strtoxl@cp	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(1) Largest target is 1
		 -> atou@ep(BANK0[1]), 

    __strtoxl@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    ungetc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sscanf@f(BANK1[11]), 

    ungetc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), 

    ungetc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    vfscanf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sscanf@ap(BANK1[1]), 

    vfscanf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfscanf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfscanf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sscanf@f(BANK1[11]), 

    vfsfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sscanf@ap(BANK1[1]), 

    vfsfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfscanf@cfmt(BANK0[1]), 

    vfsfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sscanf@f(BANK1[11]), 

    vfsfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ESP32_UART_Update@s1(BANK1[1]), ESP32_UART_Update@s2(BANK1[1]), ESP32_UART_Update@s3(BANK1[1]), ESP32_UART_Update@s4(BANK1[1]), 
		 -> ?_sscanf(BANK0[2]), 


Critical Paths under _main in COMMON

    _RFID_Init->_RFID_Write
    _RFID_CheckCard->_RFID_Write
    _RFID_ToCard->_RFID_Write
    _RFID_Write->_RFID_Read
    _vfsfcnvrt->_skipws
    _atou->_skipws
    _skipws->_ungetc
    _fgetc->_getch
    ___strtoxl->___lmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _RFID_Init->_RFID_Write
    _RFID_CheckCard->_RFID_ToCard
    _RFID_ToCard->_RFID_Write
    _ESP32_UART_Update->_sscanf
    _sscanf->_vfscanf
    _vfscanf->_vfsfcnvrt
    _vfsfcnvrt->_atou
    _atou->___strtoxl
    _skipws->_fgetc
    ___strtoxl->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ESP32_UART_Update
    _ESP32_UART_Update->_sscanf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8655
                                             19 BANK1      2     2      0
                      _ESP32_AllFull
                    _ESP32_UART_Init
                  _ESP32_UART_Update
                    _Interrupts_Init
                     _RFID_CheckCard
                          _RFID_Init
                        _Sensor_Init
                      _Sensor_ReadIR
                _Sensor_ReadObstacle
                       _Servo1_Close
                        _Servo1_Init
                        _Servo1_Open
                       _Servo2_Close
                        _Servo2_Init
                        _Servo2_Open
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo2_Open                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Servo2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo2_Close                                         2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Servo1_Open                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Servo1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo1_Close                                         2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Sensor_ReadObstacle                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Sensor_ReadIR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Sensor_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RFID_Init                                            2     2      0     378
                                              4 BANK0      2     2      0
                          _RFID_Read
                         _RFID_Write
 ---------------------------------------------------------------------------------
 (1) _RFID_CheckCard                                       6     6      0    1350
                                             22 BANK0      6     6      0
                        _RFID_ToCard
                         _RFID_Write
 ---------------------------------------------------------------------------------
 (2) _RFID_ToCard                                         18    14      4     999
                                              4 BANK0     18    14      4
                          _RFID_Read
                         _RFID_Write
 ---------------------------------------------------------------------------------
 (3) _RFID_Write                                           6     5      1     208
                                              8 COMMON     2     1      1
                                              0 BANK0      4     4      0
                          _RFID_Read (ARG)
 ---------------------------------------------------------------------------------
 (3) _RFID_Read                                            6     6      0     170
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESP32_UART_Update                                    5     5      0    6859
                                             14 BANK1      5     5      0
                     _UART_DataReady
                          _UART_Read
                             _sscanf
 ---------------------------------------------------------------------------------
 (2) _sscanf                                              24    14     10    6498
                                             69 BANK0     10     0     10
                                              0 BANK1     14    14      0
                            _vfscanf
 ---------------------------------------------------------------------------------
 (3) _vfscanf                                              9     5      4    6200
                                             60 BANK0      9     5      4
                          _vfsfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfsfcnvrt                                           29    24      5    5803
                                             44 BANK0     16    11      5
                               _atou
                              _fgetc
                             _skipws
                            _strncmp
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              5     1      4     182
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (5) _atou                                                12     9      3    3164
                                             32 BANK0     12     9      3
                          ___strtoxl
                              _fgetc
                             _skipws
                             _ungetc
 ---------------------------------------------------------------------------------
 (6) _skipws                                               5     3      2     564
                                             10 COMMON     1     1      0
                                             10 BANK0      4     2      2
                              _fgetc
                             _ungetc
 ---------------------------------------------------------------------------------
 (7) _ungetc                                               8     4      4     192
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _fgetc                                               14    12      2     208
                                              4 COMMON     4     2      2
                                              0 BANK0     10    10      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) ___strtoxl                                           28    23      5    1451
                                              4 BANK0     28    23      5
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              13     5      8      94
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_DataReady                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESP32_UART_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESP32_AllFull                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESP32_AllFull
   _ESP32_UART_Init
   _ESP32_UART_Update
     _UART_DataReady
     _UART_Read
     _sscanf
       _vfscanf
         _vfsfcnvrt
           _atou
             ___strtoxl
               ___lmul
             _fgetc
               _getch
             _skipws
               _fgetc
               _ungetc
             _ungetc
           _fgetc
           _skipws
           _strncmp
           _ungetc
   _Interrupts_Init
   _RFID_CheckCard
     _RFID_ToCard
       _RFID_Read
       _RFID_Write
         _RFID_Read (ARG)
     _RFID_Write
   _RFID_Init
     _RFID_Read
     _RFID_Write
   _Sensor_Init
   _Sensor_ReadIR
   _Sensor_ReadObstacle
   _Servo1_Close
   _Servo1_Init
   _Servo1_Open
   _Servo2_Close
   _Servo2_Init
   _Servo2_Open
   _Timer1_Init

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     11      12     85.7%
BANK0               80     79      80    100.0%
BANK1               80     21      62     77.5%
BANK3               96      0      32     33.3%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     187      0.0%


Microchip Technology PIC Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Wed Oct 22 23:24:26 2025

                          pc 0002                           l22 0C8F                           l15 0CFE  
                         l24 0CA6                           l25 0CB7                           l17 0D15  
                         l33 07FC                           l18 0D2B                           l27 0CB9  
                         l19 0D2C                           l60 0574                           l38 0C4C  
                         l48 04A9                           l72 0BAB                           l81 0BDD  
                         l75 0B92                           l84 0BC4                           l69 0B3B  
                         l78 0B42                           l95 0B2E                           l98 0B6D  
                         fsr 0004            ??_Interrupts_Init 0072                          l101 0B64  
                        l230 0B34                          l233 0B43                          l162 0B5B  
                        l227 0BF7                          l236 0B4A                          l165 0B79  
                        l246 0EB4                          l249 0B24                          l349 0D78  
                        l910 0102                          l903 0106                          l827 0CF2  
                        l926 013E                          l839 0673                          l944 0234  
                        l936 0186                          l857 041A                          l884 0F32  
                        l965 0FFF                          l982 0DDA                          l798 0C82  
                        l969 0E40                          l978 0B29                          _ISR 0BF8  
                        _idx 00AF                          fsr0 0004                          indf 0000  
              RFID_Read@addr 0073                RFID_Read@data 0075                         ?_ISR 0070  
                       l2001 01EC                         l2011 0210                         l2003 01FA  
                       l2021 022C                         l2005 01FD                         l2013 021B  
                       l2101 0DA0                         l2015 0221                         l2007 0204  
                       l2103 0DAC                         l2017 0225                         l2009 0206  
                       l2105 0DB2                         l3001 0709                         l2019 0227  
                       l2107 0DC6                         l3003 070E                         l3011 071E  
                       l3021 0739                         l3013 0726                         l3005 0715  
                       l3031 074A                         l3023 073A                         l3015 072B  
                       l3007 071A                         l2241 0D0E                         l2225 0CF6  
                       l3041 075D                         l3033 074F                         l3017 0730  
                       l3025 073C                         l2403 0B2F                         l2091 0D87  
                       l2251 0D22                         l2243 0D14                         l2235 0D09  
                       l2227 0CF7                         l2331 0420                         l3035 0754  
                       l3027 0741                         l3019 0735                         l2501 0B53  
                       l2261 0C88                         l2253 0D23                         l2237 0D0B  
                       l2229 0CFD                         l2341 0451                         l2333 0422  
                       l3037 0759                         l3029 0746                         l2407 0B43  
                       l2095 0D8A                         l2271 0C9C                         l2263 0C8E  
                       l2255 0D25                         l2239 0D0C                         l2351 0484  
                       l2343 045F                         l2335 0428                         l2511 0B78  
                       l2503 0B6E                         l3039 075C                         l2513 0BDE  
                       l2409 0B49                         l2097 0D8E                         l2089 0D79  
                       l2273 0C9D                         l2257 0C84                         l2249 0D20  
                       l2353 0492                         l2345 0467                         l2337 042C  
                       l2329 041E                         l2505 0B72                         l2099 0D94  
                       l2291 0CB1                         l2283 0CA8                         l2275 0C9F  
                       l2259 0C85                         l2371 04DE                         l2363 04AE  
                       l2355 0499                         l2347 0474                         l2339 044C  
                       l2451 0C3C                         l2507 0B74                         l1901 004B  
                       l2701 05E3                         l2293 0CB8                         l2285 0CAA  
                       l2277 0CA5                         l2269 0C9A                         l2381 0506  
                       l2373 04E9                         l2357 04A2                         l2365 04BF  
                       l2349 047C                         l2453 0C3D                         l2445 0C1F  
                       l2509 0B76                         l1831 0D3B                         l1911 006B  
                       l1903 0052                         l1823 0B25                         l2703 05E9  
                       l2287 0CAE                         l2391 054C                         l2383 050B  
                       l2375 04EC                         l2367 04C7                         l2455 0C42  
                       l2447 0C27                         l2471 0B7A                         l2463 0B35  
                       l1833 0D54                         l1921 0089                         l1913 0071  
                       l1905 0057                         l1841 0DDB                         l2721 062B  
                       l2705 05F2                         l2289 0CAF                         l2393 054F  
                       l2385 0530                         l2377 04F2                         l2369 04D6  
                       l2457 0C49                         l2449 0C2B                         l2473 0B7D  
                       l2465 0B93                         l2481 0BC8                         l1835 0D5D  
                       l1827 0D2D                         l1931 00A2                         l1915 007A  
                       l1907 0060                         l1851 0DF6                         l2731 066E  
                       l2723 0632                         l2707 05FB                         l2811 0399  
                       l2803 0366                         l2395 055C                         l2387 0544  
                       l2379 0504                         l2459 0C4B                         l2491 0B2A  
                       l2475 0B86                         l2467 0B96                         l2483 0BD1  
                       l2549 0B21                         l1837 0D6E                         l1829 0D37  
                       l1941 00BF                         l1933 00A9                         l1925 0090  
                       l1917 0080                         l1909 0065                         l1861 0F3E  
                       l1853 0DF9                         l1845 0DE4                         l2661 0CBA  
                       l2725 0650                         l2709 0603                         l2717 0611  
                       l2821 03D9                         l2813 03A7                         l2805 0375  
                       l2741 025A                         l2397 0564                         l2389 054A  
                       l2901 078A                         l2493 0B65                         l2469 0B9F  
                       l2485 0BAC                         l2477 0B3C                         l1943 00CB  
                       l1951 00ED                         l1935 00AF                         l1927 0096  
                       l1919 0082                         l1871 0FDE                         l1863 0F48  
                       l1855 0E12                         l1847 0DEA                         l2663 0CBB  
                       l2727 0658                         l2719 0620                         l2671 0575  
                       l2823 03E2                         l2815 03B9                         l2807 0384  
                       l2751 02A9                         l2743 026F                         l2735 0235  
                       l2399 0571                         l2911 07F1                         l2903 0792  
                       l2487 0BAF                         l2479 0BC5                         l1953 00F9  
                       l1945 00D4                         l1937 00B5                         l1929 009C  
                       l1961 0111                         l1873 0FE4                         l1865 0F58  
                       l1857 0F33                         l1849 0DF0                         l2665 0CC2  
                       l2729 0660                         l2681 059C                         l2673 0580  
                       l2833 040E                         l2825 03EA                         l2817 03C1  
                       l2809 0395                         l2761 02C9                         l2753 02AD  
                       l2745 0276                         l2737 0246                         l2921 0E5E  
                       l2913 0E41                         l2905 079E                         l2497 0B5C  
                       l2489 0BB8                         l1971 012D                         l1963 0117  
                       l1955 0103                         l1947 00DC                         l1939 00B9  
                       l1891 0029                         l1875 0FE9                         l1867 0F72  
                       l1859 0F39                         l2667 0CCB                         l2683 05AB  
                       l2675 0588                         l2835 0416                         l2819 03D2  
                       l2827 03F8                         l2763 02DA                         l2747 0287  
                       l2739 024A                         l2851 0EB9                         l2931 0E94  
                       l2923 0E5F                         l2915 0E4B                         l2907 07A9  
                       l1981 0163                         l1973 0136                         l1965 011B  
                       l1957 0107                         l1949 00E4                         l1893 002C  
                       l1869 0FAD                         l1877 0FFB                         l2669 0CD9  
                       l2685 05B3                         l2693 05C9                         l2677 058F  
                       l2781 0338                         l2765 02E7                         l2773 0304  
                       l2749 0294                         l2757 02B4                         l2853 0EBF  
                       l2933 0E99                         l2925 0E83                         l2941 0EA6  
                       l2917 0E53                         l2909 07B4                         l1983 016B  
                       l1975 0146                         l1967 0120                         l1959 010D  
                       l1895 0034                         l2695 05CF                         l2687 05BB  
                       l2679 0599                         l2791 034D                         l2783 0340  
                       l2775 0312                         l2767 02FC                         l2759 02C5  
                       l2871 0F17                         l2863 0EEA                         l2855 0ECA  
                       l2943 0EAC                         l2927 0E8A                         l2935 0EA0  
                       l2919 0E59                         l2951 0679                         l1993 018C  
                       l1977 0152                         l1985 016F                         l1969 0124  
                       l1897 0036                         l2697 05D6                         l2689 05C3  
                       l2793 035A                         l2777 032C                         l2873 0F1F  
                       l2857 0ECE                         l2865 0EF6                         l2849 0EB5  
                       l2881 0C4D                         l2945 0EB2                         l2937 0EA1  
                       l2929 0E8F                         l2961 068E                         l2953 067A  
                       l1995 01C3                         l1987 0178                         l1979 015B  
                       l1899 0043                         l2699 05DD                         l2779 0333  
                       l2867 0F03                         l2859 0EE5                         l2891 0C78  
                       l2883 0C51                         l2939 0EA4                         l2971 06A7  
                       l2963 0693                         l2955 067F                         l2947 0674  
                       l1997 01D5                         l1989 017A                         l2789 0345  
                       l2797 0361                         l2877 0F26                         l2869 0F0D  
                       l2885 0C59                         l2981 06CB                         l2973 06AC  
                       l2965 0698                         l2957 0684                         l2949 0677  
                       l1999 01DA                         l2887 0C5B                         l2895 0767  
                       l2983 06D0                         l2991 06EA                         l2975 06B4  
                       l2967 069D                         l2959 0689                         l2889 0C5D  
                       l2897 0771                         l2993 06F1                         l2985 06DD  
                       l2977 06BE                         l2969 06A2                         l2899 077C  
                       l2995 06FB                         l2987 06E2                         l2979 06C6  
                       l2997 0700                         l2989 06E6                         l2999 0703  
                       STR_1 0806                         STR_4 0816                         _BRGH 04C2  
                       _CREN 00C4                         u3000 05C3                         u3001 05C2  
                       u3010 05CF                         u3011 05CE                         u3100 0666  
                       u3020 05D6                         u2140 0D87                         u3101 0664  
                       u3021 05D5                         u2141 0D86                         u1510 0D6E  
                       u3110 0667                         u3030 05DD                         u2150 0DA0  
                       u1511 0D6D                         u3031 05DC                         u2151 0D9F  
                       u1600 0FCE                         u1520 0DE3                         u3040 05FB  
                       u2160 0DAC                         u3200 0333                         u3120 0246  
                       u2400 0D14                         u1505 0D5E                         u1521 0DE2  
                       u3041 05FA                         u2161 0DAB                         u3201 0332  
                       u3121 0245                         u2401 0D13                         u1610 0FE4  
                       u1530 0DEA                         u3050 0603                         u2170 0DB2  
                       u3210 034D                         u3130 0256                         u2410 0D1D  
                       u1611 0FE3                         u1531 0DE9                         u3051 0602  
                       u2171 0DB1                         u3211 034C                         u3131 0254  
                       u2411 0D19                         u1700 007A                         u1540 0DF0  
                       u3060 0620                         u2180 0DC6                         u3300 0416  
                       u3220 0384                         u3140 0257                         u1701 0079  
                       u1541 0DEF                         u3061 061F                         u2181 0DC5  
                       u3301 0415                         u3221 0383                         u1470 0D3B  
                       u1710 0080                         u1550 0E12                         u3070 062B  
                       u3230 0395                         u3150 026F                         u3310 0EE9  
                       u2430 0D2B                         u1471 0D3A                         u1711 007F  
                       u1551 0E11                         u3071 062A                         u3231 0394  
                       u3151 026E                         u3311 0EE8                         u2431 0D2A  
                       u1800 00ED                         u1720 008F                         u1560 0F39  
                       u3080 0658                         u3240 03A7                         u3160 0294  
                       u3320 0F03                         u3400 0E8F                         u2440 0C97  
                       u2424 0D20                         u2600 04E9                         u1481 0D46  
                       u1801 00EC                         u1721 008E                         u1561 0F38  
                       u3081 0657                         u3065 061C                         u3241 03A6  
                       u3161 0293                         u3321 0F02                         u3401 0E8E  
                       u2441 0C93                         u2601 04E8                         u1482 0D4D  
                       u1810 00F9                         u1730 0096                         u1650 0043  
                       u1570 0F3E                         u3090 0660                         u3250 03B8  
                       u3170 02C5                         u3330 0F17                         u3410 0E94  
                       u2610 04F2                         u2530 0428                         u1483 0D54  
                       u1811 00F8                         u1731 0095                         u1651 0042  
                       u1571 0F3D                         u3091 065F                         u3251 03B7  
                       u3171 02C4                         u3331 0F16                         u3411 0E93  
                       u2611 04F1                         u2531 0427                         u1900 0185  
                       u1820 0102                         u1740 00A2                         u1660 004B  
                       u1580 0F72                         u3260 03D9                         u3180 02E7  
                       u3340 0F1F                         u3420 0E99                         u2460 0CA5  
                       u2380 0D06                         u2620 050B                         u2540 0474  
                       u3500 06FB                         u1901 0184                         u1821 0101  
                       u1741 00A1                         u1661 004A                         u1581 0F71  
                       u3261 03D8                         u3181 02E6                         u3165 0290  
                       u3341 0F1E                         u3421 0E98                         u2461 0CA4  
                       u2381 0D02                         u2621 050A                         u2541 0473  
                       u3501 06FA                         u1910 018C                         u1830 010D  
                       u1750 00A9                         u1670 0057                         u1590 0F9C  
                       u3270 03E2                         u3190 0312                         u3430 0EAC  
                       u2470 0CAE                         u2454 0C9A                         u2630 054A  
                       u2550 0484                         u3350 07B4                         u3510 0715  
                       u1495 0D56                         u1911 018B                         u1831 010C  
                       u1751 00A8                         u1671 0056                         u1655 003F  
                       u3271 03E1                         u3191 0311                         u3431 0EAB  
                       u2471 0CAD                         u2631 0549                         u2551 0483  
                       u3351 07B3                         u3511 0714                         u1920 01B0  
                       u1840 0117                         u1760 00AF                         u1680 005F  
                       u3280 03EA                         u3360 0E4B                         u2480 0CB7  
                       u2640 0571                         u2560 04A8                         u3520 072B  
                       u3440 06B4                         u1921 01B1                         u1905 0181  
                       u1841 0116                         u1761 00AE                         u1681 005E  
                       u3281 03E9                         u3185 02E3                         u3361 0E4A  
                       u2481 0CB6                         u2641 0570                         u2561 04A7  
                       u2545 0470                         u3521 072A                         u3441 06B3  
                       u2650 0B49                         u1930 01D5                         u1922 01B6  
                       u1850 0120                         u1770 00B5                         u1690 0071  
                       u3290 040D                         u3370 0E59                         u2394 0D09  
                       u2570 04AD                         u3530 0730                         u3450 06BE  
                       u2651 0B48                         u1931 01D4                         u1923 01B7  
                       u1851 011F                         u1771 00B4                         u1691 0070  
                       u3291 040C                         u3371 0E58                         u2571 04AC  
                       u3531 072F                         u3451 06BD                         u1940 01DA  
                       u1860 0124                         u1780 00CB                         u3380 0E83  
                       u2580 04C7                         u3540 0741                         u3460 06CB  
                       u1941 01D9                         u1861 0123                         u1781 00CA  
                       u3381 0E82                         u2645 056D                         u2581 04C6  
                       u3541 0740                         u3461 06CA                         u1950 01EC  
                       u1870 0152                         u1790 00D4                         u3390 0E8A  
                       u2590 04DE                         u2670 0C42                         u3550 0746  
                       u3470 06D0                         u1951 01EB                         u1935 01D1  
                       u1871 0151                         u1791 00D3                         u3295 0409  
                       u3391 0E89                         u2591 04DD                         u2671 0C41  
                       u3607 0BB3                         u3551 0745                         u3471 06CF  
                       u1960 0210                         u1880 015B                         u2680 0C49  
                       u3560 074F                         u3480 06DD                         u1961 020F  
                       u1881 015A                         u2681 0C48                         u3617 0BBF  
                       u3561 074E                         u3481 06DC                         u1970 0221  
                       u1890 0178                         u3570 0754                         u3490 06F1  
                       u1971 0220                         u1955 01E8                         u1891 0177  
                       u3707 07F7                         u3627 0B9A                         u3571 0753  
                       u3491 06F0                         u1980 0225                         u2940 0CC2  
                       u1981 0224                         u2941 0CC1                         u3717 04BA  
                       u3637 0BA6                         u3485 06D9                         u2950 0CCB  
                       u2951 0CCA                         u3647 0B81                         u2960 0CF2  
                       u2961 0CF1                         u3657 0B8D                         u2970 0588  
                       u2971 0587                         u3667 0777                         u3587 0BCC  
                       u2980 05B3                         _RCIF 0065                         u2981 05B2  
                       u3677 0785                         u3597 0BD8                         u2990 05BB  
                       u2991 05BA                         u3687 0798                         u3697 07A4  
                       _SPEN 00C7                         _TXEN 04C5                         _SYNC 04C4  
                       _dbuf 0190                         _atou 0575                         _main 0674  
                       _asup 006F                         _ncnv 00A5                         btemp 007E  
             RFID_Read@i_140 0077                         start 000C                  ?_RFID_Write 0078  
         _servo2_delay_ticks 00B4                        ??_ISR 0070                        ?_atou 0040  
                      ?_main 0070                        i1l192 0C18                        _RCREG 001A  
           ??_RFID_CheckCard 007A                        _TMR1H 000F                        _TMR1L 000E  
                      _SPBRG 0099                        _TRISB 0086                        _TRISD 0088  
        ___lmul@multiplicand 0076                        _fgetc 0F33                        _getch 0B25  
                      _count 00AB                        _errno 00A9                        btemp0 007E  
                      btemp1 007F                        _width 00A7                        atou@c 004A  
                      atou@i 0048                        atou@w 0045             ?_ESP32_UART_Init 0070  
               ?_RFID_ToCard 0024                        pclath 000A              __end_of_vfscanf 0F33  
                      status 0003                        wtemp0 007E              __end_of_strncmp 0DDB  
              main@cardFound 00DC              __initialization 000F                 __end_of_atou 0674  
               __end_of_main 0767                 vfsfcnvrt@fmt 004E                 vfsfcnvrt@llu 0054  
                     ??_atou 0043                       ??_main 007B                       ?_fgetc 0074  
                     ?_getch 0072        __end_of_Sensor_ReadIR 0B65                       i1l2651 0BFE  
                     i1l2653 0C03                       i1l2655 0C0B                       i1l2657 0C11  
                     i1l2649 0BF8                       i1l2659 0C16            __end_of_RFID_Init 07FD  
          __end_of_RFID_Read 0CBA                       u291_20 0BFE                       u291_21 0BFD  
                     u292_20 0C0B                       u292_21 0C0A                       u293_20 0C16  
                     u293_21 0C15                       _TRISC6 043E                       _TRISC7 043F  
              ??_Timer1_Init 0072           RFID_ToCard@backLen 0027                ??_Servo1_Init 0072  
              ??_Servo2_Init 0072                ??_Servo1_Open 0072                ??_Servo2_Open 0072  
               ___strtoxl@cp 003E               RFID_Write@addr 0020            __end_of_UART_Read 0B4B  
             RFID_Write@data 0078                       ___lmul 0D2D                ??_Sensor_Init 0072  
         RFID_ToCard@command 0032                       _buffer 00B5             ___strtoxl@endptr 0025  
                     _nmatch 00A3                       fgetc@c 0076                       _sscanf 0C4D  
                     _skipws 0CBA                       _ungetc 0DDB           RFID_ToCard@sendLen 0025  
                     atou@ep 0047                       atou@fp 0040             ___strtoxl@prev_a 002D  
         RFID_ToCard@waitIRq 0030                       ltemp0a 0080                       saved_w 007E  
                  ??_vfscanf 007B                       ttemp0a 007F                       wtemp0a 007F  
                  ??_strncmp 0076             RFID_Read@address 0074      __end_of__initialization 0025  
      __end_of_ESP32_AllFull 0B25              _Interrupts_Init 0B53               __pcstackCOMMON 0070  
              __end_of_fgetc 1000                __end_of_getch 0B2A                  RFID_Write@i 0022  
        __end_of_Timer1_Init 0B7A          __end_of_Servo1_Init 0B3C          __end_of_Servo2_Init 0B43  
        __end_of_Servo1_Open 0BAC          __end_of_Servo2_Open 0BDE                   ___ungetbuf 00A0  
                 ___ungetcnt 007B          __end_of_Sensor_Init 0B2F             RFID_ToCard@irqEn 002F  
                    ??_fgetc 0020                      ??_getch 0074                   __pbssBANK0 006F  
                 __pbssBANK1 00A0                   __pbssBANK3 0190                 ??_RFID_Write 0079  
              ?_Servo1_Close 0070                ?_Servo2_Close 0070                   __pmaintext 0674  
                    ?___lmul 0072                   __pintentry 0004               ___lmul@product 0020  
                    ?_sscanf 0065                      ?_skipws 002A                      ?_ungetc 0072  
             _UART_DataReady 0B2F           __end_of_RFID_Write 0D2D            __end_of___strtoxl 0235  
                 __stringtab 0800      __end_of_Interrupts_Init 0B5C          _Sensor_ReadObstacle 0B65  
        RFID_ToCard@backData 0026               ??_Servo1_Close 0072               ??_Servo2_Close 0072  
                _Timer1_Init 0B6E              RFID_Write@i_134 0023                  _Servo1_Init 0B35  
                _Servo2_Init 0B3C                  _Servo1_Open 0B93                  _Servo2_Open 0BC5  
         ESP32_UART_Update@c 00D7                  _Sensor_Init 0B2A           _RFID_CheckCard$172 0039  
     __end_of_UART_DataReady 0B35                      __ptext1 0B6E                      __ptext2 0BC5  
                    __ptext3 0B3C                      __ptext4 0BAC                      __ptext5 0B93  
                    __ptext6 0B35                      __ptext7 0B7A                      __ptext8 0B65  
                    __ptext9 0B5C         ?_Sensor_ReadObstacle 0070                    _T1CONbits 0010  
        RFID_ToCard@lastBits 0031                      fgetc@fp 0074                      _vfscanf 0EB5  
        RFID_ToCard@sendData 0024                      atou@pll 0042                      clrloop0 0B4C  
          _ESP32_UART_Update 0E41                      _strncmp 0D79         end_of_initialization 0025  
         ?_ESP32_UART_Update 0070                    _RFID_Init 0767                    _RFID_Read 0C83  
        ??_ESP32_UART_Update 007B                      sscanf@f 00CC                      sscanf@s 0065  
                    skipws@c 002C            __end_of_vfsfcnvrt 041B                      ungetc@c 0072  
                  _UART_Read 0B43              ?_UART_DataReady 0070                    _PORTAbits 0005  
                  _PORTBbits 0006                    _PORTCbits 0007        ??_Sensor_ReadObstacle 0072  
                  _TRISAbits 0085                    _TRISBbits 0086                    _TRISCbits 0087  
  __end_of_ESP32_UART_Update 0EB5           vfscanf@saved_errno 0060             ?_Interrupts_Init 0070  
               RFID_ToCard@i 0034                 RFID_ToCard@n 0033                   ?_RFID_Init 0070  
                 ?_RFID_Read 0070                  vfscanf@cfmt 0064               __end_of___lmul 0D79  
                 ?_UART_Read 0070               __end_of_sscanf 0C83               __end_of_skipws 0CF3  
             __end_of_ungetc 0E41          start_initialization 000F         __end_of_Servo1_Close 0B93  
       __end_of_Servo2_Close 0BC5                  __end_of_ISR 0C1F                  vfsfcnvrt@ap 004F  
                vfsfcnvrt@fp 004C                  vfsfcnvrt@vp 0053               _servo2_waiting 00B1  
                ___strtoxl@a 003A                  ___strtoxl@c 003F                  ___strtoxl@s 0024  
                   ??___lmul 007A              ___strtoxl@flags 0039              ___strtoxl@limit 0035  
          RFID_ToCard@status 002E            ??_ESP32_UART_Init 0072            RFID_Write@address 0021  
                   ??_sscanf 007B                     ??_skipws 007A                     ??_ungetc 0076  
                 RFID_Read@i 0076                  __pbssCOMMON 007B                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00C9                ??_RFID_ToCard 0028  
              _Sensor_ReadIR 0B5C                    ___strtoxl 0029                  ??_RFID_Init 0024  
                ??_RFID_Read 0072                 ?_Timer1_Init 0070                 ?_Servo1_Init 0070  
               ?_Servo2_Init 0070                 ?_Servo1_Open 0070                 ?_Servo2_Open 0070  
               ?_Sensor_Init 0070                  ??_UART_Read 0072                    __pstrings 0800  
                   ?_vfscanf 005C                     ?_strncmp 0072               ?_Sensor_ReadIR 0070  
             _RFID_CheckCard 0C1F                   ?___strtoxl 0024            interrupt_function 0004  
              _ESP32_AllFull 0B21                    clear_ram0 0B4B                     _PIE1bits 008C  
        __end_of_RFID_ToCard 0575                     _PIR1bits 000C          ___strtoxl@is_signed 0028  
           ??_UART_DataReady 0072                    _vfsfcnvrt 0235                  __stringbase 0805  
                 vfscanf@fmt 005E       RFID_CheckCard@backBits 003A       __end_of_RFID_CheckCard 0C4D  
          ___lmul@multiplier 0072               ___strtoxl$1100 0031               ___strtoxl$1101 0033  
                 vfsfcnvrt@c 005A                   vfsfcnvrt@i 0058               ?_ESP32_AllFull 0070  
               _Servo1_Close 0B7A                 _Servo2_Close 0BAC               ___strtoxl@base 0026  
__end_of_Sensor_ReadObstacle 0B6E          main@object_detected 00DD                   ?_vfsfcnvrt 004C  
         __end_of__stringtab 0806          ESP32_UART_Update@s1 00D8          ESP32_UART_Update@s2 00D9  
        ESP32_UART_Update@s3 00DA          ESP32_UART_Update@s4 00DB                     _all_full 00B0  
            ??_Sensor_ReadIR 0072                     __ptext10 0B2A                     __ptext11 0767  
                   __ptext20 0235                     __ptext12 0C1F                     __ptext21 0D79  
                   __ptext13 041B                     __ptext30 0B2F                     __ptext22 0575  
                   __ptext14 0CF3                     __ptext31 0BDE                     __ptext23 0CBA  
                   __ptext15 0C83                     __ptext32 0B21                     __ptext24 0DDB  
                   __ptext16 0B53                     __ptext33 0BF8                     __ptext25 0F33  
                   __ptext17 0E41                     __ptext26 0B25                     __ptext18 0C4D  
                   __ptext27 0029                     __ptext19 0EB5                     __ptext28 0D2D  
                   __ptext29 0B43              ?_RFID_CheckCard 0070                  _RFID_ToCard 041B  
                ??___strtoxl 0029              _ESP32_UART_Init 0BDE                    sscanf@fmt 0066  
                  sscanf@ret 00C9                    vfscanf@ap 005F                    vfscanf@fp 005C  
                 _INTCONbits 000B                     intlevel1 0000              ??_ESP32_AllFull 0072  
                 _RFID_Write 0CF3                    stringcode 0800                     sscanf@ap 00CB  
                   skipws@fp 002A                     vfscanf@n 0062                     ungetc@fp 0074  
                _servo1_open 00B3                  _servo2_open 00B2         RFID_CheckCard@buffer 0036  
                ??_vfsfcnvrt 0051         RFID_CheckCard@status 0038                     strncmp@l 0072  
                   strncmp@n 0074                     strncmp@r 0073                     stringdir 0800  
                   stringtab 0800      __end_of_ESP32_UART_Init 0BF8           _servo1_delay_ticks 00AD  
